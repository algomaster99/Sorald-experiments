[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] jolokia-parent                                                     [pom]
[INFO] jolokia-test-util                                                  [jar]
[INFO] jolokia-agent-parent                                               [pom]
[INFO] jolokia-core                                                       [jar]
[INFO] jolokia-jsr160                                                     [jar]
[INFO] jolokia-war                                                        [war]
[INFO] jolokia-war-unsecured                                              [war]
[INFO] jolokia-osgi                                                    [bundle]
[INFO] jolokia-osgi-bundle                                             [bundle]
[INFO] jolokia-jmx                                                     [bundle]
[INFO] jolokia-jvm                                                        [jar]
[INFO] jolokia-spring                                                     [jar]
[INFO] jolokia-mule                                                       [jar]
[INFO] jolokia-it-parent                                                  [pom]
[INFO] jolokia-it-core                                                 [bundle]
[INFO] jolokia-it-war                                                     [war]
[INFO] jolokia-client-parent                                              [pom]
[INFO] jolokia-client-java                                             [bundle]
[INFO] jolokia-client-javascript                                   [javascript]
[INFO] jolokia-jmx-adapter                                             [bundle]
[INFO] jolokia-kubernetes                                              [bundle]
[INFO] 
[INFO] ------------------------< org.jolokia:jolokia >-------------------------
[INFO] Building jolokia-parent 1.6.3-SNAPSHOT                            [1/21]
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] -------------------< org.jolokia:jolokia-test-util >--------------------
[INFO] Building jolokia-test-util 1.6.3-SNAPSHOT                         [2/21]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ jolokia-test-util ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/tools/test-util/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ jolokia-test-util ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ jolokia-test-util ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/tools/test-util/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ jolokia-test-util ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ jolokia-test-util ---
[INFO] No tests to run.
[INFO] 
[INFO] ------------------< org.jolokia:jolokia-agent-parent >------------------
[INFO] Building jolokia-agent-parent 1.6.3-SNAPSHOT                      [3/21]
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] ----------------------< org.jolokia:jolokia-core >----------------------
[INFO] Building jolokia-core 1.6.3-SNAPSHOT                              [4/21]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ jolokia-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ jolokia-core ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ jolokia-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 23 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ jolokia-core ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ jolokia-core ---
[INFO] Surefire report directory: /workdir/jolokia/agent/core/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Configuring TestNG with: TestNG652Configurator
WARNING: An illegal reflective access operation has occurred
SUREFIRE-859: WARNING: Illegal reflective access by org.easymock.cglib.core.ReflectUtils$1 (file:/home/maven/.m2/repository/org/easymock/easymock/4.2/easymock-4.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.easymock.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
INFO> No access restrictor found, access to any MBean is allowed
INFO> Using restrictor org.jolokia.restrictor.TestRestrictor
ERROR> Error while accessing access restrictor at file:///some_non_existing_file.xml. Denying all access to MBeans for security reasons. Exception: java.io.FileNotFoundException: /some_non_existing_file.xml (No such file or directory)
ERROR exception> /some_non_existing_file.xml (No such file or directory)
INFO> Using policy access restrictor classpath:/access-restrictor-factory-test.xml
Localhost: 605b8309f1f8 (172.17.0.2) [site-local: true, link-local: false, lb: false] -- nif: eth0 [up: true, mc: true, lb: false, hw: 02:42:ac:11:00:02]
Network interfaces:
  - eth0 [up: true, mc: true, lb: false, hw: 02:42:ac:11:00:02]
    605b8309f1f8 (172.17.0.2) [site-local: true, link-local: false, lb: false] -- nif: eth0 [up: true, mc: true, lb: false, hw: 02:42:ac:11:00:02]
  - lo [up: true, mc: false, lb: true, hw: [none]]
    localhost (127.0.0.1) [site-local: false, link-local: false, lb: true] -- nif: lo [up: true, mc: false, lb: true, hw: [none]]

IFs
name:eth0 (eth0) is loopback: false
name:lo (lo) is loopback: true
Address found via NIF: /172.17.0.2
E> Error while using detector TestDetector: java.lang.RuntimeException
java.lang.RuntimeException
	at org.jolokia.backend.TestDetector.detect(TestDetector.java:56)
	at org.jolokia.backend.MBeanServerHandler.detectServers(MBeanServerHandler.java:291)
	at org.jolokia.backend.MBeanServerHandler.initServerHandle(MBeanServerHandler.java:138)
	at org.jolokia.backend.MBeanServerHandler.<init>(MBeanServerHandler.java:76)
	at org.jolokia.backend.LocalRequestDispatcher.<init>(LocalRequestDispatcher.java:72)
	at org.jolokia.backend.BackendManager.init(BackendManager.java:331)
	at org.jolokia.backend.BackendManager.access$100(BackendManager.java:51)
	at org.jolokia.backend.BackendManager$Initializer.init(BackendManager.java:308)
	at org.jolokia.backend.BackendManager.lazyInitIfNeeded(BackendManager.java:317)
	at org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:148)
	at org.jolokia.request.RawObjectNameTest.assertPropertyNamesOrderedCorrectly(RawObjectNameTest.java:97)
	at org.jolokia.request.RawObjectNameTest.testListCanonicalNameAccess(RawObjectNameTest.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
[Fatal Error] :3:1: Content is not allowed in prolog.
D> 605b8309f1f8/172.17.0.2<-- Listening for queries
D> 605b8309f1f8/172.17.0.2<-- Waiting
D> /172.17.0.2--> Sending
D> 605b8309f1f8/172.17.0.2<-- Discovery request from /172.17.0.2:45250
D> 605b8309f1f8/172.17.0.2<-- Waiting
D> /172.17.0.2--> Received answer from /172.17.0.2
D> /172.17.0.2--> Timeout
D> 605b8309f1f8/172.17.0.2<-- Stop listening
=================================================
D> /172.17.0.2<-- Listening for queries
D> /172.17.0.2<-- Waiting
D> /172.17.0.2--> Sending
D> /172.17.0.2<-- Discovery request from /172.17.0.2:51986
D> /172.17.0.2<-- Waiting
D> /172.17.0.2--> Received answer from /172.17.0.2
D> /172.17.0.2--> Timeout
=================================================
D> /172.17.0.2<-- Stop listening
E> Error while initializing plugin test
javax.management.InstanceAlreadyExistsException: jolokia:type=plugin,name=test
	at java.management/com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:436)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1855)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:955)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:890)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:320)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at org.jolokia.detector.ServerHandle.registerMBeanAtServer(ServerHandle.java:148)
	at org.jolokia.backend.MBeanServerHandler.registerMBean(MBeanServerHandler.java:181)
	at org.jolokia.backend.MBeanServerHandler$1.registerMBean(MBeanServerHandler.java:109)
	at org.jolokia.backend.TestMBeanPlugin.init(TestMBeanPlugin.java:44)
	at org.jolokia.backend.MBeanServerHandler.initPlugins(MBeanServerHandler.java:88)
	at org.jolokia.backend.MBeanServerHandler.<init>(MBeanServerHandler.java:78)
	at org.jolokia.backend.LocalRequestDispatcher.<init>(LocalRequestDispatcher.java:72)
	at org.jolokia.backend.BackendManager.init(BackendManager.java:331)
	at org.jolokia.backend.BackendManager.<init>(BackendManager.java:130)
	at org.jolokia.backend.BackendManager.<init>(BackendManager.java:105)
	at org.jolokia.backend.BackendManager.<init>(BackendManager.java:94)
	at org.jolokia.backend.BackendManagerTest.doubleInit(BackendManagerTest.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=98e0c48a-3448-498a-a414-c1f1b5be8e3b, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
E> Error while initializing plugin test
javax.management.InstanceAlreadyExistsException: jolokia:type=plugin,name=test
	at java.management/com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:436)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1855)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:955)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:890)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:320)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at org.jolokia.detector.ServerHandle.registerMBeanAtServer(ServerHandle.java:148)
	at org.jolokia.backend.MBeanServerHandler.registerMBean(MBeanServerHandler.java:181)
	at org.jolokia.backend.MBeanServerHandler$1.registerMBean(MBeanServerHandler.java:109)
	at org.jolokia.backend.TestMBeanPlugin.init(TestMBeanPlugin.java:44)
	at org.jolokia.backend.MBeanServerHandler.initPlugins(MBeanServerHandler.java:88)
	at org.jolokia.backend.MBeanServerHandler.<init>(MBeanServerHandler.java:78)
	at org.jolokia.backend.LocalRequestDispatcher.<init>(LocalRequestDispatcher.java:72)
	at org.jolokia.backend.BackendManager.init(BackendManager.java:331)
	at org.jolokia.backend.BackendManager.<init>(BackendManager.java:130)
	at org.jolokia.backend.BackendManager.<init>(BackendManager.java:105)
	at org.jolokia.backend.BackendManager.<init>(BackendManager.java:94)
	at org.jolokia.backend.BackendManagerTest.requestDispatcherWithWrongDispatcher(BackendManagerTest.java:104)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
E> Error while initializing plugin test
javax.management.InstanceAlreadyExistsException: jolokia:type=plugin,name=test
	at java.management/com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:436)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1855)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:955)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:890)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:320)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at org.jolokia.detector.ServerHandle.registerMBeanAtServer(ServerHandle.java:148)
	at org.jolokia.backend.MBeanServerHandler.registerMBean(MBeanServerHandler.java:181)
	at org.jolokia.backend.MBeanServerHandler$1.registerMBean(MBeanServerHandler.java:109)
	at org.jolokia.backend.TestMBeanPlugin.init(TestMBeanPlugin.java:44)
	at org.jolokia.backend.MBeanServerHandler.initPlugins(MBeanServerHandler.java:88)
	at org.jolokia.backend.MBeanServerHandler.<init>(MBeanServerHandler.java:78)
	at org.jolokia.backend.LocalRequestDispatcher.<init>(LocalRequestDispatcher.java:72)
	at org.jolokia.backend.BackendManager.init(BackendManager.java:331)
	at org.jolokia.backend.BackendManager.<init>(BackendManager.java:130)
	at org.jolokia.backend.BackendManager.<init>(BackendManager.java:105)
	at org.jolokia.backend.BackendManager.<init>(BackendManager.java:94)
	at org.jolokia.backend.BackendManagerTest.simpleRead(BackendManagerTest.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
D> Execution time: 1 ms
D> Response: {"request":{"mbean":"java.lang:type=Memory","attribute":"HeapMemoryUsage","type":"read"},"value":{"init":262144000,"committed":262144000,"max":4188012544,"used":24600560},"timestamp":1613322819,"status":200}
Tests run: 492, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 15.054 sec - in TestSuite

Results :

Tests run: 492, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] ---------------------< org.jolokia:jolokia-jsr160 >---------------------
[INFO] Building jolokia-jsr160 1.6.3-SNAPSHOT                            [5/21]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ jolokia-jsr160 ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/agent/jsr160/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ jolokia-jsr160 ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ jolokia-jsr160 ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ jolokia-jsr160 ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ jolokia-jsr160 ---
[INFO] Surefire report directory: /workdir/jolokia/agent/jsr160/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.jolokia.jsr160.Jsr160RequestDispatcherTest
Configuring TestNG with: TestNG652Configurator
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.457 sec - in org.jolokia.jsr160.Jsr160RequestDispatcherTest

Results :

Tests run: 11, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] ----------------------< org.jolokia:jolokia-war >-----------------------
[INFO] Building jolokia-war 1.6.3-SNAPSHOT                               [6/21]
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ jolokia-war ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/agent/war/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ jolokia-war ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ jolokia-war ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/agent/war/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ jolokia-war ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ jolokia-war ---
[INFO] No tests to run.
[INFO] 
[INFO] -----------------< org.jolokia:jolokia-war-unsecured >------------------
[INFO] Building jolokia-war-unsecured 1.6.3-SNAPSHOT                     [7/21]
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ jolokia-war-unsecured ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/agent/war-unsecured/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ jolokia-war-unsecured ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ jolokia-war-unsecured ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/agent/war-unsecured/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ jolokia-war-unsecured ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ jolokia-war-unsecured ---
[INFO] No tests to run.
[INFO] 
[INFO] ----------------------< org.jolokia:jolokia-osgi >----------------------
[INFO] Building jolokia-osgi 1.6.3-SNAPSHOT                              [8/21]
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ jolokia-osgi ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ jolokia-osgi ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ jolokia-osgi ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ jolokia-osgi ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ jolokia-osgi ---
[INFO] Surefire report directory: /workdir/jolokia/agent/osgi/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Configuring TestNG with: TestNG652Configurator
Jolokia-Error: Servlet Exception: javax.servlet.ServletException : null
WARNING: An illegal reflective access operation has occurred
SUREFIRE-859: WARNING: Illegal reflective access by org.easymock.cglib.core.ReflectUtils$1 (file:/home/maven/.m2/repository/org/easymock/easymock/4.2/easymock-4.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.easymock.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Tests run: 37, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.626 sec - in TestSuite

Results :

Tests run: 37, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] ------------------< org.jolokia:jolokia-osgi-bundle >-------------------
[INFO] Building jolokia-osgi-bundle 1.6.3-SNAPSHOT                       [9/21]
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ jolokia-osgi-bundle ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/agent/osgi-bundle/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ jolokia-osgi-bundle ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ jolokia-osgi-bundle ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/agent/osgi-bundle/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ jolokia-osgi-bundle ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ jolokia-osgi-bundle ---
[INFO] No tests to run.
[INFO] 
[INFO] ----------------------< org.jolokia:jolokia-jmx >-----------------------
[INFO] Building jolokia-jmx 1.6.3-SNAPSHOT                              [10/21]
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ jolokia-jmx ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/agent/jmx/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ jolokia-jmx ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ jolokia-jmx ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/jolokia/agent/jmx/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ jolokia-jmx ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ jolokia-jmx ---
[INFO] Surefire report directory: /workdir/jolokia/agent/jmx/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Configuring TestNG with: TestNG652Configurator
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.jolokia.jmx.JolokiaMBeanServer (file:/workdir/jolokia/agent/jmx/target/classes/) to field javax.management.modelmbean.RequiredModelMBean.managedResource
WARNING: Please consider reporting this to the maintainers of org.jolokia.jmx.JolokiaMBeanServer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.487 sec - in TestSuite

Results :

Tests run: 16, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] ----------------------< org.jolokia:jolokia-jvm >-----------------------
[INFO] Building jolokia-jvm 1.6.3-SNAPSHOT                              [11/21]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ jolokia-jvm ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ jolokia-jvm ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ jolokia-jvm ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 4 resources
[INFO] Copying 34 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ jolokia-jvm ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ jolokia-jvm ---
[WARNING] The parameter forkMode is deprecated since version 2.14. Use forkCount and reuseForks instead.
[INFO] Surefire report directory: /workdir/jolokia/agent/jvm/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.jolokia.restrictor.TestReverseDnsLookupRestrictor
Configuring TestNG with: TestNG652Configurator
Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.206 sec - in org.jolokia.restrictor.TestReverseDnsLookupRestrictor
Running org.jolokia.restrictor.TestRestrictorWithConfig
Configuring TestNG with: TestNG652Configurator
Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.207 sec - in org.jolokia.restrictor.TestRestrictorWithConfig
Running org.jolokia.jvmagent.TestMain
Configuring TestNG with: TestNG652Configurator
Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.201 sec - in org.jolokia.jvmagent.TestMain
Running org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest
Configuring TestNG with: TestNG652Configurator
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
WARNING: An illegal reflective access operation has occurred
SUREFIRE-859: WARNING: Illegal reflective access by org.easymock.cglib.core.ReflectUtils$1 (file:/home/maven/.m2/repository/org/easymock/easymock/4.2/easymock-4.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.easymock.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
I> Using policy access restrictor classpath:/access-restrictor.xml
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=16d492f3-c42e-45a1-ae09-7688fb4df594, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Listening for queries
D> /172.17.0.2<-- Waiting
D> URI: http://localhost:8080/jolokia/read/java.lang:type=Memory/HeapMemoryUsage
D> Path-Info: read/java.lang:type=Memory/HeapMemoryUsage
D> Request: JmxReadRequest[attribute=HeapMemoryUsage, objectName = java.lang:type=Memory]
E> Error 403
java.lang.Exception: HTTP method get is not allowed according to the installed security policy
	at org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:214)
	at org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.executeGetRequest(JolokiaHttpHandler.java:278)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.doHandle(JolokiaHttpHandler.java:235)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.simpleMemoryGetReadRequest(JolokiaHttpHandlerTest.java:382)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.customRestrictor(JolokiaHttpHandlerTest.java:206)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:129)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:113)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
D> /172.17.0.2<-- Stop listening
E> Error while accessing access restrictor at file:///not-existing.xml. Denying all access to MBeans for security reasons. Exception: java.io.FileNotFoundException: /not-existing.xml (No such file or directory)
java.io.FileNotFoundException: /not-existing.xml (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:219)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:112)
	at java.base/sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:86)
	at java.base/sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:184)
	at java.base/java.net.URL.openStream(URL.java:1140)
	at org.jolokia.restrictor.RestrictorFactory.lookupPolicyRestrictor(RestrictorFactory.java:119)
	at org.jolokia.restrictor.RestrictorFactory.createRestrictor(RestrictorFactory.java:50)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.createRestrictor(JolokiaHttpHandler.java:127)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.start(JolokiaHttpHandler.java:106)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.simpleMemoryGetReadRequest(JolokiaHttpHandlerTest.java:380)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.customRestrictor(JolokiaHttpHandlerTest.java:206)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:129)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:113)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=4494059a-76d7-44ce-ac76-32c1b4c8fbb4, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
I> Using policy access restrictor classpath:/access-restrictor.xml
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=477cc474-c344-4e33-8ed8-dfdfa32e1f62, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Listening for queries
D> /172.17.0.2<-- Waiting
D> URI: http://localhost:8080/jolokia/read/java.lang:type=Memory/HeapMemoryUsage
D> Path-Info: read/java.lang:type=Memory/HeapMemoryUsage
D> Request: JmxReadRequest[attribute=HeapMemoryUsage, objectName = java.lang:type=Memory]
E> Error 403
java.lang.Exception: HTTP method get is not allowed according to the installed security policy
	at org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:214)
	at org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.executeGetRequest(JolokiaHttpHandler.java:278)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.doHandle(JolokiaHttpHandler.java:235)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.simpleMemoryGetReadRequest(JolokiaHttpHandlerTest.java:382)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.customRestrictor(JolokiaHttpHandlerTest.java:206)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:129)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:113)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
D> /172.17.0.2<-- Stop listening
I> Using policy access restrictor classpath:/access-restrictor.xml
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=7f6e2ee4-1781-4674-93f8-33c4dd7eb5c3, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Listening for queries
D> /172.17.0.2<-- Waiting
I> Using restrictor org.jolokia.restrictor.DenyAllRestrictor
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=3512aad5-811f-4a49-8bbe-ee0f47962c57, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Stop listening
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Listening for queries
I> /172.17.0.2<-- Socket closed, reopening it
I> Using restrictor org.jolokia.restrictor.AllowAllRestrictor
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=5e1c6271-9dbf-4325-a42a-dc6176416079, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Waiting
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Stop listening
D> /172.17.0.2<-- Listening for queries
I> /172.17.0.2<-- Socket closed, reopening it
D> /172.17.0.2<-- Waiting
I> Using restrictor org.jolokia.restrictor.TestRestrictorWithConfig
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=70590c59-0581-4f8a-9337-900032aa585a, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Stop listening
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Listening for queries
D> /172.17.0.2<-- Waiting
I> Using restrictor org.jolokia.restrictor.TestRestrictorWithConfig
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=ee308e58-f852-4b09-a43d-62854517aa0e, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Stop listening
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Listening for queries
I> /172.17.0.2<-- Socket closed, reopening it
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Listening for queries
I> /172.17.0.2<-- Socket closed, reopening it
D> /172.17.0.2<-- Waiting
D> /172.17.0.2<-- Waiting
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Stop listening
D> /172.17.0.2<-- Listening for queries
D> /172.17.0.2<-- Waiting
E> Error 400
java.lang.IllegalArgumentException: HTTP Method PUT is not supported.
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.doHandle(JolokiaHttpHandler.java:242)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.invalidMethod(JolokiaHttpHandlerTest.java:180)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:129)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:113)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
D> /172.17.0.2<-- Stop listening
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Listening for queries
D> /172.17.0.2<-- Waiting
I> Using restrictor org.jolokia.restrictor.TestReverseDnsLookupRestrictor
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=b0fb0c5a-6db9-46e8-ba86-15bcf273b923, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Stop listening
I> /172.17.0.2<-- Socket closed, reopening it
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Listening for queries
I> Using restrictor org.jolokia.restrictor.TestReverseDnsLookupRestrictor
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=0aee6427-194b-44ca-958d-551fb64e6220, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Waiting
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Stop listening
D> /172.17.0.2<-- Listening for queries
D> /172.17.0.2<-- Waiting
D> URI: http://localhost:8080/jolokia
D> Execution time: 0 ms
D> Response: {"request":{"mbean":"java.lang:type=Memory","attribute":"HeapMemoryUsage","type":"read"},"value":{"init":262144000,"committed":262144000,"max":4188012544,"used":49485312},"timestamp":1613322824,"status":200}
D> /172.17.0.2<-- Stop listening
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Listening for queries
D> URI: http://localhost:8080/jolokia?callback=data
D> Execution time: 0 ms
D> Response: {"request":{"mbean":"java.lang:type=Memory","attribute":"HeapMemoryUsage","type":"read"},"value":{"init":262144000,"committed":262144000,"max":4188012544,"used":50533888},"timestamp":1613322824,"status":200}
D> /172.17.0.2<-- Waiting
D> /172.17.0.2<-- Stop listening
I> No access restrictor found, access to any MBean is allowed
I> /172.17.0.2<-- Socket closed, reopening it
I> No access restrictor found, access to any MBean is allowed
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=b937d72d-0326-49c9-bc0c-22c14e8d1db3, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Listening for queries
D> /172.17.0.2<-- Waiting
E> Error 400
java.lang.IllegalArgumentException: Invalid callback name given, which must be a valid javascript function name
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.validateCallbackIfGiven(JolokiaHttpHandler.java:256)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.doHandle(JolokiaHttpHandler.java:230)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.checkInvalidCallback(JolokiaHttpHandlerTest.java:124)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.testInvalidCallbackGetNonStreaming(JolokiaHttpHandlerTest.java:109)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:129)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:113)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
D> /172.17.0.2<-- Stop listening
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=e17bae6c-3133-4e55-8069-95024cfc6ec6, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Listening for queries
D> /172.17.0.2<-- Waiting
E> Error 400
java.lang.IllegalArgumentException: Invalid callback name given, which must be a valid javascript function name
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.validateCallbackIfGiven(JolokiaHttpHandler.java:256)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandler.doHandle(JolokiaHttpHandler.java:230)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.checkInvalidCallback(JolokiaHttpHandlerTest.java:124)
	at org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest.testInvalidCallbackGetStreaming(JolokiaHttpHandlerTest.java:104)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:129)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:113)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
I> No access restrictor found, access to any MBean is allowed
D> /172.17.0.2<-- Stop listening
I> No access restrictor found, access to any MBean is allowed
I> /172.17.0.2<-- Socket closed, reopening it
D> /172.17.0.2<-- Listening for queries
D> URI: http://localhost:8080/jolokia/read/java.lang:type=Memory/HeapMemoryUsage?mimeType=application/json
D> Path-Info: read/java.lang:type=Memory/HeapMemoryUsage
D> Request: JmxReadRequest[attribute=HeapMemoryUsage, objectName = java.lang:type=Memory]
D> Execution time: 0 ms
D> Response: {"request":{"mbean":"java.lang:type=Memory","attribute":"HeapMemoryUsage","type":"read"},"value":{"init":262144000,"committed":262144000,"max":4188012544,"used":61019648},"timestamp":1613322824,"status":200}
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> /172.17.0.2<-- Socket closed, reopening it
D> /172.17.0.2<-- Waiting
I> jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=136db0b0-dddd-4050-8cc1-f030b1593479, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
I> Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
I> Jolokia Discovery MBean registration is skipped because there is already one registered.
D> /172.17.0.2<-- Listening for queries
D> URI: http://localhost:8080/jolokia/list?maxDepth=1
D> Path-Info: list
D> Request: JmxListRequest[]
D> Execution time: 2 ms
D> Response: {"request":{"type":"list"},"value":{"JMImplementation":"1","java.util.logging":"1","jdk.management.jfr":"1","java.lang":"1","com.sun.management":"1","jmx4perl":"1","java.nio":"1","jolokia":"1"},"timestamp":1613322824,"status":200}
I> /172.17.0.2<-- Socket closed, reopening it
D> /172.17.0.2<-- Waiting
Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.913 sec - in org.jolokia.jvmagent.handler.JolokiaHttpHandlerTest
Running org.jolokia.jvmagent.client.command.EncryptCommandTest
Configuring TestNG with: TestNG652Configurator
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.262 sec - in org.jolokia.jvmagent.client.command.EncryptCommandTest
Running org.jolokia.jvmagent.client.command.CommandDispatcherTest
Configuring TestNG with: TestNG652Configurator
WARNING: An illegal reflective access operation has occurred
SUREFIRE-859: WARNING: Illegal reflective access by org.easymock.cglib.core.ReflectUtils$1 (file:/home/maven/.m2/repository/org/easymock/easymock/4.2/easymock-4.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.easymock.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.396 sec - in org.jolokia.jvmagent.client.command.CommandDispatcherTest
Running org.jolokia.jvmagent.client.util.VirtualMachineHandlerTest
Configuring TestNG with: TestNG652Configurator
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.jolokia.jvmagent.client.util.VirtualMachineHandler (file:/workdir/jolokia/agent/jvm/target/classes/) to method sun.tools.attach.VirtualMachineImpl.detach()
WARNING: Please consider reporting this to the maintainers of org.jolokia.jvmagent.client.util.VirtualMachineHandler
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ERROR: 25650 /workdir/jolokia/agent/jvm/target/surefire/surefirebooter5121612218372631387.jar /workdir/jolokia/agent/jvm/target/surefire/surefire10411646345943918211tmp /workdir/jolokia/agent/jvm/target/surefire/surefire_82598935635205219365tmp: org.jolokia.jvmagent.client.util.ProcessingException: Cannot attach to process-ID 25650 (InvocationTarget com.sun.tools.attach.VirtualMachine).
See --help for possible reasons.
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.601 sec - in org.jolokia.jvmagent.client.util.VirtualMachineHandlerTest
Running org.jolokia.jvmagent.client.util.OptionsAndArgsTest
Configuring TestNG with: TestNG652Configurator
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.27 sec - in org.jolokia.jvmagent.client.util.OptionsAndArgsTest
Running org.jolokia.jvmagent.client.util.ProcessingExceptionTest
Configuring TestNG with: TestNG652Configurator
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.237 sec - in org.jolokia.jvmagent.client.util.ProcessingExceptionTest
Running org.jolokia.jvmagent.client.AgentLauncherTest
Configuring TestNG with: TestNG652Configurator
Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.218 sec - in org.jolokia.jvmagent.client.AgentLauncherTest
Running org.jolokia.jvmagent.JvmAgentConfigTest
Configuring TestNG with: TestNG652Configurator
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.345 sec - in org.jolokia.jvmagent.JvmAgentConfigTest
Running org.jolokia.jvmagent.JolokiaServerTest
Configuring TestNG with: TestNG652Configurator
I> No access restrictor found, access to any MBean is allowed
I> /172.17.0.2<-- Socket closed, reopening it
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
[Ljava.security.cert.X509Certificate;@27d4a09
Port 22332 already in use, trying next ...
Jolokia: Discarding unsupported cipher suite: SSL_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_RSA_WITH_AES_128_CBC_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_ECDH_RSA_WITH_AES_128_CBC_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_DHE_RSA_WITH_AES_128_CBC_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_DHE_DSS_WITH_AES_128_CBC_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
Jolokia: Discarding unsupported cipher suite: SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA
Jolokia: Discarding unsupported cipher suite: SSL_RSA_WITH_AES_128_CBC_SHA
Jolokia: Discarding unsupported cipher suite: SSL_ECDH_ECDSA_WITH_AES_128_CBC_SHA
Jolokia: Discarding unsupported cipher suite: SSL_ECDH_RSA_WITH_AES_128_CBC_SHA
Jolokia: Discarding unsupported cipher suite: SSL_DHE_RSA_WITH_AES_128_CBC_SHA
Jolokia: Discarding unsupported cipher suite: SSL_DHE_DSS_WITH_AES_128_CBC_SHA
Jolokia: Discarding unsupported cipher suite: SSL_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_ECDHE_RSA_WITH_AES_128_GCM_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_RSA_WITH_AES_128_GCM_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_ECDH_RSA_WITH_AES_128_GCM_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_DHE_RSA_WITH_AES_128_GCM_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_DHE_DSS_WITH_AES_128_GCM_SHA256
Jolokia: Discarding unsupported cipher suite: SSL_RSA_WITH_DES_CBC_SHA
Jolokia: Discarding unsupported cipher suite: SSL_DHE_RSA_WITH_DES_CBC_SHA
Jolokia: Discarding unsupported cipher suite: SSL_DHE_DSS_WITH_DES_CBC_SHA
I> No access restrictor found, access to any MBean is allowed
WARNING: An illegal reflective access operation has occurred
SUREFIRE-859: WARNING: Illegal reflective access by org.jolokia.util.ClassUtil (file:/workdir/jolokia/agent/core/target/classes/) to constructor sun.security.x509.X500Name(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
WARNING: Please consider reporting this to the maintainers of org.jolokia.util.ClassUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Port 22332 already in use, trying next ...
Port 22333 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
[Ljava.security.cert.X509Certificate;@66565121
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
[Ljava.security.cert.X509Certificate;@1c32386d
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
[Ljava.security.cert.X509Certificate;@5d8bafa9
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
Port 22332 already in use, trying next ...
Port 22333 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
Port 22333 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
Port 22333 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
Port 22333 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Port 22332 already in use, trying next ...
Port 22333 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
Tests run: 27, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.28 sec - in org.jolokia.jvmagent.JolokiaServerTest
Running org.jolokia.jvmagent.ParseUriTest
Configuring TestNG with: TestNG652Configurator
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.234 sec - in org.jolokia.jvmagent.ParseUriTest
Running org.jolokia.jvmagent.security.KeyStoreUtilTest
Configuring TestNG with: TestNG652Configurator
WARNING: An illegal reflective access operation has occurred
SUREFIRE-859: WARNING: Illegal reflective access by org.jolokia.util.ClassUtil (file:/workdir/jolokia/agent/core/target/classes/) to constructor sun.security.x509.X500Name(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
WARNING: Please consider reporting this to the maintainers of org.jolokia.util.ClassUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.535 sec - in org.jolokia.jvmagent.security.KeyStoreUtilTest
Running org.jolokia.jvmagent.security.UserPasswordAuthenticatorTest
Configuring TestNG with: TestNG652Configurator
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.228 sec - in org.jolokia.jvmagent.security.UserPasswordAuthenticatorTest
Running org.jolokia.jvmagent.security.MultiAuthenticatorTest
Configuring TestNG with: TestNG652Configurator
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.253 sec - in org.jolokia.jvmagent.security.MultiAuthenticatorTest
Running org.jolokia.jvmagent.security.DelegatingAuthenticatorTest
Configuring TestNG with: TestNG652Configurator
2021-02-14 17:13:54.745:INFO::Logging to STDERR via org.mortbay.log.StdErrLog
2021-02-14 17:13:54.761:INFO::jetty-6.1.26
2021-02-14 17:13:54.778:INFO::Started SocketConnector@0.0.0.0:22332
WARNING: An illegal reflective access operation has occurred
SUREFIRE-859: WARNING: Illegal reflective access by org.easymock.cglib.core.ReflectUtils$1 (file:/home/maven/.m2/repository/org/easymock/easymock/4.2/easymock-4.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.easymock.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2021-02-14 17:13:55.845:INFO::Stopped SocketConnector@0.0.0.0:22332
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.469 sec - in org.jolokia.jvmagent.security.DelegatingAuthenticatorTest
Running org.jolokia.jvmagent.security.PKCS1UtilTest
Configuring TestNG with: TestNG652Configurator
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.232 sec - in org.jolokia.jvmagent.security.PKCS1UtilTest
Running org.jolokia.jvmagent.security.JaasAuthenticatorTest
Configuring TestNG with: TestNG652Configurator
WARNING: An illegal reflective access operation has occurred
SUREFIRE-859: WARNING: Illegal reflective access by org.easymock.cglib.core.ReflectUtils$1 (file:/home/maven/.m2/repository/org/easymock/easymock/4.2/easymock-4.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.easymock.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.358 sec - in org.jolokia.jvmagent.security.JaasAuthenticatorTest
Running org.jolokia.jvmagent.security.ClientCertAuthenticatorTest
Configuring TestNG with: TestNG652Configurator
WARNING: An illegal reflective access operation has occurred
SUREFIRE-859: WARNING: Illegal reflective access by org.easymock.cglib.core.ReflectUtils$1 (file:/home/maven/.m2/repository/org/easymock/easymock/4.2/easymock-4.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.easymock.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.397 sec - in org.jolokia.jvmagent.security.ClientCertAuthenticatorTest
Running org.jolokia.jvmagent.security.BaseAuthenticatorTest
Configuring TestNG with: TestNG652Configurator
Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.199 sec - in org.jolokia.jvmagent.security.BaseAuthenticatorTest
Running org.jolokia.jvmagent.JvmAgentTest
Configuring TestNG with: TestNG652Configurator
Could not stop Jolokia agent: java.lang.NullPointerException
Could not stop Jolokia agent: java.lang.NullPointerException
Could not stop Jolokia agent: java.lang.NullPointerException
Could not start Jolokia agent: java.net.BindException: Address already in use
Could not start Jolokia agent: java.net.BindException: Address already in use
Could not start Jolokia agent: java.net.BindException: Address already in use
I> No access restrictor found, access to any MBean is allowed
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.326 sec - in org.jolokia.jvmagent.JvmAgentTest

Results :

Tests run: 136, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] ---------------------< org.jolokia:jolokia-spring >---------------------
[INFO] Building jolokia-spring 1.6.3-SNAPSHOT                           [12/21]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ jolokia-spring ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ jolokia-spring ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ jolokia-spring ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 4 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ jolokia-spring ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ jolokia-spring ---
[INFO] Surefire report directory: /workdir/jolokia/agent/jvm-spring/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Configuring TestNG with: TestNG652Configurator
Port selected: 22332
Feb 14, 2021 5:13:58 PM org.springframework.context.support.AbstractApplicationContext prepareRefresh
INFO: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@3a6bb9bf: startup date [Sun Feb 14 17:13:58 UTC 2021]; root of context hierarchy
Feb 14, 2021 5:13:58 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [spring-jolokia-context.xml]
Feb 14, 2021 5:13:58 PM org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons
INFO: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@37911f88: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,mbeanExporter,jolokiaMBeanServer,bla,blub,configuration,jolokia]; root of factory hierarchy
Feb 14, 2021 5:13:58 PM org.springframework.jmx.export.MBeanExporter afterPropertiesSet
INFO: Registering beans for JMX exposure on startup
I> No access restrictor found, access to any MBean is allowed
>>> URL to check: http://127.0.0.1:22332/j4p/
Feb 14, 2021 5:13:59 PM org.springframework.context.support.AbstractApplicationContext prepareRefresh
INFO: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14f5da2c: startup date [Sun Feb 14 17:13:59 UTC 2021]; root of context hierarchy
Feb 14, 2021 5:13:59 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [spring-jolokia-plain-beans.xml]
Feb 14, 2021 5:13:59 PM org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons
INFO: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@62fe6067: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,configuration,jolokia]; root of factory hierarchy
I> No access restrictor found, access to any MBean is allowed
>>> URL to check: http://127.0.0.1:22332/jolokia/
Feb 14, 2021 5:13:59 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [simple-config.xml]
Feb 14, 2021 5:13:59 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [simple-server.xml]
I> No access restrictor found, access to any MBean is allowed
I> /172.17.0.2<-- Socket closed, reopening it
I> No access restrictor found, access to any MBean is allowed
I> No access restrictor found, access to any MBean is allowed
I> /172.17.0.2<-- Socket closed, reopening it
I> No access restrictor found, access to any MBean is allowed
I> /172.17.0.2<-- Socket closed, reopening it
I> No access restrictor found, access to any MBean is allowed
Exception in thread "Thread-13" java.lang.IllegalStateException: server in wrong state
	at jdk.httpserver/sun.net.httpserver.ServerImpl.start(ServerImpl.java:140)
	at jdk.httpserver/sun.net.httpserver.HttpServerImpl.start(HttpServerImpl.java:58)
	at org.jolokia.jvmagent.JolokiaServer$1.run(JolokiaServer.java:118)
	at java.base/java.lang.Thread.run(Thread.java:834)
Port 22332 already in use, trying next ...
Port 22332 already in use, trying next ...
Port 22332 already in use, trying next ...
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
>>> URL to check: http://127.0.0.1:22333/j4p/
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
>>> URL to check: http://127.0.0.1:22333/jolokia/
Port 22332 already in use, trying next ...
I> No access restrictor found, access to any MBean is allowed
>>> URL to check: http://127.0.0.1:22333/jolokia/
Tests run: 10, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 3.593 sec <<< FAILURE! - in TestSuite
systemProperties(org.jolokia.jvmagent.spring.SpringJolokiaServerTest)  Time elapsed: 2.582 sec  <<< FAILURE!
java.net.BindException: Address already in use
	at java.base/sun.nio.ch.Net.bind0(Native Method)
	at java.base/sun.nio.ch.Net.bind(Net.java:455)
	at java.base/sun.nio.ch.Net.bind(Net.java:447)
	at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:227)
	at java.base/sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:80)
	at jdk.httpserver/sun.net.httpserver.ServerImpl.<init>(ServerImpl.java:101)
	at jdk.httpserver/sun.net.httpserver.HttpServerImpl.<init>(HttpServerImpl.java:50)
	at jdk.httpserver/sun.net.httpserver.DefaultHttpServerProvider.createHttpServer(DefaultHttpServerProvider.java:35)
	at jdk.httpserver/com.sun.net.httpserver.HttpServer.create(HttpServer.java:137)
	at org.jolokia.jvmagent.JolokiaServer.createHttpServer(JolokiaServer.java:238)
	at org.jolokia.jvmagent.JolokiaServer.init(JolokiaServer.java:167)
	at org.jolokia.jvmagent.spring.SpringJolokiaAgent.afterPropertiesSet(SpringJolokiaAgent.java:80)
	at org.jolokia.jvmagent.spring.SpringJolokiaServerTest.checkSystemPropertyMode(SpringJolokiaServerTest.java:66)
	at org.jolokia.jvmagent.spring.SpringJolokiaServerTest.systemProperties(SpringJolokiaServerTest.java:54)


Results :

Failed tests: 
  SpringJolokiaServerTest.systemProperties:54->checkSystemPropertyMode:66 » Bind

Tests run: 10, Failures: 1, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for jolokia-parent 1.6.3-SNAPSHOT:
[INFO] 
[INFO] jolokia-parent ..................................... SUCCESS [  0.003 s]
[INFO] jolokia-test-util .................................. SUCCESS [  0.315 s]
[INFO] jolokia-agent-parent ............................... SUCCESS [  0.000 s]
[INFO] jolokia-core ....................................... SUCCESS [ 15.468 s]
[INFO] jolokia-jsr160 ..................................... SUCCESS [  0.612 s]
[INFO] jolokia-war ........................................ SUCCESS [  0.008 s]
[INFO] jolokia-war-unsecured .............................. SUCCESS [  0.008 s]
[INFO] jolokia-osgi ....................................... SUCCESS [  1.042 s]
[INFO] jolokia-osgi-bundle ................................ SUCCESS [  0.069 s]
[INFO] jolokia-jmx ........................................ SUCCESS [  0.778 s]
[INFO] jolokia-jvm ........................................ SUCCESS [ 16.185 s]
[INFO] jolokia-spring ..................................... FAILURE [  4.078 s]
[INFO] jolokia-mule ....................................... SKIPPED
[INFO] jolokia-it-parent .................................. SKIPPED
[INFO] jolokia-it-core .................................... SKIPPED
[INFO] jolokia-it-war ..................................... SKIPPED
[INFO] jolokia-client-parent .............................. SKIPPED
[INFO] jolokia-client-java ................................ SKIPPED
[INFO] jolokia-client-javascript .......................... SKIPPED
[INFO] jolokia-jmx-adapter ................................ SKIPPED
[INFO] jolokia-kubernetes ................................. SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  39.223 s
[INFO] Finished at: 2021-02-14T17:14:02Z
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.18.1:test (default-test) on project jolokia-spring: There are test failures.
[ERROR] 
[ERROR] Please refer to /workdir/jolokia/agent/jvm-spring/target/surefire-reports for the individual test results.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <args> -rf :jolokia-spring
