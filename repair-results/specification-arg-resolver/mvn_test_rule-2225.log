[INFO] Scanning for projects...
[INFO] 
[INFO] -------------< net.kaczmarzyk:specification-arg-resolver >--------------
[INFO] Building specification-arg-resolver 2.6.3-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ specification-arg-resolver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/specification-arg-resolver/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ specification-arg-resolver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ specification-arg-resolver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ specification-arg-resolver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ specification-arg-resolver ---
[INFO] Surefire report directory: /workdir/specification-arg-resolver/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running net.kaczmarzyk.MultiLevelJoinE2eTest
23:24:15.936 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:15.953 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57a3e26a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75c56eb9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4bc222e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2dc9b0f5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6531a794, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b5fad2d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5e17553a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3eb91815, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@56dc1551, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@102cec62, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@74f6c5d8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@27912e3]
23:24:16.953 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:24:17.021 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 3 repository interfaces.
23:24:17.418 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$79634710] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:24:17.605 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
23:24:17.729 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
23:24:17.803 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:24:17.848 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.3.7.Final}
23:24:17.849 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
23:24:17.884 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
23:24:18.010 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:24:18.280 [main] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
23:24:18.625 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@736f8837'
23:24:18.627 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:24:19.592 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:24:19.629 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:24:19.875 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7fb313e3 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@771ede0d, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks_withPagination@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1fd73dcb testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:19.881 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:19.881 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:19.891 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 10 ms
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils (file:/home/maven/.m2/repository/org/springframework/spring-core/5.1.4.RELEASE/spring-core-5.1.4.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.springframework.cglib.core.ReflectUtils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
23:24:19.999 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:24:20.014 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 ) order by generatedAlias0.id asc
23:24:20.024 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[NE] Node: '<>'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias2'
    |        |  \-[IDENT] Node: 'name'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:20.057 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[NE] BinaryLogicOperatorNode: '<>'
    |        +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |        |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |        |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:20.062 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 ) order by generatedAlias0.id asc
23:24:20.062 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name<>? order by customer0_.id asc
23:24:20.108 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 )
23:24:20.109 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '1'
          |  \-[NUM_INT] Node: '1'
          \-[NE] Node: '<>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:20.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '1'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[NE] BinaryLogicOperatorNode: '<>'
             +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:20.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 )
23:24:20.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name<>?
23:24:20.201 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7fb313e3 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@771ede0d, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks_withPagination@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1fd73dcb testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:20.204 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7fb313e3 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@70f37190, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1fd73dcb testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.204 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.204 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.206 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:20.230 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7fb313e3 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@70f37190, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1fd73dcb testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:20.232 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7fb313e3 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@31e5d408, testMethod = shouldFindCustomersUsingMultilevelJoin@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1fd73dcb testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.232 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.233 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.234 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:20.239 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name=:param0 ) order by generatedAlias0.id asc
23:24:20.240 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias2'
    |        |  \-[IDENT] Node: 'name'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:20.242 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |        |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |        |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:20.242 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name=:param0 ) order by generatedAlias0.id asc
23:24:20.242 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name=? order by customer0_.id asc
23:24:20.258 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7fb313e3 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@31e5d408, testMethod = shouldFindCustomersUsingMultilevelJoin@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1fd73dcb testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.589 sec
Running net.kaczmarzyk.NotInE2eTest
23:24:20.261 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:20.261 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@20673498, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7a8d6eb3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@50c99398, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@cc4a0dd, org.springframework.test.context.support.DirtiesContextTestExecutionListener@159e9629, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4f78adf, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@183e8c8a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@31d51518, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@509bf2d5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@68823b6b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4b4b02d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1dd01876]
23:24:20.264 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@7f680a9a, testMethod = findsByListOfNotAllowedEnumValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.265 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.265 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.267 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:20.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0)
23:24:20.277 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:20.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:20.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0)
23:24:20.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender not in  (?)
23:24:20.311 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@7f680a9a, testMethod = findsByListOfNotAllowedEnumValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:20.312 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@3bd7829b, testMethod = findsByListOfNotAllowedLongValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.313 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.313 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.315 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:20.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (78L, 93L, 86L, 99L)
23:24:20.322 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '78L'
             +-[NUM_LONG] Node: '93L'
             +-[NUM_LONG] Node: '86L'
             \-[NUM_LONG] Node: '99L'

23:24:20.323 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '78'
             +-[NUM_LONG] LiteralNode: '93'
             +-[NUM_LONG] LiteralNode: '86'
             \-[NUM_LONG] LiteralNode: '99'

23:24:20.323 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (78L, 93L, 86L, 99L)
23:24:20.323 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (78 , 93 , 86 , 99)
23:24:20.336 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@3bd7829b, testMethod = findsByListOfNotAllowedLongValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:20.338 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5c39da9e, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.339 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.339 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.341 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:20.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (101L)
23:24:20.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[NUM_LONG] Node: '101L'

23:24:20.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NUM_LONG] LiteralNode: '101'

23:24:20.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (101L)
23:24:20.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (101)
23:24:20.364 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5c39da9e, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:20.366 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@9063080, testMethod = findsByListOfNotAllowedStringValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.366 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.367 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.369 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:20.382 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not in (:param0, :param1)
23:24:20.383 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:20.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:20.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not in (:param0, :param1)
23:24:20.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name not in  (? , ?)
23:24:20.398 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@9063080, testMethod = findsByListOfNotAllowedStringValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:20.401 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5e81b406, testMethod = findsByListOfNotAllowedStringValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.402 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.403 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.405 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:20.423 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5e81b406, testMethod = findsByListOfNotAllowedStringValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:20.426 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@3c2d4274, testMethod = findsByListOfNotAllowedEnumValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.427 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.427 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.429 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:20.445 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@3c2d4274, testMethod = findsByListOfNotAllowedEnumValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:20.447 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5854e526, testMethod = findsByListOfNotAllowedDateValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.448 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.448 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.450 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:20.457 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0, :param1)
23:24:20.458 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:20.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:20.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0, :param1)
23:24:20.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date not in  (? , ?)
23:24:20.475 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5854e526, testMethod = findsByListOfNotAllowedDateValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:20.477 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1e250539, testMethod = findsByListOfNotAllowedDateValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.478 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.478 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.480 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:20.496 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1e250539, testMethod = findsByListOfNotAllowedDateValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:20.498 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5112858c, testMethod = findsByListOfNotAllowedLongValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:20.499 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:20.499 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:20.501 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:20.506 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (239L, 254L, 247L, 260L)
23:24:20.506 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '239L'
             +-[NUM_LONG] Node: '254L'
             +-[NUM_LONG] Node: '247L'
             \-[NUM_LONG] Node: '260L'

23:24:20.507 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '239'
             +-[NUM_LONG] LiteralNode: '254'
             +-[NUM_LONG] LiteralNode: '247'
             \-[NUM_LONG] LiteralNode: '260'

23:24:20.507 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (239L, 254L, 247L, 260L)
23:24:20.507 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (239 , 254 , 247 , 260)
23:24:20.517 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2b26d289 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5112858c, testMethod = findsByListOfNotAllowedLongValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a33d655 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.241 sec
Running net.kaczmarzyk.ConstSpELValE2eTest
23:24:20.522 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:20.522 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6b71fded, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1633962a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2afd8972, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@33fefbbe, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5784f6b9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5d0ca8a5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1b7c1c6f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5f9b37b5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2f5a23c1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@17abef0f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6ccf06f1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aefb242]
23:24:20.719 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:24:20.739 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 3 repository interfaces.
23:24:20.785 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$79634710] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:24:20.816 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
23:24:20.817 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
23:24:20.831 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:24:20.849 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:24:20.921 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@736f8837'
23:24:20.924 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:24:21.069 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:24:21.075 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:24:21.150 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@39df2652, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.151 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.151 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.154 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:24:21.180 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:24:21.180 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:24:21.181 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:21.182 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:21.182 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:24:21.182 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=?
23:24:21.206 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@39df2652, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.209 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@fed510f, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.210 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.210 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.212 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.233 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@fed510f, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.235 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@138c2ba, testMethod = filtersBySingleSpecWithoutParamUsingRawStringConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.235 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.235 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.237 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.248 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@138c2ba, testMethod = filtersBySingleSpecWithoutParamUsingRawStringConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.250 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@549fc0b3, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithTemporalConstructor@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.251 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.251 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.255 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
23:24:21.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>=:param0
23:24:21.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:21.268 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@3c9e169f}

23:24:21.268 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>=:param0
23:24:21.268 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date>=?
23:24:21.274 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@549fc0b3, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithTemporalConstructor@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.277 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@32df1a2a, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpEL@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.278 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.279 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.281 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.299 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@32df1a2a, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpEL@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.301 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@401e36ab, testMethod = filtersBySingleSpecWithoutParamUsingConstValWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.302 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.302 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.304 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.315 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2c70da80 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@401e36ab, testMethod = filtersBySingleSpecWithoutParamUsingConstValWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52a9c251 testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.796 sec
Running net.kaczmarzyk.DefaultValE2eTest
23:24:21.318 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:21.319 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@79c514e4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@233d40da, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f6bb6d8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@189f5ed8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@492c1b1b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5eb974, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@72f112d1, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@10faebc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3927de0e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4c475547, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@36dab184, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@71b9b035]
23:24:21.321 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7505ef47 testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@2a6f3ac7, testMethod = filtersBySingleSpecWithSingleDefaultVal@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fe866b testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.322 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.322 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.324 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.331 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:24:21.332 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:21.333 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:21.333 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:24:21.333 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=?
23:24:21.341 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7505ef47 testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@2a6f3ac7, testMethod = filtersBySingleSpecWithSingleDefaultVal@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fe866b testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.343 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7505ef47 testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@7f15639c, testMethod = filtersBySingleSpecWithoutParam@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fe866b testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.344 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.344 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.345 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:21.358 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7505ef47 testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@7f15639c, testMethod = filtersBySingleSpecWithoutParam@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@68fe866b testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 sec
Running net.kaczmarzyk.InE2eTest
23:24:21.366 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:21.367 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@74c997b1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@593f6c3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4afb2c90, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@358b70c4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@d471ddb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@17f8c75e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@474f69d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6a17ab87, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5f0bcadb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@e182453, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2d7bfb13, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7ae736a8]
23:24:21.369 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@6a8a54f5, testMethod = findsByListOfAllowedLongValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.370 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.370 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.372 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (107L, 122L)
23:24:21.382 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '107L'
             \-[NUM_LONG] Node: '122L'

23:24:21.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '107'
             \-[NUM_LONG] LiteralNode: '122'

23:24:21.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (107L, 122L)
23:24:21.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (107 , 122)
23:24:21.393 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@6a8a54f5, testMethod = findsByListOfAllowedLongValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.396 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@185b998d, testMethod = findsByListOfAllowedDateValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.397 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.397 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.399 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.403 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0, :param1)
23:24:21.403 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:21.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:21.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0, :param1)
23:24:21.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date in (? , ?)
23:24:21.412 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@185b998d, testMethod = findsByListOfAllowedDateValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.414 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@310045fc, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathNameWithoutUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.414 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.414 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.416 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.420 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2)
23:24:21.420 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param1'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:21.421 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:21.421 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2)
23:24:21.421 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ? , ?)
23:24:21.428 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@310045fc, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathNameWithoutUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.430 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@247246ea, testMethod = findsByListOfAllowedStringValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.430 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.430 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.432 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.436 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2, :param3, :param4)
23:24:21.436 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param1'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param2'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param3'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param4'

23:24:21.437 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@7a8e35d1}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:21.438 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2, :param3, :param4)
23:24:21.438 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ? , ? , ? , ?)
23:24:21.446 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@247246ea, testMethod = findsByListOfAllowedStringValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.448 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@65ff1e6d, testMethod = findsByListOfAllowedLongValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.452 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.452 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.454 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.458 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (199L, 214L)
23:24:21.458 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '199L'
             \-[NUM_LONG] Node: '214L'

23:24:21.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '199'
             \-[NUM_LONG] LiteralNode: '214'

23:24:21.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (199L, 214L)
23:24:21.459 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (199 , 214)
23:24:21.467 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@65ff1e6d, testMethod = findsByListOfAllowedLongValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.468 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@6b5df313, testMethod = findsByListOfAllowedDateValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.469 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.469 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.470 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:21.489 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@6b5df313, testMethod = findsByListOfAllowedDateValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.491 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@78333d5a, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.491 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.491 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.493 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (245L)
23:24:21.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[NUM_LONG] Node: '245L'

23:24:21.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NUM_LONG] LiteralNode: '245'

23:24:21.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (245L)
23:24:21.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (245)
23:24:21.505 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@78333d5a, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.506 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@46e05384, testMethod = findsByListOfAllowedStringValuesUsingParamSeparatorAndWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.507 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.507 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.509 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.519 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@46e05384, testMethod = findsByListOfAllowedStringValuesUsingParamSeparatorAndWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.521 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@53eb4ef5, testMethod = findsByListOfAllowedStringValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.521 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.521 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.523 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.526 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1)
23:24:21.526 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:21.527 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:21.527 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1)
23:24:21.527 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ?)
23:24:21.534 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@53eb4ef5, testMethod = findsByListOfAllowedStringValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.536 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2680474c, testMethod = findsByListOfAllowedEnumValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.536 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.536 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.538 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0, :param1)
23:24:21.542 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:21.542 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:21.542 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0, :param1)
23:24:21.542 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in (? , ?)
23:24:21.552 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2680474c, testMethod = findsByListOfAllowedEnumValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.553 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2baf9cd4, testMethod = findsByListOfAllowedEnumValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.554 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.554 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.556 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.567 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2baf9cd4, testMethod = findsByListOfAllowedEnumValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.568 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@e8acdfc, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.569 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.569 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.571 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.585 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40a1916d testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@e8acdfc, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4623c0d3 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.227 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedRepeatedJoinSpecInterfaceArgumentResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.spring.data.jpa.web.WebRequestProcessingContextTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedSpecInterfaceArgumentResolverTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running net.kaczmarzyk.spring.data.jpa.web.OrSpecificationResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinsSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedAndSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.RepeatedJoinResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedConjunctionSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.DisjunctionSpecificationResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running net.kaczmarzyk.spring.data.jpa.web.WebRequestProcessingContextPathVariableResolverTest
Tests run: 40, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverSpecConstructorTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest
23:24:21.742 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:21.743 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3c833d43, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5c98fe31, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6385b96c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@17b3feb7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@327fa027, org.springframework.test.context.transaction.TransactionalTestExecutionListener@290db92f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@670d2bbb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6f4327ab, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@20f2ccfc, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6472dd0c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6a2c62ca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1c247e5b]
23:24:21.745 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6333ac03 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@701dc5ad, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveDefaultValueWithInvalidSpELSyntax@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@474172e5 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.746 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.746 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.748 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.754 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6333ac03 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@701dc5ad, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveDefaultValueWithInvalidSpELSyntax@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@474172e5 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.755 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6333ac03 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7dd63fcc, testMethod = returnsSpecificationWithRawDefaultValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@474172e5 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.756 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.756 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.758 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.760 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6333ac03 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7dd63fcc, testMethod = returnsSpecificationWithRawDefaultValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@474172e5 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.761 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6333ac03 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@207475a2, testMethod = returnsSpecificationWithDefaultValueInSpEL@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@474172e5 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.761 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.761 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.763 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:21.765 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6333ac03 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@207475a2, testMethod = returnsSpecificationWithDefaultValueInSpEL@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@474172e5 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.766 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6333ac03 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@3c5077f6, testMethod = returnsSpecificationWithDefaultValue@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@474172e5 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.767 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.767 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.769 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.770 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6333ac03 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@3c5077f6, testMethod = returnsSpecificationWithDefaultValue@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@474172e5 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverPathVariablesTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest
23:24:21.775 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:21.775 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@27ebe541, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4430d9be, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@73e6d475, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7f6cf9b2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7d5caf3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@456a0e9e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ea2f3a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@18d3e7fc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@31782447, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@24f3d208, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7531ba53, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@72da5f0e]
23:24:21.782 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25892fe3 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@17765082, testMethod = returnsSpecificationWithConstValue@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@17fac5b2 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.784 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.785 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.787 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.789 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25892fe3 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@17765082, testMethod = returnsSpecificationWithConstValue@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@17fac5b2 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.791 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25892fe3 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@7d07e6aa, testMethod = returnsSpecificationWithConstValueInSpEL@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@17fac5b2 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.791 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.791 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.793 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.795 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25892fe3 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@7d07e6aa, testMethod = returnsSpecificationWithConstValueInSpEL@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@17fac5b2 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.796 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25892fe3 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@4f168322, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveConstValueWithInvalidSpELSyntax@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@17fac5b2 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.797 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.797 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.799 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.801 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25892fe3 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@4f168322, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveConstValueWithInvalidSpELSyntax@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@17fac5b2 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.802 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25892fe3 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@73b8c79b, testMethod = returnsSpecificationWithRawConstValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@17fac5b2 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:21.802 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.802 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.804 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:21.806 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25892fe3 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@73b8c79b, testMethod = returnsSpecificationWithRawConstValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@17fac5b2 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running net.kaczmarzyk.spring.data.jpa.web.SpecificationArgumentResolverTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverOnTypeMismatchTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.web.AndSpecificationResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.ConjunctionSpecificationResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.web.JoinSpecificationResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedDisjunctionSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedRepeatedJoinFetchSpecInterfaceArgumentResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinFetchSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedOrSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedSpecInterfaceWithComplexInheritanceTreeTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.RepeatedJoinFetchResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.ConverterFallbackMechanismTest
Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running net.kaczmarzyk.spring.data.jpa.utils.TypeUtilTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.PathVariableResolverTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.ConverterTest
Tests run: 24, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToLocalDateConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToLocalDateTimeConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToInstantConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToOffsetDateTimeConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.JoinPathUtilsTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest
23:24:21.914 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:21.914 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7dcbcede, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2de4045a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@22ef1086, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7b5ffde0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5841716b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@550a78ed, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@fbb39ea, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@b8f6500, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@58968733, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5e5d41dc, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@87f4794, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78a894fe]
23:24:21.916 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54139bd3 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@19a652cd, testMethod = rejectsInvalidNumberOfArguments@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1cc07127 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.916 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.916 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.918 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.920 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54139bd3 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@19a652cd, testMethod = rejectsInvalidNumberOfArguments@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1cc07127 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.921 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54139bd3 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@39993624, testMethod = rejectsMissingArgument@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1cc07127 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.922 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.923 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:21.925 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54139bd3 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@39993624, testMethod = rejectsMissingArgument@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1cc07127 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.926 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54139bd3 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@2cfde5a4, testMethod = filtersByNestedProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1cc07127 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.927 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.927 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.928 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:21.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street not like :param0
23:24:21.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:21.931 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:21.931 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street not like :param0
23:24:21.931 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street not like ?
23:24:21.934 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54139bd3 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@2cfde5a4, testMethod = filtersByNestedProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1cc07127 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:21.936 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54139bd3 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@4f36fc2d, testMethod = filtersByFirstLevelProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1cc07127 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:21.936 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:21.936 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:21.938 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:21.939 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not like :param0
23:24:21.939 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:21.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:21.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not like :param0
23:24:21.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not like ?
23:24:21.942 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not like :param0
23:24:21.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:21.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:21.944 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not like :param0
23:24:21.944 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name not like ?
23:24:21.946 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54139bd3 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@4f36fc2d, testMethod = filtersByFirstLevelProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1cc07127 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running net.kaczmarzyk.spring.data.jpa.domain.ConjunctionUnitTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.204 sec
Running net.kaczmarzyk.spring.data.jpa.domain.IsNullTest
23:24:22.153 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.153 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33918d45, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@29ee8374, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5a20c592, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@29abec7e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@166fa7ab, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4bc76331, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1717238e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6129f50e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@a90447f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7abe70f7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@541b377d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a343975]
23:24:22.155 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26fd2a82 testClass = IsNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.IsNullTest@23f31375, testMethod = findsCustomersWithNullField@IsNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40b0c9be testClass = IsNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.155 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.155 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is null
23:24:22.159 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'nickName'

23:24:22.160 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'customer0_.nick_name' {propertyName=nickName,dereferenceType=PRIMITIVE,getPropertyPath=nickName,path=generatedAlias0.nickName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             \-[IDENT] IdentNode: 'nickName' {originalText=nickName}

23:24:22.160 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is null
23:24:22.160 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.nick_name is null
23:24:22.163 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26fd2a82 testClass = IsNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.IsNullTest@23f31375, testMethod = findsCustomersWithNullField@IsNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40b0c9be testClass = IsNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest
23:24:22.164 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.164 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@66f04451, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@68406796, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1793ed9d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@f061449, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6bb01b34, org.springframework.test.context.transaction.TransactionalTestExecutionListener@27ad03, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@850579f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@374bbe80, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5c496ae6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@613b9bd9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6bddd4ce, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@108d88b]
23:24:22.166 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@692cab82 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@73d76b9d, testMethod = rejectsInvalidNumberOfArguments@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@11aeb673 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.167 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.167 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.168 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.170 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@692cab82 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@73d76b9d, testMethod = rejectsInvalidNumberOfArguments@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@11aeb673 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.172 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@692cab82 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@1a77faae, testMethod = rejectsMissingArgument@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@11aeb673 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.172 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.172 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.174 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.175 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@692cab82 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@1a77faae, testMethod = rejectsMissingArgument@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@11aeb673 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.177 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@692cab82 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@7e846cca, testMethod = filtersByNestedProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@11aeb673 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.177 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.177 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.179 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.180 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.address.street) like :param0
23:24:22.181 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'address'
          |        \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.181 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |        \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:22.182 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.address.street) like :param0
23:24:22.182 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.street) like ?
23:24:22.186 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@692cab82 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@7e846cca, testMethod = filtersByNestedProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@11aeb673 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.187 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@692cab82 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@7c33d81f, testMethod = filtersByFirstLevelProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@11aeb673 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.188 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.188 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.189 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.190 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName) like :param0
23:24:22.190 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.191 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:22.191 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName) like :param0
23:24:22.191 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name) like ?
23:24:22.193 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName) like :param0
23:24:22.193 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.194 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:22.194 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName) like :param0
23:24:22.194 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name) like ?
23:24:22.196 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@692cab82 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@7c33d81f, testMethod = filtersByFirstLevelProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@11aeb673 testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
Running net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest
23:24:22.198 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.198 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4af9217f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a64be00, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@473711df, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@14318e90, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1740a7b0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@581b9fe6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@27ddc4d3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3f008bb6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2defc6c1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@298f8835, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@60bd3a8b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5b5b5011]
23:24:22.200 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@47f74d8f, testMethod = performsMultilevelJoinFetchOfTypeInnerAndLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.201 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.201 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.202 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.205 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:24:22.206 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:24:22.207 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:24:22.208 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:24:22.208 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:24:22.222 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@47f74d8f, testMethod = performsMultilevelJoinFetchOfTypeInnerAndLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.224 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1c322b6a, testMethod = performsTwoFetchesUsingSingleInnerJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.224 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.224 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.226 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.229 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:24:22.229 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.232 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.232 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:24:22.232 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id order by customer0_.id asc
23:24:22.236 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1c322b6a, testMethod = performsTwoFetchesUsingSingleInnerJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.238 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@63838642, testMethod = performsMultilevelFetchWithAttributeOfTypeList@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.238 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.238 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.240 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.244 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsList as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:22.245 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsList'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags_list,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tagslist2_.order_id as order_id1_10_1__, tagslist2_.tags_list_id as tags_lis2_10_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsList], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsList as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:22.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tagslist2_.order_id as order_id1_10_1__, tagslist2_.tags_list_id as tags_lis2_10_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:24:22.250 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@63838642, testMethod = performsMultilevelFetchWithAttributeOfTypeList@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.251 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@f5eff92, testMethod = performsMultilevelFetchWithAttributeOfTypeCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.252 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.252 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.254 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsCollection as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:22.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsCollection'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders_tags_collection,item_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tagscollec2_.order_id as order_id1_9_1__, tagscollec2_.tags_collection_id as tags_col2_9_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsCollection], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsCollection as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:22.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tagscollec2_.order_id as order_id1_9_1__, tagscollec2_.tags_collection_id as tags_col2_9_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:24:22.264 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@f5eff92, testMethod = performsMultilevelFetchWithAttributeOfTypeCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.265 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@6fe27001, testMethod = performsDistinctFetchWhenDistinctParamIsSetToTrue@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.266 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.266 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.268 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.270 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:24:22.270 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |  |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  |  \-[IDENT] Node: 'data'
       |  |  |  |  \-[IDENT] Node: 'jpa'
       |  |  |  \-[IDENT] Node: 'Customer'
       |  |  \-[ALIAS] Node: 'generatedAlias0'
       |  \-[JOIN] Node: 'join'
       |     +-[LEFT] Node: 'left'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'generatedAlias0'
       |     |  \-[IDENT] Node: 'orders'
       |     \-[ALIAS] Node: 'generatedAlias1'
       \-[SELECT] Node: 'select'
          +-[DISTINCT] Node: 'distinct'
          \-[IDENT] Node: 'generatedAlias0'

23:24:22.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}

23:24:22.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:24:22.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id
23:24:22.275 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@6fe27001, testMethod = performsDistinctFetchWhenDistinctParamIsSetToTrue@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.276 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@24b2e53b, testMethod = performsMultilevelJoinFetchOfTypeLeftAndInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.277 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.277 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.279 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.281 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:24:22.282 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:24:22.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:24:22.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:24:22.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:24:22.291 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@24b2e53b, testMethod = performsMultilevelJoinFetchOfTypeLeftAndInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.292 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@7d35707d, testMethod = performsMultilevelFetchWithAttributeOfTypeSet@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.292 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.292 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.294 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.296 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:22.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.298 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.298 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:22.298 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:24:22.301 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@7d35707d, testMethod = performsMultilevelFetchWithAttributeOfTypeSet@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.303 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@11cf1be7, testMethod = throwsIllegalArgumentExceptionWhenAliasAndMultiplePathsWerePassedToConstructor@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.303 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.303 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.305 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.309 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@11cf1be7, testMethod = throwsIllegalArgumentExceptionWhenAliasAndMultiplePathsWerePassedToConstructor@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.310 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@43f50bfe, testMethod = performsNotDistinctFetchWhenDistinctParamIsSetToFalse@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.311 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.311 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.312 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.314 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:24:22.315 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |  |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  |  \-[IDENT] Node: 'data'
       |  |  |  |  \-[IDENT] Node: 'jpa'
       |  |  |  \-[IDENT] Node: 'Customer'
       |  |  \-[ALIAS] Node: 'generatedAlias0'
       |  \-[JOIN] Node: 'join'
       |     +-[LEFT] Node: 'left'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'generatedAlias0'
       |     |  \-[IDENT] Node: 'orders'
       |     \-[ALIAS] Node: 'generatedAlias1'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:24:22.315 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}

23:24:22.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:24:22.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id
23:24:22.319 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@43f50bfe, testMethod = performsNotDistinctFetchWhenDistinctParamIsSetToFalse@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.320 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@2df9b4f3, testMethod = performsTwoFetchesUsingSingleLeftJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.321 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.321 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.322 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.324 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:24:22.325 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.326 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.326 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:24:22.326 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id order by customer0_.id asc
23:24:22.330 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@2df9b4f3, testMethod = performsTwoFetchesUsingSingleLeftJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.331 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@29c3dd33, testMethod = performsMultilevelFetchWithSimpleEntityAttribute@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.332 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.332 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.333 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.337 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.note as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:22.337 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.338 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ordernote2_.id as id1_6_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'ordernote2_.customer_id as customer3_6_2_, ordernote2_.title as title2_6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[ordernote2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.338 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.note as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:22.338 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, ordernote2_.id as id1_6_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, ordernote2_.customer_id as customer3_6_2_, ordernote2_.title as title2_6_2_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id where 1=1 order by customer0_.id asc
23:24:22.342 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@29c3dd33, testMethod = performsMultilevelFetchWithSimpleEntityAttribute@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.343 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@54ba7366, testMethod = performsMultilevelJoinFetchOfTypeLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.344 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.344 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.345 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.351 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@54ba7366, testMethod = performsMultilevelJoinFetchOfTypeLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.352 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@947782d, testMethod = fetchesLazyCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.353 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.353 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.354 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.356 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 order by generatedAlias0.id asc
23:24:22.357 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.357 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.358 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 order by generatedAlias0.id asc
23:24:22.358 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id order by customer0_.id asc
23:24:22.361 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@947782d, testMethod = fetchesLazyCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.362 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@681ae1ce, testMethod = performsMultilevelJoinFetchOfTypeInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.362 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.362 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.364 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:24:22.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:24:22.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:24:22.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:24:22.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:24:22.371 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@681ae1ce, testMethod = performsMultilevelJoinFetchOfTypeInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.372 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5edf9eb1, testMethod = throwsIllegalArgumentExceptionWhenFetchJoinsAreDefinedInInvalidOrder@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.373 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.373 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.374 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.379 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5edf9eb1, testMethod = throwsIllegalArgumentExceptionWhenFetchJoinsAreDefinedInInvalidOrder@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.381 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@34278424, testMethod = performsTwoFetchesUsingTwoJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.381 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.382 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.384 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.387 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:22.387 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:22.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id where 1=1 order by customer0_.id asc
23:24:22.392 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a42bb6 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@34278424, testMethod = performsTwoFetchesUsingTwoJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dd6aa3e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.198 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest
23:24:22.393 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.393 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1741e4a6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6e194937, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1099de65, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@391aee9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1b6d0ee9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3f19ac42, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@612d3732, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6fc53b18, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1cac6a4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6e25ae24, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@66b98075, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@20e27a41]
23:24:22.395 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@3a8af40a, testMethod = producesEmptyResultOnTypeMismatch_longPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.395 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.395 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.397 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.398 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 0=1
23:24:22.399 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '0'
          \-[NUM_INT] Node: '1'

23:24:22.399 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '0'
          \-[NUM_INT] LiteralNode: '1'

23:24:22.399 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 0=1
23:24:22.399 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where 0=1
23:24:22.401 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@3a8af40a, testMethod = producesEmptyResultOnTypeMismatch_longPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.402 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@827f9c8, testMethod = usesWrappedSpecWhenTypeMatches@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.403 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.403 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.404 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.405 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=539L
23:24:22.405 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '539L'

23:24:22.406 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '539'

23:24:22.406 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=539L
23:24:22.406 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=539
23:24:22.408 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@827f9c8, testMethod = usesWrappedSpecWhenTypeMatches@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.409 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@60d5f350, testMethod = producesEmptyResultOnTypeMismatch_boolean@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.410 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.410 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.412 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.414 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@60d5f350, testMethod = producesEmptyResultOnTypeMismatch_boolean@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.415 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@16204061, testMethod = producesEmptyResultOnTypeMismatch_intPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.415 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.415 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.417 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.419 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@16204061, testMethod = producesEmptyResultOnTypeMismatch_intPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.420 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@30100995, testMethod = producesEmptyResultOnTypeMismatch_date@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.421 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.421 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.423 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.425 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@30100995, testMethod = producesEmptyResultOnTypeMismatch_date@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.426 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@6c2d9f6f, testMethod = producesEmptyResultOnTypeMismatch_enum@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.427 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.427 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.428 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.431 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@6c2d9f6f, testMethod = producesEmptyResultOnTypeMismatch_enum@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.432 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@2ca9368b, testMethod = producesEmptyResultOnTypeMismatch_long@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.432 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.432 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.434 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.436 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c41f6be testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@2ca9368b, testMethod = producesEmptyResultOnTypeMismatch_long@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44a84775 testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 sec
Running net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest
23:24:22.438 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.438 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a885113, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@22ec1877, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4dac863d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@503308de, org.springframework.test.context.support.DirtiesContextTestExecutionListener@482bdb02, org.springframework.test.context.transaction.TransactionalTestExecutionListener@ac64dd0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@23f2bfdb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6bcf2683, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7daa0333, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@453a699b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@73000a80, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6169c15d]
23:24:22.440 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@23885f6a, testMethod = filtersByPrimitiveBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.441 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.441 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.442 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.443 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>=:param0
23:24:22.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:22.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>=:param0
23:24:22.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold>=?
23:24:22.447 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@23885f6a, testMethod = filtersByPrimitiveBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.449 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@157e14f2, testMethod = filtersByDoubleValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.449 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.449 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.451 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.452 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.21D
23:24:22.452 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:24:22.453 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:24:22.453 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.21D
23:24:22.453 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>=65.21
23:24:22.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.2D
23:24:22.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.2D'

23:24:22.456 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.2'

23:24:22.456 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.2D
23:24:22.456 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>=65.2
23:24:22.458 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@157e14f2, testMethod = filtersByDoubleValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.459 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@3f321f8, testMethod = filtersByPrimitiveLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.459 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.459 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.461 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.462 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>=56L
23:24:22.462 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '56L'

23:24:22.463 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '56'

23:24:22.463 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>=56L
23:24:22.463 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long>=56
23:24:22.465 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@3f321f8, testMethod = filtersByPrimitiveLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.466 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@46ab3c70, testMethod = filtersByPrimitiveIntValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.466 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.466 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.468 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>=56
23:24:22.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '56'

23:24:22.470 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '56'

23:24:22.470 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>=56
23:24:22.470 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int>=56
23:24:22.472 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@46ab3c70, testMethod = filtersByPrimitiveIntValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.473 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@3a9d88ca, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.474 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.474 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.476 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.477 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>=:param0
23:24:22.477 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:22.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>=:param0
23:24:22.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>=?
23:24:22.481 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@3a9d88ca, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.482 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@40364273, testMethod = filtersByString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.482 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.482 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.484 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.484 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>=:param0
23:24:22.485 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.485 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:22.485 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>=:param0
23:24:22.485 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name>=?
23:24:22.489 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@40364273, testMethod = filtersByString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.490 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@4cbb217e, testMethod = filterByDateWithCustomDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.491 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.491 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.492 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.498 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@4cbb217e, testMethod = filterByDateWithCustomDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.499 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@356de111, testMethod = filtersByPrimitiveFloatValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.499 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.499 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.501 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.502 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.21F
23:24:22.503 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:24:22.503 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:24:22.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.21F
23:24:22.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.21
23:24:22.505 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0F
23:24:22.505 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.0F'

23:24:22.506 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.0'

23:24:22.506 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0F
23:24:22.506 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.0
23:24:22.507 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.09F
23:24:22.507 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.09F'

23:24:22.508 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.09'

23:24:22.508 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.09F
23:24:22.508 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.09
23:24:22.509 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0999F
23:24:22.509 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.0999F'

23:24:22.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.0999'

23:24:22.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0999F
23:24:22.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.0999
23:24:22.512 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@356de111, testMethod = filtersByPrimitiveFloatValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.513 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@25370af5, testMethod = filtersByBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.513 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.513 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.515 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>=:param0
23:24:22.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:22.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>=:param0
23:24:22.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj>=?
23:24:22.520 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@25370af5, testMethod = filtersByBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.521 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7bc02941, testMethod = filtersByIntegerValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.521 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.521 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.523 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>=56
23:24:22.524 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '56'

23:24:22.524 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '56'

23:24:22.524 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>=56
23:24:22.524 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight>=56
23:24:22.526 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7bc02941, testMethod = filtersByIntegerValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.528 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@427bbaac, testMethod = filtersByLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.528 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.528 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.530 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.531 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>=593L
23:24:22.531 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '593L'

23:24:22.531 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '593'

23:24:22.532 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>=593L
23:24:22.532 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id>=593
23:24:22.534 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@427bbaac, testMethod = filtersByLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.535 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@6bb7e609, testMethod = filtersByEnumValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.535 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.535 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.537 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.538 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>=:param0
23:24:22.538 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.538 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:22.539 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>=:param0
23:24:22.539 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender>=?
23:24:22.542 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@6bb7e609, testMethod = filtersByEnumValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.543 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@22457838, testMethod = filtersByEnumString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.543 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.543 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.545 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>=:param0
23:24:22.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@2a670af9}

23:24:22.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>=:param0
23:24:22.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string>=?
23:24:22.550 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@22457838, testMethod = filtersByEnumString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.551 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@705448e7, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.551 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.551 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.553 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.555 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@705448e7, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.557 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@180ee8dd, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.557 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.557 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.559 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.560 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@180ee8dd, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.562 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1f32fb77, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.562 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.562 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.564 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.565 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e0d0819 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1f32fb77, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@5556813d testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.129 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest
23:24:22.567 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.567 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@78e547aa, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@766f5049, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6a5f05f5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@207b440f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@72f18fbd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e9074b2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6cf2b638, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1653cc95, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@68212585, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1569e9d7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6c53ce34, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@64ec804f]
23:24:22.569 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1cbe3497 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@5c3d91bc, testMethod = rejectsInvalidNumberOfArguments@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb84986 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.569 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.569 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.571 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.572 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1cbe3497 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@5c3d91bc, testMethod = rejectsInvalidNumberOfArguments@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb84986 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.573 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1cbe3497 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@50f71f48, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb84986 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.574 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.574 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.575 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<=:param0
23:24:22.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.577 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:22.577 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<=:param0
23:24:22.577 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<=?
23:24:22.580 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1cbe3497 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@50f71f48, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb84986 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.581 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1cbe3497 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@1cce2194, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb84986 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.581 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.581 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.583 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.585 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1cbe3497 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@1cce2194, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb84986 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.586 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1cbe3497 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@4f8d7222, testMethod = rejectsMissingArgument@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb84986 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.586 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.586 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.588 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.589 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1cbe3497 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@4f8d7222, testMethod = rejectsMissingArgument@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb84986 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NullTest
23:24:22.590 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.590 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@48c7773, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@306ea73f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@29ff01df, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@dfa6f48, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6aaaa66b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2f38b35e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7e98be9f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@20461e2b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1f607db6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@75288f47, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4effab3b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5e584389]
23:24:22.592 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56653a4d testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@72c743f4, testMethod = findsCustomersWithNotNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4bb4c147 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.592 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.592 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.594 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.595 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is not null
23:24:22.595 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'nickName'

23:24:22.596 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'customer0_.nick_name' {propertyName=nickName,dereferenceType=PRIMITIVE,getPropertyPath=nickName,path=generatedAlias0.nickName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             \-[IDENT] IdentNode: 'nickName' {originalText=nickName}

23:24:22.596 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is not null
23:24:22.596 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.nick_name is not null
23:24:22.598 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56653a4d testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@72c743f4, testMethod = findsCustomersWithNotNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4bb4c147 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.599 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@56653a4d testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@24af33a1, testMethod = findsCustomersWithNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4bb4c147 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.599 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.599 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.601 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.603 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@56653a4d testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@24af33a1, testMethod = findsCustomersWithNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4bb4c147 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LikeTest
23:24:22.607 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.608 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4071aa13, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@13f05e8e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7ff4f301, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ba1f5d1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@464de784, org.springframework.test.context.transaction.TransactionalTestExecutionListener@57d8d5ed, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@fec48ec, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@be73bbd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@223f8c82, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@33d95295, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5e1fd72a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6c173587]
23:24:22.610 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62af3d4c testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@ad038f8, testMethod = rejectsInvalidNumberOfArguments@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@42becaf6 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.611 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.611 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.612 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.614 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62af3d4c testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@ad038f8, testMethod = rejectsInvalidNumberOfArguments@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@42becaf6 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.615 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62af3d4c testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@675f9bc6, testMethod = rejectsMissingArgument@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@42becaf6 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.615 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.615 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.617 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.618 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62af3d4c testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@675f9bc6, testMethod = rejectsMissingArgument@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@42becaf6 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.619 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62af3d4c testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@70aebcee, testMethod = filtersByNestedProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@42becaf6 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.619 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.619 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.621 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.622 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street like :param0
23:24:22.622 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.623 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:22.623 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street like :param0
23:24:22.623 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street like ?
23:24:22.625 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62af3d4c testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@70aebcee, testMethod = filtersByNestedProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@42becaf6 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.626 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62af3d4c testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@27dbe9a3, testMethod = filtersByFirstLevelProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@42becaf6 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.627 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.627 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.628 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.629 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName like :param0
23:24:22.629 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.630 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:22.630 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName like :param0
23:24:22.630 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name like ?
23:24:22.631 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName like :param0
23:24:22.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:22.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName like :param0
23:24:22.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name like ?
23:24:22.634 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62af3d4c testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@27dbe9a3, testMethod = filtersByFirstLevelProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@42becaf6 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest
23:24:22.636 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.636 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@e655f9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1c215c31, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7dabc2f9, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@418287ac, org.springframework.test.context.support.DirtiesContextTestExecutionListener@73f94bf8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@65af4162, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@46b0fb24, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@13dabbb9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2a4594b1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@35fe64ca, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@74d6d08a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3217aada]
23:24:22.637 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@ecd7bee testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@45c95343, testMethod = rejectsTooManyArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70900474 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.638 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.638 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.639 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.641 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@ecd7bee testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@45c95343, testMethod = rejectsTooManyArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70900474 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.642 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@ecd7bee testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@6c4d8b04, testMethod = rejectsTooFewArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70900474 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.642 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.642 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.644 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.645 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@ecd7bee testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@6c4d8b04, testMethod = rejectsTooFewArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70900474 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.646 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@ecd7bee testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@47a55fdf, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70900474 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.646 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.646 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.648 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.649 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate between :param0 and :param1
23:24:22.649 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:22.650 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:22.650 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate between :param0 and :param1
23:24:22.650 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date between ? and ?
23:24:22.653 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@ecd7bee testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@47a55fdf, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70900474 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.654 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@ecd7bee testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@2f9739e0, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70900474 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.655 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.655 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.656 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.659 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@ecd7bee testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@2f9739e0, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70900474 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest
23:24:22.660 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.660 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@72a90036, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@703e8fe8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d29b8d3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2c34fb51, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1626e651, org.springframework.test.context.transaction.TransactionalTestExecutionListener@12e37ab2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@72ecb71d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@79893462, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@583c416c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@51038633, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@46c09751, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@76da91cf]
23:24:22.662 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61e67cc1 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@118bace5, testMethod = rejectsInvalidNumberOfArguments@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55002de6 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.662 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.662 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.664 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.666 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@61e67cc1 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@118bace5, testMethod = rejectsInvalidNumberOfArguments@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55002de6 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.667 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61e67cc1 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@5240654, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55002de6 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.667 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.667 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.669 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.669 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<:param0
23:24:22.669 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.670 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:22.670 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<:param0
23:24:22.670 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<?
23:24:22.673 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@61e67cc1 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@5240654, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55002de6 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.674 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61e67cc1 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@efc5686, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55002de6 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.674 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.674 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.676 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.678 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@61e67cc1 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@efc5686, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55002de6 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.679 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61e67cc1 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@426ead99, testMethod = rejectsMissingArgument@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55002de6 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.680 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.680 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.681 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.682 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@61e67cc1 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@426ead99, testMethod = rejectsMissingArgument@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55002de6 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest
23:24:22.684 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.684 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5739e15e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@41f17bb7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@18be3e85, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@50ee7857, org.springframework.test.context.support.DirtiesContextTestExecutionListener@48455005, org.springframework.test.context.transaction.TransactionalTestExecutionListener@223a679, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6b00eaae, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@480f1b59, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2a28bf25, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@35a7c477, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@591e1df7, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@697b105e]
23:24:22.685 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@155afbd7 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@396d21ec, testMethod = rejectsInvalidNumberOfArguments@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@61e7d7f2 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.686 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.686 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.688 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.689 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@155afbd7 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@396d21ec, testMethod = rejectsInvalidNumberOfArguments@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@61e7d7f2 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.690 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@155afbd7 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@304394d8, testMethod = rejectsMissingArgument@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@61e7d7f2 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.690 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.690 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.692 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.693 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@155afbd7 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@304394d8, testMethod = rejectsMissingArgument@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@61e7d7f2 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.694 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@155afbd7 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@38c408c7, testMethod = filtersByNestedProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@61e7d7f2 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.695 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.695 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.696 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.700 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@155afbd7 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@38c408c7, testMethod = filtersByNestedProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@61e7d7f2 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.701 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@155afbd7 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@17556c0a, testMethod = filtersByFirstLevelProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@61e7d7f2 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.701 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.702 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.703 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.707 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@155afbd7 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@17556c0a, testMethod = filtersByFirstLevelProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@61e7d7f2 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest
23:24:22.708 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.708 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@a151493, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7359781c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@73985c99, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@36477cf, org.springframework.test.context.support.DirtiesContextTestExecutionListener@21775abc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@19d65f16, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@289bb421, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@8e164f2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@13d86de8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@385dae6a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4d923ffc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4ed70448]
23:24:22.710 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61f94cac testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@7be9e5fb, testMethod = rejectsInvalidNumberOfArguments@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a937d6f testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.710 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.710 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.712 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.714 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@61f94cac testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@7be9e5fb, testMethod = rejectsInvalidNumberOfArguments@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a937d6f testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.715 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61f94cac testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@402cdf60, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a937d6f testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.715 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.715 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.717 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>:param0
23:24:22.718 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.718 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:22.718 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>:param0
23:24:22.718 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>?
23:24:22.721 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@61f94cac testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@402cdf60, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a937d6f testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.722 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61f94cac testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@4446b235, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a937d6f testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.723 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.723 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.725 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.727 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@61f94cac testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@4446b235, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a937d6f testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.728 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61f94cac testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@48dad22b, testMethod = rejectsMissingArgument@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a937d6f testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.728 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.728 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.730 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.731 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@61f94cac testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@48dad22b, testMethod = rejectsMissingArgument@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a937d6f testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.spring.data.jpa.domain.BetweenTest
23:24:22.733 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.733 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@49bf8d66, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@29d14018, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3bc079f1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2385ee72, org.springframework.test.context.support.DirtiesContextTestExecutionListener@16e483d9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3596c09d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@da1382f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@15bb197, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3313002e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3002acf9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@34668a96, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@686d5284]
23:24:22.734 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7dbb24a6, testMethod = filtersByIntRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.735 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.735 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.736 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.737 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 70L and 100L
23:24:22.737 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          +-[NUM_LONG] Node: '70L'
          \-[NUM_LONG] Node: '100L'

23:24:22.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          +-[NUM_LONG] LiteralNode: '70'
          \-[NUM_LONG] LiteralNode: '100'

23:24:22.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 70L and 100L
23:24:22.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int between 70 and 100
23:24:22.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 85L and 400L
23:24:22.740 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          +-[NUM_LONG] Node: '85L'
          \-[NUM_LONG] Node: '400L'

23:24:22.740 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          +-[NUM_LONG] LiteralNode: '85'
          \-[NUM_LONG] LiteralNode: '400'

23:24:22.740 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 85L and 400L
23:24:22.740 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int between 85 and 400
23:24:22.742 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7dbb24a6, testMethod = filtersByIntRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.743 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@abc771e, testMethod = rejectsTooManyArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.743 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.743 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.745 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.746 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@abc771e, testMethod = rejectsTooManyArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.747 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@51430893, testMethod = filtersByFloatRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.748 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.748 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.749 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 70.0F and 100.0F
23:24:22.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          +-[NUM_FLOAT] Node: '70.0F'
          \-[NUM_FLOAT] Node: '100.0F'

23:24:22.751 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          +-[NUM_FLOAT] LiteralNode: '70.0'
          \-[NUM_FLOAT] LiteralNode: '100.0'

23:24:22.751 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 70.0F and 100.0F
23:24:22.751 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float between 70.0 and 100.0
23:24:22.752 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 85.0F and 300.2F
23:24:22.752 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          +-[NUM_FLOAT] Node: '85.0F'
          \-[NUM_FLOAT] Node: '300.2F'

23:24:22.753 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          +-[NUM_FLOAT] LiteralNode: '85.0'
          \-[NUM_FLOAT] LiteralNode: '300.2'

23:24:22.753 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 85.0F and 300.2F
23:24:22.753 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float between 85.0 and 300.2
23:24:22.755 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@51430893, testMethod = filtersByFloatRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.756 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7b088db5, testMethod = filtersByEnumRange_string@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.756 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.756 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.758 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.759 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString between :param0 and :param1
23:24:22.759 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:22.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@2a670af9}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@2a670af9}

23:24:22.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString between :param0 and :param1
23:24:22.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string between ? and ?
23:24:22.762 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7b088db5, testMethod = filtersByEnumRange_string@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.764 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@2cf5cc43, testMethod = filtersByDoubleRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.764 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.764 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.765 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.766 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 70.0D and 100.0D
23:24:22.766 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          +-[NUM_DOUBLE] Node: '70.0D'
          \-[NUM_DOUBLE] Node: '100.0D'

23:24:22.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          +-[NUM_DOUBLE] LiteralNode: '70.0'
          \-[NUM_DOUBLE] LiteralNode: '100.0'

23:24:22.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 70.0D and 100.0D
23:24:22.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double between 70.0 and 100.0
23:24:22.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 85.0D and 300.2D
23:24:22.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          +-[NUM_DOUBLE] Node: '85.0D'
          \-[NUM_DOUBLE] Node: '300.2D'

23:24:22.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          +-[NUM_DOUBLE] LiteralNode: '85.0'
          \-[NUM_DOUBLE] LiteralNode: '300.2'

23:24:22.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 85.0D and 300.2D
23:24:22.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double between 85.0 and 300.2
23:24:22.771 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@2cf5cc43, testMethod = filtersByDoubleRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.772 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7d9a7fd8, testMethod = filtersByEnumRange_ordinal@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.773 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.773 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.774 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.775 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender between :param0 and :param1
23:24:22.775 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:22.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:22.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender between :param0 and :param1
23:24:22.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender between ? and ?
23:24:22.778 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7d9a7fd8, testMethod = filtersByEnumRange_ordinal@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.779 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@22c88bec, testMethod = filtersByBigDecimalRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.779 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.779 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.781 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.782 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 70BD and 100BD
23:24:22.782 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightBigDecimal'
          +-[NUM_BIG_DECIMAL] Node: '70BD'
          \-[NUM_BIG_DECIMAL] Node: '100BD'

23:24:22.783 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_big_decimal' {propertyName=weightBigDecimal,dereferenceType=PRIMITIVE,getPropertyPath=weightBigDecimal,path=generatedAlias0.weightBigDecimal,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightBigDecimal' {originalText=weightBigDecimal}
          +-[NUM_BIG_DECIMAL] LiteralNode: '70'
          \-[NUM_BIG_DECIMAL] LiteralNode: '100'

23:24:22.783 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 70BD and 100BD
23:24:22.783 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_big_decimal between 70 and 100
23:24:22.784 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 85BD and 300.31BD
23:24:22.785 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightBigDecimal'
          +-[NUM_BIG_DECIMAL] Node: '85BD'
          \-[NUM_BIG_DECIMAL] Node: '300.31BD'

23:24:22.785 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_big_decimal' {propertyName=weightBigDecimal,dereferenceType=PRIMITIVE,getPropertyPath=weightBigDecimal,path=generatedAlias0.weightBigDecimal,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightBigDecimal' {originalText=weightBigDecimal}
          +-[NUM_BIG_DECIMAL] LiteralNode: '85'
          \-[NUM_BIG_DECIMAL] LiteralNode: '300.31'

23:24:22.785 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 85BD and 300.31BD
23:24:22.785 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_big_decimal between 85 and 300.31
23:24:22.787 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@22c88bec, testMethod = filtersByBigDecimalRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.788 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@50118662, testMethod = rejectsTooFewArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.788 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.788 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.790 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.791 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@50118662, testMethod = rejectsTooFewArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.792 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@5d16f27b, testMethod = filtersByRegistrationDateWithDefaultDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.793 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.793 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.794 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.798 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@5d16f27b, testMethod = filtersByRegistrationDateWithDefaultDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.799 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@2591343, testMethod = filtersByRegistrationDateWithCustomDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.799 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.799 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.801 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.804 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c44928e testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@2591343, testMethod = filtersByRegistrationDateWithCustomDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c00fa1 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 sec
Running net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest
23:24:22.805 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.805 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@413d15d5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5ffac740, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@247c43c6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@37d88e50, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1ee2b6c3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@17abb298, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@510fb1d8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@22d61fa7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2989e190, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@637ca94b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fd1458d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5d6850f7]
23:24:22.807 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67f3a068 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@1e33dda, testMethod = rejectsInvalidNumberOfArguments@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@674502f9 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.807 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.807 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.809 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.810 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67f3a068 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@1e33dda, testMethod = rejectsInvalidNumberOfArguments@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@674502f9 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.811 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67f3a068 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@12464b1c, testMethod = rejectsMissingArgument@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@674502f9 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.811 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.812 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.813 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.814 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67f3a068 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@12464b1c, testMethod = rejectsMissingArgument@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@674502f9 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.815 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67f3a068 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@baee849, testMethod = filtersByNestedProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@674502f9 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.816 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.816 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.817 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.821 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67f3a068 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@baee849, testMethod = filtersByNestedProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@674502f9 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.822 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67f3a068 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@2e042c93, testMethod = filtersByFirstLevelProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@674502f9 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.823 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.823 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.824 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.828 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67f3a068 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@2e042c93, testMethod = filtersByFirstLevelProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@674502f9 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.JoinTest
23:24:22.829 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.829 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@17c158ca, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7b601e55, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@26309e6f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1db8ec3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1cc1813a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@67a8a641, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@45c99f3d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@18b9acd1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@86126ad, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2a59034e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2360414f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@76eabed6]
23:24:22.831 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@6277551c, testMethod = performsMultilevelJoinWithAttributeOfTypeList@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.831 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.831 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.833 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.836 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsList as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:24:22.836 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsList'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.837 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags_list,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsList], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.837 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsList as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:24:22.837 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:24:22.840 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@6277551c, testMethod = performsMultilevelJoinWithAttributeOfTypeList@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.841 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@7c8ae2c6, testMethod = joinsCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.841 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.841 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.843 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName=:param0 order by generatedAlias0.id asc
23:24:22.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias1'
    |     |  \-[IDENT] Node: 'itemName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.846 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.846 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName=:param0 order by generatedAlias0.id asc
23:24:22.846 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id where orders1_.item_name=? order by customer0_.id asc
23:24:22.848 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@7c8ae2c6, testMethod = joinsCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.850 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@39211108, testMethod = performsMultilevelJoinWithAttributeOfTypeCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.850 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.852 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.854 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsCollection as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:24:22.854 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsCollection'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders_tags_collection,item_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsCollection], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsCollection as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:24:22.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:24:22.858 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@39211108, testMethod = performsMultilevelJoinWithAttributeOfTypeCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.859 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@449464fb, testMethod = performsMultilevelJoinWithAttributeOfTypeSet@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.859 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.859 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.861 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.863 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tags as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:24:22.863 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.864 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.864 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tags as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:24:22.864 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:24:22.866 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@449464fb, testMethod = performsMultilevelJoinWithAttributeOfTypeSet@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.867 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@19a13874, testMethod = performsMultilevelJoinWithSimpleEntityAttribute@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.868 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.868 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.869 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.872 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.note as generatedAlias2 where generatedAlias2.title=:param0 order by generatedAlias0.id asc
23:24:22.872 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'title'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:22.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[ordernote2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'ordernote2_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias2.title,tableAlias=ordernote2_,className=net.kaczmarzyk.spring.data.jpa.OrderNote,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'ordernote2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.OrderNote, tableAlias=ordernote2_}
    |     |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:22.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.note as generatedAlias2 where generatedAlias2.title=:param0 order by generatedAlias0.id asc
23:24:22.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id where ordernote2_.title=? order by customer0_.id asc
23:24:22.876 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@19a13874, testMethod = performsMultilevelJoinWithSimpleEntityAttribute@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.877 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@6f710da7, testMethod = throwsIllegalArgumentExceptionWhenJoinsAreDefinedInInvalidOrder@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.877 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.877 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.878 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.882 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@339e62bb testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@6f710da7, testMethod = throwsIllegalArgumentExceptionWhenJoinsAreDefinedInInvalidOrder@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@465d9cce testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec
Running net.kaczmarzyk.spring.data.jpa.domain.InTest
23:24:22.883 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.883 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@476efc81, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@27a9fe9e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6cfd4d4d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4ecd395f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7e775ef3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@164212ad, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1053b20d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@37f37699, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@73372652, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@756695e3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@78288298, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@544364ba]
23:24:22.885 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@2e40d8f9, testMethod = filtersWithTwoEnumValues@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.885 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.885 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.887 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.889 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@2e40d8f9, testMethod = filtersWithTwoEnumValues@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.890 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@52599443, testMethod = filtersByLongValue_withAdditionalNonExistingValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.891 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.891 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.893 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.893 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (12345L, 807L, 808L)
23:24:22.893 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '12345L'
             +-[NUM_LONG] Node: '807L'
             \-[NUM_LONG] Node: '808L'

23:24:22.894 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '12345'
             +-[NUM_LONG] LiteralNode: '807'
             \-[NUM_LONG] LiteralNode: '808'

23:24:22.894 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (12345L, 807L, 808L)
23:24:22.894 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (12345 , 807 , 808)
23:24:22.896 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@52599443, testMethod = filtersByLongValue_withAdditionalNonExistingValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.897 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@3eebbbf5, testMethod = filtersByDateWithDefaultDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.898 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.898 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.899 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.900 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0)
23:24:22.900 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:22.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:22.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0)
23:24:22.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date in (?)
23:24:22.904 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@3eebbbf5, testMethod = filtersByDateWithDefaultDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.905 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@5742a4bb, testMethod = filtersByString@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.905 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.905 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.907 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.907 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0, :param1)
23:24:22.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:22.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:22.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0, :param1)
23:24:22.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name in (? , ?)
23:24:22.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0)
23:24:22.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:22.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:22.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0)
23:24:22.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name in (?)
23:24:22.912 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@5742a4bb, testMethod = filtersByString@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.913 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@428fef32, testMethod = filterByDateWithCustomDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.914 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.914 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.915 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.918 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@428fef32, testMethod = filterByDateWithCustomDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.919 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@6bc7eb0f, testMethod = filtersByEnumValue_singleValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.920 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.920 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.921 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0)
23:24:22.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:22.923 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:22.923 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0)
23:24:22.923 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in (?)
23:24:22.926 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@6bc7eb0f, testMethod = filtersByEnumValue_singleValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.927 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@3119ce7a, testMethod = filtersByBooleanValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.927 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.927 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.929 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold in (:param0)
23:24:22.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:22.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:22.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold in (:param0)
23:24:22.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold in (?)
23:24:22.933 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@3119ce7a, testMethod = filtersByBooleanValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.934 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@386643e, testMethod = filtersByIntegerValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.934 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.934 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.936 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.936 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight in (121, 65)
23:24:22.936 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_INT] Node: '121'
             \-[NUM_INT] Node: '65'

23:24:22.937 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_INT] LiteralNode: '121'
             \-[NUM_INT] LiteralNode: '65'

23:24:22.937 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight in (121, 65)
23:24:22.937 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight in (121 , 65)
23:24:22.939 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@386643e, testMethod = filtersByIntegerValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.940 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@11092844, testMethod = filtersByLongValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.941 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.941 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.942 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (835L, 836L)
23:24:22.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '835L'
             \-[NUM_LONG] Node: '836L'

23:24:22.944 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '835'
             \-[NUM_LONG] LiteralNode: '836'

23:24:22.944 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (835L, 836L)
23:24:22.944 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (835 , 836)
23:24:22.946 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b21a869 testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@11092844, testMethod = filtersByLongValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43c28101 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.064 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest
23:24:22.947 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.947 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@767c34a0, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@404ea1e4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1e9bbb27, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@56d8f131, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4116167e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@74e2de39, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@37630101, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@26a32fa5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@57f778e9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@35067738, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1a420390, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2523c97a]
23:24:22.949 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49e11ca7 testClass = DisjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest@30bb4248, testMethod = shouldIncludeResultsOfBothSpecs@DisjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@65beeceb testClass = DisjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.949 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.949 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.951 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.953 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:24:22.953 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:22.953 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:22.953 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:24:22.953 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name like ? or customer0_.last_name like ?
23:24:22.956 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49e11ca7 testClass = DisjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest@30bb4248, testMethod = shouldIncludeResultsOfBothSpecs@DisjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@65beeceb testClass = DisjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EqualTest
23:24:22.958 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:22.959 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5d5cd0cf, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@40692fc3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2540ad71, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@53e7ef2d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@68068736, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6198bac2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4193b8a5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2de1a93d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7102b480, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@55e85ec8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@9628240, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@296a6a10]
23:24:22.961 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@4111c517, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.962 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.962 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.963 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold=:param0
23:24:22.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:22.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold=:param0
23:24:22.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=?
23:24:22.967 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@4111c517, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.968 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@fcdad9a, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.968 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.968 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.970 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.971 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@fcdad9a, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.972 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@5bd3d747, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.973 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.974 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.975 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong=121L
23:24:22.975 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '121L'

23:24:22.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '121'

23:24:22.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong=121L
23:24:22.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long=121
23:24:22.978 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@5bd3d747, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.979 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@581bc85e, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.979 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.979 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.981 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt=121
23:24:22.982 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '121'

23:24:22.982 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '121'

23:24:22.982 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt=121
23:24:22.982 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int=121
23:24:22.984 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@581bc85e, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.985 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@90e5788, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.986 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.986 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.987 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:22.988 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble=121.2D
23:24:22.988 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '121.2D'

23:24:22.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '121.2'

23:24:22.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble=121.2D
23:24:22.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double=121.2
23:24:22.991 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@90e5788, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:22.992 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@4cf1ba4e, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:22.992 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:22.992 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:22.994 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:22.994 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate=:param0
23:24:22.995 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:22.995 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:22.995 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate=:param0
23:24:22.995 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date=?
23:24:22.999 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@4cf1ba4e, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.001 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3b968111, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.001 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.001 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.003 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.006 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3b968111, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.007 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@469c1292, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.008 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.008 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.009 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.012 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@469c1292, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.013 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@34a2e10c, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.013 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.013 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.015 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.016 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj=:param0
23:24:23.016 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.016 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:23.017 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj=:param0
23:24:23.017 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj=?
23:24:23.019 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@34a2e10c, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.020 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@4f7c5402, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.020 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.020 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.049 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 29 ms
23:24:23.049 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight=121
23:24:23.049 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '121'

23:24:23.050 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '121'

23:24:23.050 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight=121
23:24:23.050 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight=121
23:24:23.052 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@4f7c5402, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.053 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@5ef99f75, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.054 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.054 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.055 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=884L
23:24:23.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '884L'

23:24:23.057 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '884'

23:24:23.057 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=884L
23:24:23.057 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=884
23:24:23.059 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@5ef99f75, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.060 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@c73b9fc, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.061 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.061 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.063 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.063 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender=:param0
23:24:23.063 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.064 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:23.064 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender=:param0
23:24:23.064 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=?
23:24:23.067 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@62110754 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@c73b9fc, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eed4367 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 13, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.112 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest
23:24:23.069 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.069 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4ee127c6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5e805a0d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2bd89b8e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4c49193a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@b51d862, org.springframework.test.context.transaction.TransactionalTestExecutionListener@575dab37, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@38b65eb9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3c32105c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@39a54d70, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@39b5d60, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@952883c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@254ed9ba]
23:24:23.070 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@21e40707 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@92adb3b, testMethod = rejectsInvalidNumberOfArguments@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3182b7a2 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.071 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.071 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.073 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.074 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@21e40707 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@92adb3b, testMethod = rejectsInvalidNumberOfArguments@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3182b7a2 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.075 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@21e40707 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@69894182, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3182b7a2 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.076 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.076 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.077 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.081 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@21e40707 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@69894182, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3182b7a2 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.082 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@21e40707 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@66fd7b2, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3182b7a2 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.082 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.082 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.084 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.086 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@21e40707 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@66fd7b2, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3182b7a2 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.087 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@21e40707 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@671f70bc, testMethod = rejectsMissingArgument@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3182b7a2 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.087 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.087 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.088 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.089 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@21e40707 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@671f70bc, testMethod = rejectsMissingArgument@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3182b7a2 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest
23:24:23.091 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.091 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@27ca3040, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@652e4bb6, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@251d3913, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2280c0f5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@543eacd5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@435a2e1f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@f4352c6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2b60acb3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@a99f50e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@18211894, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@d61ac34, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@234a8c1f]
23:24:23.093 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@164fba04, testMethod = filtersByStringCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.093 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.093 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.095 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)<>:param0
23:24:23.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:23.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)<>:param0
23:24:23.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name)<>?
23:24:23.098 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)<>:param0
23:24:23.098 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.099 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:23.099 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)<>:param0
23:24:23.099 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name)<>?
23:24:23.101 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@164fba04, testMethod = filtersByStringCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.102 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@7a9ad451, testMethod = filtersByEnumCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.102 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.102 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.104 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.104 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<>:param0
23:24:23.105 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.105 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:23.105 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<>:param0
23:24:23.105 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<>?
23:24:23.108 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@7a9ad451, testMethod = filtersByEnumCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.109 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@35bd146b, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.109 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.109 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.111 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<>:param0
23:24:23.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.113 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:23.113 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<>:param0
23:24:23.113 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<>?
23:24:23.115 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@35bd146b, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.116 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1571a63a, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.116 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.116 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.118 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.119 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1571a63a, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.120 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@46eaf531, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.121 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.121 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.122 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<>121L
23:24:23.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '121L'

23:24:23.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '121'

23:24:23.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<>121L
23:24:23.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<>121
23:24:23.125 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@46eaf531, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.126 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@17acd4c5, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.127 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.127 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.128 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.129 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<>121
23:24:23.129 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '121'

23:24:23.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '121'

23:24:23.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<>121
23:24:23.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<>121
23:24:23.132 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@17acd4c5, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.133 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@27688fc6, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.134 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.134 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.135 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.136 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<>121.2D
23:24:23.136 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '121.2D'

23:24:23.137 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '121.2'

23:24:23.137 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<>121.2D
23:24:23.137 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<>121.2
23:24:23.139 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@27688fc6, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.140 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@44c073bd, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.140 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.140 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.142 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.142 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<>:param0
23:24:23.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:23.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<>:param0
23:24:23.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<>?
23:24:23.145 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@44c073bd, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.146 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@24f3e945, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.146 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.146 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.148 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<>:param0
23:24:23.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:23.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<>:param0
23:24:23.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<>?
23:24:23.152 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@24f3e945, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.153 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3342ec79, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.153 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.153 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.155 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.157 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3342ec79, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.158 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@6456fcc4, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.158 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.158 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.160 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.160 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<>:param0
23:24:23.161 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.161 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:23.161 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<>:param0
23:24:23.161 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<>?
23:24:23.163 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@6456fcc4, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.164 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@697607a5, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.165 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.165 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.167 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.168 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<>121
23:24:23.168 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '121'

23:24:23.169 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '121'

23:24:23.169 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<>121
23:24:23.169 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<>121
23:24:23.171 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@697607a5, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.172 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3cbcd442, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.172 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.172 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.174 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.174 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>940L
23:24:23.175 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '940L'

23:24:23.175 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '940'

23:24:23.175 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>940L
23:24:23.175 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>940
23:24:23.177 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3cbcd442, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.178 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@c4c6031, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.179 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.179 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.180 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.183 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bd6ce4e testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@c4c6031, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2693d31f testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.087 sec
Running net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest
23:24:23.185 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.185 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@49a344c7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@69bdb27c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6ee0bfee, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@393fe097, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6ae91e0b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6ec36f78, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5b7b281, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@434ad1f8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@617196dc, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@14bc9d25, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2c271689, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3977c7e4]
23:24:23.186 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@8d95ac8 testClass = ConjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest@689aab7b, testMethod = shouldFilterWithBothSpecs@ConjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22be8211 testClass = ConjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.187 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.187 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.188 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.189 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.address.street like :param0 ) and ( generatedAlias0.registrationDate<:param1 )
23:24:23.190 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'address'
          |  |  \-[IDENT] Node: 'street'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LT] Node: '<'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:23.190 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  |  \-[IDENT] IdentNode: 'street' {originalText=street}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[LT] BinaryLogicOperatorNode: '<'
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:23.190 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.address.street like :param0 ) and ( generatedAlias0.registrationDate<:param1 )
23:24:23.190 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.street like ?) and customer0_.registration_date<?
23:24:23.192 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@8d95ac8 testClass = ConjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest@689aab7b, testMethod = shouldFilterWithBothSpecs@ConjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22be8211 testClass = ConjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest
23:24:23.194 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.194 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3829bb5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7cd90b9b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@604c9f59, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1201d134, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5c9aff2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3178f903, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@35ca1e22, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@29dee1de, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@61207d28, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@176630ee, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7238072e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2cb6c8a6]
23:24:23.195 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5b9fbaca testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@4e33a209, testMethod = rejectsInvalidNumberOfArguments@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@924c964 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.196 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.196 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.197 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.199 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5b9fbaca testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@4e33a209, testMethod = rejectsInvalidNumberOfArguments@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@924c964 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.200 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5b9fbaca testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@286bd902, testMethod = filtersFirstLevelPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@924c964 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.200 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.200 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.202 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.205 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5b9fbaca testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@286bd902, testMethod = filtersFirstLevelPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@924c964 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.206 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5b9fbaca testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@291a8ecd, testMethod = filtersByNestedPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@924c964 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.207 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.207 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.209 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.211 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5b9fbaca testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@291a8ecd, testMethod = filtersByNestedPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@924c964 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.212 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5b9fbaca testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@1c98d788, testMethod = rejectsMissingArgument@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@924c964 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.212 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.212 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.214 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.215 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5b9fbaca testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@1c98d788, testMethod = rejectsMissingArgument@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@924c964 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotNullTest
23:24:23.217 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.217 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5324647, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@28c076b5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@223459f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@10d2411f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7c53d3c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2c9b96af, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@340c211e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@36545439, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1856a312, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@68886059, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3d59a887, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2938c689]
23:24:23.219 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30749de8 testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@6902e2bf, testMethod = findsCustomersWithNotNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e4c6de testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.219 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.219 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.221 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.223 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30749de8 testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@6902e2bf, testMethod = findsCustomersWithNotNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e4c6de testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.224 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30749de8 testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@1713f25b, testMethod = findsCustomersWithNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e4c6de testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.225 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.225 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.226 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.229 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30749de8 testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@1713f25b, testMethod = findsCustomersWithNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e4c6de testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LessThanTest
23:24:23.230 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.230 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@460f2b6c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2f98c012, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1a4ccb7b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@447d91ef, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7b968647, org.springframework.test.context.transaction.TransactionalTestExecutionListener@12e75177, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6e0c5743, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@46565184, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@9bd43b7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@21f9c71e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2dc33a2d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59ed8460]
23:24:23.232 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@181f61b4, testMethod = filtersByPrimitiveBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.232 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.233 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.234 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.235 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<:param0
23:24:23.235 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:23.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<:param0
23:24:23.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<?
23:24:23.239 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@181f61b4, testMethod = filtersByPrimitiveBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.240 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@69676b9c, testMethod = filtersByDoubleValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.240 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.240 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.242 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.200100000000006D
23:24:23.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.200100000000006D'

23:24:23.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.200100000000006'

23:24:23.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.200100000000006D
23:24:23.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<55.200100000000006
23:24:23.245 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.2D
23:24:23.245 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.2D'

23:24:23.245 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.2'

23:24:23.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.2D
23:24:23.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<55.2
23:24:23.247 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@69676b9c, testMethod = filtersByDoubleValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.248 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@717616da, testMethod = filtersByPrimitiveLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.249 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.249 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.251 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.251 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<55L
23:24:23.251 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '55L'

23:24:23.252 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '55'

23:24:23.252 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<55L
23:24:23.252 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<55
23:24:23.254 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@717616da, testMethod = filtersByPrimitiveLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.255 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@53ca202f, testMethod = filtersByPrimitiveIntValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.255 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.255 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.257 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<55
23:24:23.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '55'

23:24:23.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '55'

23:24:23.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<55
23:24:23.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<55
23:24:23.261 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@53ca202f, testMethod = filtersByPrimitiveIntValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.262 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6aef91e6, testMethod = filtersByDateWithDefaultDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.262 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.262 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.264 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.267 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6aef91e6, testMethod = filtersByDateWithDefaultDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.268 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@1c22aae1, testMethod = filtersByString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.268 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.268 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.270 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.270 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<:param0
23:24:23.270 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:23.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<:param0
23:24:23.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<?
23:24:23.274 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@1c22aae1, testMethod = filtersByString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.275 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@66da0ab7, testMethod = filterByDateWithCustomDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.275 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.275 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.277 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.280 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@66da0ab7, testMethod = filterByDateWithCustomDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.281 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@505c675a, testMethod = filtersByPrimitiveFloatValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.281 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.282 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.283 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.284 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<65.21F
23:24:23.284 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:24:23.284 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:24:23.284 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<65.21F
23:24:23.284 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<65.21
23:24:23.286 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<55.0F
23:24:23.286 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '55.0F'

23:24:23.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '55.0'

23:24:23.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<55.0F
23:24:23.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<55.0
23:24:23.288 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@505c675a, testMethod = filtersByPrimitiveFloatValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.289 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@dc12d11, testMethod = filtersByBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.290 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.290 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.291 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.292 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<:param0
23:24:23.292 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.292 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:23.292 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<:param0
23:24:23.292 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<?
23:24:23.295 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@dc12d11, testMethod = filtersByBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.296 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@65e2cca9, testMethod = filtersByIntegerValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.297 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.297 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.298 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.299 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<55
23:24:23.299 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '55'

23:24:23.299 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '55'

23:24:23.300 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<55
23:24:23.300 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<55
23:24:23.302 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@65e2cca9, testMethod = filtersByIntegerValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.303 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4002f09c, testMethod = filtersByLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.303 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.303 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.305 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.305 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1007L
23:24:23.306 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1007L'

23:24:23.306 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1007'

23:24:23.306 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1007L
23:24:23.306 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<1007
23:24:23.307 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1009L
23:24:23.308 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1009L'

23:24:23.308 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1009'

23:24:23.308 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1009L
23:24:23.308 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<1009
23:24:23.310 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4002f09c, testMethod = filtersByLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.311 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@166a38a8, testMethod = filtersByEnumValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.311 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.311 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.313 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.313 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<:param0
23:24:23.314 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.314 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:23.314 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<:param0
23:24:23.314 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<?
23:24:23.317 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@166a38a8, testMethod = filtersByEnumValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.318 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3469a432, testMethod = filtersByEnumString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.319 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.319 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.321 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<:param0
23:24:23.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.322 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@2a670af9}

23:24:23.322 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<:param0
23:24:23.322 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string<?
23:24:23.325 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3469a432, testMethod = filtersByEnumString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.326 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4377e40a, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.326 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.326 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.328 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.330 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4377e40a, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.331 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@58292496, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.331 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.331 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.333 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.335 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@58292496, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.336 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@2a3e1e53, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.336 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.336 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.338 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.340 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54dd2962 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@2a3e1e53, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@4c601487 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.111 sec
Running net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest
23:24:23.341 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.341 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@10ca3611, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@422f7081, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5ed4796f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3ff264c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@42c4f29c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7bd6393d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6b42829, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c03a3f5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@19b6eefb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@53633321, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7431ac04, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@154ca57c]
23:24:23.343 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@59ae4a6f, testMethod = filtersByPrimitiveBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.343 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.343 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.345 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>:param0
23:24:23.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:23.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>:param0
23:24:23.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold>?
23:24:23.349 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@59ae4a6f, testMethod = filtersByPrimitiveBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.350 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@499d1026, testMethod = filtersByDoubleValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.350 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.350 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.352 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.21D
23:24:23.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:24:23.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:24:23.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.21D
23:24:23.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>65.21
23:24:23.355 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.2D
23:24:23.355 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.2D'

23:24:23.356 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.2'

23:24:23.356 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.2D
23:24:23.356 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>65.2
23:24:23.357 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@499d1026, testMethod = filtersByDoubleValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.358 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@f442b41, testMethod = filtersByPrimitiveLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.359 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.359 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.360 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.361 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>56L
23:24:23.361 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '56L'

23:24:23.361 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '56'

23:24:23.362 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>56L
23:24:23.362 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long>56
23:24:23.364 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@f442b41, testMethod = filtersByPrimitiveLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.365 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@40aff4f1, testMethod = filtersByPrimitiveIntValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.365 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.365 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.367 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>65
23:24:23.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '65'

23:24:23.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '65'

23:24:23.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>65
23:24:23.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int>65
23:24:23.370 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@40aff4f1, testMethod = filtersByPrimitiveIntValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.371 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1ab07559, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.371 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.371 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.373 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.376 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1ab07559, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.377 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@68819fae, testMethod = filtersByString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.378 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.378 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.380 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>:param0
23:24:23.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:23.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>:param0
23:24:23.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name>?
23:24:23.384 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@68819fae, testMethod = filtersByString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.385 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5e86dc1c, testMethod = filterByDateWithCustomDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.385 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.385 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.387 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.390 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5e86dc1c, testMethod = filterByDateWithCustomDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.391 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@22059c63, testMethod = filtersByPrimitiveFloatValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.391 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.391 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.393 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.21F
23:24:23.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:24:23.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:24:23.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.21F
23:24:23.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>65.21
23:24:23.396 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.1F
23:24:23.396 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.1F'

23:24:23.396 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.1'

23:24:23.396 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.1F
23:24:23.396 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>65.1
23:24:23.398 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@22059c63, testMethod = filtersByPrimitiveFloatValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.399 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@2c30848a, testMethod = filtersByBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.399 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.399 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.401 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>:param0
23:24:23.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:23.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>:param0
23:24:23.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj>?
23:24:23.405 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@2c30848a, testMethod = filtersByBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.406 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5f2eeb6b, testMethod = filtersByIntegerValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.406 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.406 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.408 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.409 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>65
23:24:23.409 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '65'

23:24:23.409 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '65'

23:24:23.409 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>65
23:24:23.409 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight>65
23:24:23.411 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5f2eeb6b, testMethod = filtersByIntegerValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.413 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7239f4ba, testMethod = filtersByLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.413 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.413 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.415 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.415 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>1073L
23:24:23.416 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1073L'

23:24:23.416 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1073'

23:24:23.416 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>1073L
23:24:23.416 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id>1073
23:24:23.418 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7239f4ba, testMethod = filtersByLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.419 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@3dd4d6e6, testMethod = filtersByEnumValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.420 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.420 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.421 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>:param0
23:24:23.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:23.423 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>:param0
23:24:23.423 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender>?
23:24:23.425 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@3dd4d6e6, testMethod = filtersByEnumValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.426 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@616a370b, testMethod = filtersByEnumString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.427 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.427 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.428 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.429 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>:param0
23:24:23.429 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.429 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@2a670af9}

23:24:23.430 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>:param0
23:24:23.430 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string>?
23:24:23.433 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@616a370b, testMethod = filtersByEnumString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.434 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@c3976d4, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.434 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.434 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.436 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.437 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@c3976d4, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.438 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@3a6f77a4, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.439 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.439 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.440 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.442 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@3a6f77a4, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.444 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@2f9a624c, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.444 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.444 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.446 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.447 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@78ac66e2 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@2f9a624c, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@3463d70a testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.108 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotInTest
23:24:23.449 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.449 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7dea9ff9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3767973, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@62b92df8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2c227f74, org.springframework.test.context.support.DirtiesContextTestExecutionListener@59e285e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3593747f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1e6e59d8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@21084cbe, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@55204c19, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7b3eea4e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1772cc68, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@747c1f84]
23:24:23.451 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@47b530e0, testMethod = filtersWithTwoEnumValues@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.451 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.452 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.453 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.454 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0, :param1)
23:24:23.454 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:23.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:23.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0, :param1)
23:24:23.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender not in  (? , ?)
23:24:23.457 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@47b530e0, testMethod = filtersWithTwoEnumValues@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.458 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@7271ee48, testMethod = filtersByLongValue_withAdditionalNonExistingValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.458 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.458 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.460 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.461 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (12345L, 1099L, 1100L)
23:24:23.461 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '12345L'
             +-[NUM_LONG] Node: '1099L'
             \-[NUM_LONG] Node: '1100L'

23:24:23.462 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '12345'
             +-[NUM_LONG] LiteralNode: '1099'
             \-[NUM_LONG] LiteralNode: '1100'

23:24:23.462 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (12345L, 1099L, 1100L)
23:24:23.462 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (12345 , 1099 , 1100)
23:24:23.465 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@7271ee48, testMethod = filtersByLongValue_withAdditionalNonExistingValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.466 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@73d4aa54, testMethod = filtersByDateWithDefaultDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.466 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.466 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.468 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.472 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0)
23:24:23.472 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:23.472 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:23.473 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0)
23:24:23.473 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date not in  (?)
23:24:23.483 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@73d4aa54, testMethod = filtersByDateWithDefaultDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.484 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@2b52e068, testMethod = filtersByString@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.484 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.484 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.486 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.486 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0, :param1)
23:24:23.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:23.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:23.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0, :param1)
23:24:23.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not in  (? , ?)
23:24:23.488 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0)
23:24:23.489 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:23.489 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:23.489 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0)
23:24:23.489 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not in  (?)
23:24:23.492 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@2b52e068, testMethod = filtersByString@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.493 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@17163282, testMethod = filterByDateWithCustomDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.493 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.493 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.495 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.498 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@17163282, testMethod = filterByDateWithCustomDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.499 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@2d7956fb, testMethod = filtersByEnumValue_singleValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.500 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.500 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.501 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.505 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@2d7956fb, testMethod = filtersByEnumValue_singleValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.507 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@3776a2f2, testMethod = filtersByBooleanValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.507 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.508 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.509 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold not in (:param0)
23:24:23.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:23.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:23.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold not in (:param0)
23:24:23.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold not in  (?)
23:24:23.513 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@3776a2f2, testMethod = filtersByBooleanValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.514 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5471182c, testMethod = filtersByIntegerValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.514 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.514 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.516 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight not in (121, 65)
23:24:23.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_INT] Node: '121'
             \-[NUM_INT] Node: '65'

23:24:23.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_INT] LiteralNode: '121'
             \-[NUM_INT] LiteralNode: '65'

23:24:23.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight not in (121, 65)
23:24:23.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight not in  (121 , 65)
23:24:23.522 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5471182c, testMethod = filtersByIntegerValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.523 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5ecab645, testMethod = filtersByLongValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.524 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.524 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.525 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.526 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (1127L, 1128L)
23:24:23.527 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '1127L'
             \-[NUM_LONG] Node: '1128L'

23:24:23.527 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '1127'
             \-[NUM_LONG] LiteralNode: '1128'

23:24:23.527 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (1127L, 1128L)
23:24:23.527 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (1127 , 1128)
23:24:23.530 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3a0f0552 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5ecab645, testMethod = filtersByLongValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3171c5e6 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest
23:24:23.531 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.531 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3f94bd59, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@136ee66d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@b6352a5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3c9be5f1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@26ffe94e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@42c63e72, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@53a1baf5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@30f6791d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@699a53d4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1adcd53b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4474a287, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@47c90585]
23:24:23.533 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e14a376 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@25fb28dd, testMethod = rejectsInvalidNumberOfArguments@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5917b984 testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.533 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.533 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.535 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.537 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e14a376 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@25fb28dd, testMethod = rejectsInvalidNumberOfArguments@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5917b984 testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.538 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e14a376 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@1c72366e, testMethod = rejectsMissingArgument@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5917b984 testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.538 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.538 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.540 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.541 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e14a376 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@1c72366e, testMethod = rejectsMissingArgument@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5917b984 testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.542 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e14a376 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@3982d73d, testMethod = filtersByNestedProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5917b984 testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.544 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.544 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.545 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.555 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e14a376 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@3982d73d, testMethod = filtersByNestedProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5917b984 testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.561 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e14a376 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@34d20206, testMethod = filtersByFirstLevelProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5917b984 testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.561 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.561 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.563 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.568 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e14a376 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@34d20206, testMethod = filtersByFirstLevelProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5917b984 testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest
23:24:23.573 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.573 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5519eea8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@34f195e8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1a00440d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1a7ba443, org.springframework.test.context.support.DirtiesContextTestExecutionListener@d750a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@38ebee36, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2053e50a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@674d14ff, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@c038839, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6bfe4dd1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@54ba8e11, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5bdf8295]
23:24:23.575 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@52d48643, testMethod = filtersByPrimitiveBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.575 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.575 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.577 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.578 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<=:param0
23:24:23.581 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:23.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<=:param0
23:24:23.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<=?
23:24:23.586 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@52d48643, testMethod = filtersByPrimitiveBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.587 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@4a31924e, testMethod = filtersByDoubleValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.587 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.587 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.589 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.590 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=65.21D
23:24:23.590 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:24:23.591 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:24:23.591 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=65.21D
23:24:23.591 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<=65.21
23:24:23.592 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=55.2D
23:24:23.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.2D'

23:24:23.595 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.2'

23:24:23.595 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=55.2D
23:24:23.595 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<=55.2
23:24:23.596 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@4a31924e, testMethod = filtersByDoubleValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.597 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7cc880cf, testMethod = filtersByPrimitiveLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.598 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.598 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.599 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.600 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<=55L
23:24:23.600 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '55L'

23:24:23.601 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '55'

23:24:23.601 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<=55L
23:24:23.601 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<=55
23:24:23.606 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7cc880cf, testMethod = filtersByPrimitiveLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.607 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@3da1191b, testMethod = filtersByPrimitiveIntValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.607 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.607 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.609 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.609 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<=55
23:24:23.609 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '55'

23:24:23.610 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '55'

23:24:23.610 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<=55
23:24:23.610 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<=55
23:24:23.612 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@3da1191b, testMethod = filtersByPrimitiveIntValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.614 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@368a8b70, testMethod = filtersByDateWithDefaultDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.614 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.614 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.617 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.622 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@368a8b70, testMethod = filtersByDateWithDefaultDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.624 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@54cf024c, testMethod = filtersByString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.624 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.624 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.626 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.627 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<=:param0
23:24:23.627 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.627 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:23.627 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<=:param0
23:24:23.627 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<=?
23:24:23.639 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@54cf024c, testMethod = filtersByString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.640 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@147ee877, testMethod = filterByDateWithCustomDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.640 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.640 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.642 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.645 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@147ee877, testMethod = filterByDateWithCustomDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.646 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@23497c5e, testMethod = filtersByPrimitiveFloatValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.646 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.646 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.648 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.649 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=65.1F
23:24:23.649 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.1F'

23:24:23.650 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.1'

23:24:23.650 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=65.1F
23:24:23.650 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<=65.1
23:24:23.652 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=55.1F
23:24:23.652 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '55.1F'

23:24:23.652 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '55.1'

23:24:23.652 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=55.1F
23:24:23.652 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<=55.1
23:24:23.658 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@23497c5e, testMethod = filtersByPrimitiveFloatValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.659 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6f88d401, testMethod = filtersByBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.659 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.659 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.661 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<=:param0
23:24:23.663 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.663 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}

23:24:23.663 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<=:param0
23:24:23.663 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<=?
23:24:23.667 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6f88d401, testMethod = filtersByBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.669 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@aea96b0, testMethod = filtersByIntegerValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.669 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.670 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.671 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.672 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<=55
23:24:23.672 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '55'

23:24:23.672 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '55'

23:24:23.672 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<=55
23:24:23.672 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<=55
23:24:23.674 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@aea96b0, testMethod = filtersByIntegerValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.682 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@213488e6, testMethod = filtersByLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.683 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.683 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.684 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<=1185L
23:24:23.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1185L'

23:24:23.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1185'

23:24:23.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<=1185L
23:24:23.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<=1185
23:24:23.687 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@213488e6, testMethod = filtersByLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.688 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2c107b94, testMethod = filtersByEnumValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.689 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.690 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.691 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.692 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<=:param0
23:24:23.692 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.693 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:23.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<=:param0
23:24:23.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<=?
23:24:23.697 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2c107b94, testMethod = filtersByEnumValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.698 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@53a8059, testMethod = filtersByEnumString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.698 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.699 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.704 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
23:24:23.705 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<=:param0
23:24:23.705 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.706 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@2a670af9}

23:24:23.706 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<=:param0
23:24:23.706 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string<=?
23:24:23.709 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@53a8059, testMethod = filtersByEnumString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.711 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@568675ff, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.711 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.711 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.712 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.714 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@568675ff, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.715 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@98e2a07, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.715 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.715 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.717 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.719 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@98e2a07, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.720 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@26d78474, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.721 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.721 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.722 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.724 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7522ea53 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@26d78474, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@269bf0ac testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.155 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest
23:24:23.727 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.727 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@147b7f3c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@b106842, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@29c808c8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@265b5f05, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6916566d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@614c7175, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@82bbbdc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@74f47eab, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2f8afb66, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2d4fe03b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@786f4b15, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2f397395]
23:24:23.730 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@33ded464, testMethod = filtersByStringCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.730 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.730 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.732 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.732 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)=:param0
23:24:23.732 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.733 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:23.733 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)=:param0
23:24:23.733 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name)=?
23:24:23.735 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)=:param0
23:24:23.735 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:23.736 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:23.736 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)=:param0
23:24:23.736 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name)=?
23:24:23.737 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@33ded464, testMethod = filtersByStringCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.742 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@343418b2, testMethod = filtersByEnumCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.743 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.743 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.744 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.751 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@343418b2, testMethod = filtersByEnumCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.753 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@75380a14, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.754 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.754 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.755 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.757 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@75380a14, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.759 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@6281326f, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.759 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.759 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.761 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.763 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@6281326f, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.764 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3dd3f237, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.765 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.765 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.766 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.769 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3dd3f237, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.770 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2f5185ec, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.770 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.770 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.772 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.774 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2f5185ec, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.775 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2203fa4c, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.775 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.775 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.777 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.779 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2203fa4c, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.780 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@1ce4f3ac, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.781 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.781 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.782 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.785 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@1ce4f3ac, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.786 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@22ef458d, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.786 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.786 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.788 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.790 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@22ef458d, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.791 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@258fe58c, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.791 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.791 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.793 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.795 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@258fe58c, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.796 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@332c14f2, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.796 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.796 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.798 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.800 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@332c14f2, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.801 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3bce4b76, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.801 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.801 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.803 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.805 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3bce4b76, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.806 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@16e557d4, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.806 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.806 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.808 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1255L
23:24:23.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1255L'

23:24:23.809 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1255'

23:24:23.809 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1255L
23:24:23.809 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1255
23:24:23.811 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@16e557d4, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.812 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3e3cac41, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.812 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.812 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.813 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.816 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63782ad0 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3e3cac41, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52b23f41 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 15, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.092 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest
23:24:23.817 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.818 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@405495e7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@15c75b4a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d21dca2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6950795e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@d4f223e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@227d25d6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@19a39f7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6bea3a13, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1f40bb82, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@54586e29, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@45da0d4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3e5d28ee]
23:24:23.819 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@71fd650b, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.819 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.819 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.821 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.823 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@71fd650b, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.824 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@3f78b3b2, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.824 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.824 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.826 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.827 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@3f78b3b2, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.828 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@486674f6, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.829 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.829 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.830 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.832 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@486674f6, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.833 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@3abe94d9, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.833 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.833 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.835 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.837 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@3abe94d9, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.837 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@e125b5, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.838 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.838 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.839 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.841 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@e125b5, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.842 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7ea9fba1, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.842 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.842 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.844 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.846 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7ea9fba1, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.847 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4fb52fa5, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.847 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.847 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.849 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.851 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4fb52fa5, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.852 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@fc3fd5b, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.852 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.852 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.854 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.856 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@fc3fd5b, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.857 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7e522994, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.857 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.857 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.858 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.860 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7e522994, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.861 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7a0d08b2, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.862 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.862 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.863 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.865 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7a0d08b2, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.866 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@14f31f10, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.867 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.867 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.868 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.869 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>1293L
23:24:23.869 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1293L'

23:24:23.869 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1293'

23:24:23.869 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>1293L
23:24:23.869 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>1293
23:24:23.871 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@14f31f10, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.872 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7fa72332, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.872 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.872 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.874 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.877 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@d1a17cc testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7fa72332, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a9f41ff testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 sec
Running net.kaczmarzyk.EqualIgnoreCaseE2eTest
23:24:23.878 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.878 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@70ab102c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2793f84c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@68dee76e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3501c1de, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1d839d22, org.springframework.test.context.transaction.TransactionalTestExecutionListener@256a4746, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3a103112, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@12418bf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@cfef34, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@77e8c81c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4c4bff52, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6d0bf784]
23:24:23.884 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5d30303 testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@66257bec, testMethod = findsByStringValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5281b134 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.884 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.884 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.886 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.886 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.886 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.887 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.891 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5d30303 testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@66257bec, testMethod = findsByStringValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5281b134 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.892 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5d30303 testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@7141e065, testMethod = findsByEnumValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5281b134 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.892 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.892 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.895 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:24:23.896 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.896 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.899 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:24:23.907 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5d30303 testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@7141e065, testMethod = findsByEnumValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5281b134 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running net.kaczmarzyk.ParamSeparatorE2eTest
23:24:23.908 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.908 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4a61f876, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3a3a93b3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2b4f99e5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1e594828, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5b3eb1dd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@35771602, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@622031f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@366c2d9c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1872c2d5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@15b810df, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@76745c61, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@21238ffe]
23:24:23.910 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7001e12f testClass = ParamSeparatorE2eTest, testInstance = net.kaczmarzyk.ParamSeparatorE2eTest@187ee61a, testMethod = doesNoFilteringIfParameterUsingParamSeparatorIsMissing@ParamSeparatorE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a6b8805 testClass = ParamSeparatorE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.910 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.910 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.912 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.914 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0
23:24:23.914 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'net'
       |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'Customer'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:24:23.914 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}

23:24:23.914 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0
23:24:23.915 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_
23:24:23.926 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7001e12f testClass = ParamSeparatorE2eTest, testInstance = net.kaczmarzyk.ParamSeparatorE2eTest@187ee61a, testMethod = doesNoFilteringIfParameterUsingParamSeparatorIsMissing@ParamSeparatorE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a6b8805 testClass = ParamSeparatorE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running net.kaczmarzyk.LikeE2eTest
23:24:23.928 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.928 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2603ad0a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2d532099, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@463aa3da, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@770ad1f0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cda59e6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@78b9ef0c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6b8eb7b2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4aaa6e62, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@54210bb8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@63574fbf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7d7a4740, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@643afff3]
23:24:23.929 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@17a027a7 testClass = LikeE2eTest, testInstance = net.kaczmarzyk.LikeE2eTest@381602e1, testMethod = filtersByFirstName@LikeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40c14f20 testClass = LikeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.930 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.930 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.931 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:23.950 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@17a027a7 testClass = LikeE2eTest, testInstance = net.kaczmarzyk.LikeE2eTest@381602e1, testMethod = filtersByFirstName@LikeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40c14f20 testClass = LikeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.NullE2eTest
23:24:23.953 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:23.953 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4b6e9c75, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7b5de23c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6f39e2a6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2dd61113, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1264bde8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@63ce19a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@26300f29, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b73cc75, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@c4fad0e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6d1ead2c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4b71aee1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6e44d39e]
23:24:23.955 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4493ddbf testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@23ac7377, testMethod = findsEntitiesWithNoFiltering@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bb96f3f testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.955 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.955 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.957 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.978 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4493ddbf testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@23ac7377, testMethod = findsEntitiesWithNoFiltering@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bb96f3f testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.980 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4493ddbf testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@426ba1d5, testMethod = findsEntitiesWithNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bb96f3f testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.980 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.980 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.982 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:23.995 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4493ddbf testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@426ba1d5, testMethod = findsEntitiesWithNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bb96f3f testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:23.996 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4493ddbf testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@425fdf53, testMethod = findsEntitiesWithNotNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bb96f3f testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:23.996 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:23.996 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:23.998 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.014 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4493ddbf testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@425fdf53, testMethod = findsEntitiesWithNotNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@bb96f3f testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 sec
Running net.kaczmarzyk.TypeMismatchE2eTest
23:24:24.016 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.016 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@289bc75c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4c6c2473, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@33d2d3e2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@e314809, org.springframework.test.context.support.DirtiesContextTestExecutionListener@78e6cfb4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@55843367, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@70ecb7f6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7419c8e2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3acc22ba, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4ea7218f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5be16caa, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6185f1ec]
23:24:24.019 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18a59ef8 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@26dc0c5, testMethod = returnsEmptyResultIfStringProvidedInsteadOfNumericalId@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@221ffed testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.019 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.019 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.021 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.030 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18a59ef8 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@26dc0c5, testMethod = returnsEmptyResultIfStringProvidedInsteadOfNumericalId@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@221ffed testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.031 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18a59ef8 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@3c76e23b, testMethod = returnsEmptyResultIfNoneOfTheValuesAreValidEnums@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@221ffed testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.031 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.031 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.033 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in ()
23:24:24.037 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'

23:24:24.040 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'

23:24:24.040 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in ()
23:24:24.040 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in ()
23:24:24.045 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18a59ef8 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@3c76e23b, testMethod = returnsEmptyResultIfNoneOfTheValuesAreValidEnums@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@221ffed testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.046 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18a59ef8 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@485f34dc, testMethod = throwsExceptionIfOneOfSpecifiedEnumValuesIsInvalid@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@221ffed testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.047 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.047 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.048 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.054 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18a59ef8 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@485f34dc, testMethod = throwsExceptionIfOneOfSpecifiedEnumValuesIsInvalid@TypeMismatchE2eTest, testException = org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: invalid values present in the HTTP param; nested exception is class net.kaczmarzyk.spring.data.jpa.utils.Converter$ValuesRejectedException: invalid values present in the HTTP param, mergedContextConfiguration = [WebMergedContextConfiguration@221ffed testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.055 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18a59ef8 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@7abc1835, testMethod = filtersOnlyByValidEnumValuesIfEmptyResultOnTypeMismatchBehaviourSpecified@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@221ffed testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.056 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.056 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.057 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.075 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18a59ef8 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@7abc1835, testMethod = filtersOnlyByValidEnumValuesIfEmptyResultOnTypeMismatchBehaviourSpecified@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@221ffed testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.076 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18a59ef8 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@666b19cb, testMethod = findsByEitherIdOrNameEvenThoughTheirTypesAreDifferent@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@221ffed testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.077 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.077 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.078 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.081 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( 0=1 ) or ( upper(generatedAlias0.firstName) like :param0 )
23:24:24.081 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '0'
          |  \-[NUM_INT] Node: '1'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:24.081 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '0'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.081 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( 0=1 ) or ( upper(generatedAlias0.firstName) like :param0 )
23:24:24.081 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where 0=1 or upper(customer0_.first_name) like ?
23:24:24.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.id=1516L ) or ( upper(generatedAlias0.firstName) like :param0 )
23:24:24.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'id'
          |  \-[NUM_LONG] Node: '1516L'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:24:24.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NUM_LONG] LiteralNode: '1516'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.id=1516L ) or ( upper(generatedAlias0.firstName) like :param0 )
23:24:24.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1516 or upper(customer0_.first_name) like ?
23:24:24.100 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18a59ef8 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@666b19cb, testMethod = findsByEitherIdOrNameEvenThoughTheirTypesAreDifferent@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@221ffed testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.085 sec
Running net.kaczmarzyk.OrE2eTest
23:24:24.103 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.103 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@66ee50b6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@13d06ddb, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7d131ef1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@15f45ace, org.springframework.test.context.support.DirtiesContextTestExecutionListener@10bc326, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1125c869, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@74a4a82a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@43b1be5a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1cfc47f9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2325b28f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7211ab39, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3c1c984f]
23:24:24.105 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27df0864 testClass = OrE2eTest, testInstance = net.kaczmarzyk.OrE2eTest@1efdefcc, testMethod = findsByFullName@OrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@61b85463 testClass = OrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.106 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.106 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.107 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.109 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( upper(generatedAlias0.firstName) like :param0 ) or ( upper(generatedAlias0.lastName) like :param1 )
23:24:24.114 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'upper'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'generatedAlias0'
          |  |        \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:24.115 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.115 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( upper(generatedAlias0.firstName) like :param0 ) or ( upper(generatedAlias0.lastName) like :param1 )
23:24:24.115 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name) like ? or upper(customer0_.last_name) like ?
23:24:24.126 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27df0864 testClass = OrE2eTest, testInstance = net.kaczmarzyk.OrE2eTest@1efdefcc, testMethod = findsByFullName@OrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@61b85463 testClass = OrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.NotNullE2eTest
23:24:24.129 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.129 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47198a64, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@733e1e36, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3ad15e83, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5b2897d7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@50696c7c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@53a517e9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@63306e58, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c39dbc6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@67a842b1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1c490bf2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7cebf48d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4e3ef73d]
23:24:24.131 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f8d5d43 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@281a0c26, testMethod = findsEntitiesWithNoNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4bb1d848 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.132 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.132 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.133 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.150 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f8d5d43 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@281a0c26, testMethod = findsEntitiesWithNoNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4bb1d848 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.150 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f8d5d43 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@effd73, testMethod = findsEntitiesWithNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4bb1d848 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.151 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.151 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.152 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.164 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f8d5d43 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@effd73, testMethod = findsEntitiesWithNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4bb1d848 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.165 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f8d5d43 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@104d07a8, testMethod = findsAllEntities@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4bb1d848 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.166 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.167 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.168 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.188 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f8d5d43 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@104d07a8, testMethod = findsAllEntities@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4bb1d848 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 sec
Running net.kaczmarzyk.ComparableE2eTest
23:24:24.189 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.189 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@368ec112, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5743cf1c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6f889214, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@16013989, org.springframework.test.context.support.DirtiesContextTestExecutionListener@56c7ec0a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1f35f2e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3486cb21, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2b547149, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@429a6f95, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@72083fdd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@70d52d7e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7883c414]
23:24:24.191 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4939730c testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@3798a437, testMethod = filtersByRegistrationDateRange_customDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@445911f6 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.192 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.192 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.193 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.196 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate>=:param0 ) and ( generatedAlias0.registrationDate<=:param1 )
23:24:24.197 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'registrationDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:24.199 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:24.199 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate>=:param0 ) and ( generatedAlias0.registrationDate<=:param1 )
23:24:24.199 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>=? and customer0_.registration_date<=?
23:24:24.204 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4939730c testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@3798a437, testMethod = filtersByRegistrationDateRange_customDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@445911f6 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.205 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4939730c testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@76372f7f, testMethod = findsByNameRange@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@445911f6 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.206 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.206 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.208 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.211 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName>=:param0 ) and ( generatedAlias0.firstName<=:param1 )
23:24:24.211 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:24.214 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.214 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName>=:param0 ) and ( generatedAlias0.firstName<=:param1 )
23:24:24.214 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name>=? and customer0_.first_name<=?
23:24:24.220 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4939730c testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@76372f7f, testMethod = findsByNameRange@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@445911f6 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.221 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4939730c testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@8a743a1, testMethod = filtersByRegistrationDateRange_defaultDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@445911f6 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.221 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.221 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.223 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.236 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4939730c testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@8a743a1, testMethod = filtersByRegistrationDateRange_defaultDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@445911f6 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec
Running net.kaczmarzyk.JoinFetchE2eTest
23:24:24.241 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.241 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5615f2ac, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3701df72, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@d449860, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e14f405, org.springframework.test.context.support.DirtiesContextTestExecutionListener@27edfdf9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1e2e5c39, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@37805004, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4e4d2e2d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6870028, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6aa45b55, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5f113675, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@788a47fc]
23:24:24.243 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57913cf5 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@5c89c27b, testMethod = createsNotDistinctQueryIfDistinctAttributeIsSetToFalse@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@260754f6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.243 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.243 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.245 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:24:24.247 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:24.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:24:24.248 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.first_name=?
23:24:24.262 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@57913cf5 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@5c89c27b, testMethod = createsNotDistinctQueryIfDistinctAttributeIsSetToFalse@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@260754f6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.263 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57913cf5 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@4cf9fa3d, testMethod = createsDistinctQueryByDefault@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@260754f6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.263 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.263 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.265 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:24:24.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:24.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:24:24.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.first_name=?
23:24:24.279 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@57913cf5 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@4cf9fa3d, testMethod = createsDistinctQueryByDefault@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@260754f6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.280 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57913cf5 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@46c38d77, testMethod = findsByLastNameWithPagination@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@260754f6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.281 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.281 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.283 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.289 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.lastName=:param0 order by generatedAlias0.id asc
23:24:24.289 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'lastName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:24.291 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:24.291 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.lastName=:param0 order by generatedAlias0.id asc
23:24:24.291 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.last_name=? order by customer0_.id asc
23:24:24.294 [main] WARN  o.h.h.i.ast.QueryTranslatorImpl - HHH000104: firstResult/maxResults specified with collection fetch; applying in memory!
23:24:24.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:24:24.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:24.298 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.298 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:24:24.298 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ where customer0_.last_name=?
23:24:24.304 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@57913cf5 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@46c38d77, testMethod = findsByLastNameWithPagination@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@260754f6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.068 sec
Running net.kaczmarzyk.AvoidingRedundantJoinE2eTest
23:24:24.306 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.307 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7e81b882, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4d2ad535, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4692047b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@47c237fe, org.springframework.test.context.support.DirtiesContextTestExecutionListener@34f4d22c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2fec2afa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@798b52a0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2fa0e7a8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3d5735c2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@73226368, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@501f21fe, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78aa11f2]
23:24:24.309 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@703b55db testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@562c23ca, testMethod = performsJoinOnlyIfUsedInFiltering@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497f104c testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.309 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.309 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.311 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 where ( generatedAlias1.name like :param0 ) and ( 1=1 )
23:24:24.322 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Movie'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'stars'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'name'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:24:24.324 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie,person,movie_stars)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[person2_, movie0_], fromElementsByPath=[generatedAlias0.stars], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Movie.stars,tableName=person,tableAlias=person2_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'person2_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=person2_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'person2_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person2_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:24:24.325 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 where ( generatedAlias1.name like :param0 ) and ( 1=1 )
23:24:24.325 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id where (person2_.name like ?) and 1=1
23:24:24.338 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@703b55db testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@562c23ca, testMethod = performsJoinOnlyIfUsedInFiltering@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497f104c testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.339 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@703b55db testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@44f464d1, testMethod = performsEachJoinOnlyOnce@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497f104c testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.339 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.339 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.341 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.344 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 inner join generatedAlias0.directors as generatedAlias2 where ( ( generatedAlias1.name like :param0 ) and ( generatedAlias2.name like :param1 ) ) and ( 1=1 )
23:24:24.344 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Movie'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'stars'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'directors'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  \-[IDENT] Node: 'name'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'name'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:24:24.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie,person,movie_stars,movie_directors)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[person2_, person4_, movie0_], fromElementsByPath=[generatedAlias0.directors, generatedAlias0.stars], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Movie.stars,tableName=person,tableAlias=person2_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join movie_directors directors3_ on movie0_.id=directors3_.movie_id inner join person person4_ on directors3_.directors_id=person4_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Movie.directors,tableName=person,tableAlias=person4_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'person2_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=person2_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias1}
          |  |  |  +-[ALIAS_REF] IdentNode: 'person2_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person2_}
          |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'person4_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=person4_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'person4_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person4_}
          |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:24:24.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 inner join generatedAlias0.directors as generatedAlias2 where ( ( generatedAlias1.name like :param0 ) and ( generatedAlias2.name like :param1 ) ) and ( 1=1 )
23:24:24.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id inner join movie_directors directors3_ on movie0_.id=directors3_.movie_id inner join person person4_ on directors3_.directors_id=person4_.id where (person2_.name like ?) and (person4_.name like ?) and 1=1
23:24:24.361 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@703b55db testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@44f464d1, testMethod = performsEachJoinOnlyOnce@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497f104c testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.362 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@703b55db testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@611ce139, testMethod = doesNotJoinAtAllIfFilteringNotAppliedOnJoinPaths@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497f104c testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.363 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.363 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.364 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 where 1=1
23:24:24.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Movie'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:24:24.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:24:24.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 where 1=1
23:24:24.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ where 1=1
23:24:24.372 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@703b55db testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@611ce139, testMethod = doesNotJoinAtAllIfFilteringNotAppliedOnJoinPaths@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497f104c testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.067 sec
Running net.kaczmarzyk.EqualE2eTest
23:24:24.373 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.374 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5938041b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@10b648c0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@9d2723e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@68817cd7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7180b500, org.springframework.test.context.transaction.TransactionalTestExecutionListener@535203b8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@490bc86e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2a0f625c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5e53faa8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1ddf7d19, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@a809e74, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5bcc10fa]
23:24:24.375 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c07798b testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@9b79784, testMethod = findsByExactStringValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@309c821d testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.376 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.376 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.378 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName=:param0
23:24:24.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:24.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName=:param0
23:24:24.381 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name=?
23:24:24.385 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c07798b testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@9b79784, testMethod = findsByExactStringValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@309c821d testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.386 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c07798b testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@2eea76bc, testMethod = findsByExactDateValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@309c821d testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.386 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.387 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.394 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c07798b testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@2eea76bc, testMethod = findsByExactDateValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@309c821d testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.395 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c07798b testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@3c42114d, testMethod = findsByExactLongValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@309c821d testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.395 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.395 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.397 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.400 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1920L
23:24:24.400 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1920L'

23:24:24.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1920'

23:24:24.403 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1920L
23:24:24.403 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1920
23:24:24.406 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c07798b testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@3c42114d, testMethod = findsByExactLongValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@309c821d testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.407 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c07798b testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@208d5110, testMethod = findsByExactEnumValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@309c821d testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.408 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.408 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.409 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.415 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c07798b testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@208d5110, testMethod = findsByExactEnumValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@309c821d testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
Running net.kaczmarzyk.NotEqualE2ETest
23:24:24.416 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.416 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1f82267e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@175a0f81, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@70eb197f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@f308a2f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@10fec61, org.springframework.test.context.transaction.TransactionalTestExecutionListener@466eddc6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ee60495, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@650c9a94, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1b9e0eb0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2bae60e8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@75321ba4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@746be7ac]
23:24:24.418 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@9ed1f3f testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@4a256169, testMethod = findsByExactStringValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d1915d1 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.418 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.418 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.420 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName<>:param0
23:24:24.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:24.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName<>:param0
23:24:24.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name<>?
23:24:24.428 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@9ed1f3f testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@4a256169, testMethod = findsByExactStringValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d1915d1 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.429 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@9ed1f3f testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@51e05e54, testMethod = findsByExactDateValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d1915d1 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.430 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.430 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.431 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.436 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@9ed1f3f testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@51e05e54, testMethod = findsByExactDateValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d1915d1 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.437 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@9ed1f3f testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@10218fdf, testMethod = findsByExactLongValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d1915d1 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.438 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.438 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.439 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.441 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>2012L
23:24:24.441 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2012L'

23:24:24.442 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2012'

23:24:24.442 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>2012L
23:24:24.442 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>2012
23:24:24.446 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@9ed1f3f testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@10218fdf, testMethod = findsByExactLongValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d1915d1 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.447 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@9ed1f3f testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@4d9fedfa, testMethod = findsByExactEnumValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d1915d1 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.447 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.447 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.449 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.455 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@9ed1f3f testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@4d9fedfa, testMethod = findsByExactEnumValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5d1915d1 testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 sec
Running net.kaczmarzyk.PathVariableHandlingE2eTest
23:24:24.456 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.457 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6d425496, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@9f1f42c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3e2544e9, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@597ca350, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2665ba0d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@20337a79, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3425709a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@87f336d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3c155bd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@389a070e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@27241127, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5631baf5]
23:24:24.458 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@35dba0b4 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@2d8d2832, testMethod = findsByIdProviedInPathVariableAndByRegularSpec@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58f0acce testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.459 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.459 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.460 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.464 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 )
23:24:24.464 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:24.464 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:24.464 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 )
23:24:24.464 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=?
23:24:24.473 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@35dba0b4 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@2d8d2832, testMethod = findsByIdProviedInPathVariableAndByRegularSpec@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58f0acce testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.473 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@35dba0b4 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@6871cd51, testMethod = findsByIdProvidedInPathVariableWithRegex@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58f0acce testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.474 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.474 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.475 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2081L
23:24:24.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2081L'

23:24:24.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2081'

23:24:24.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2081L
23:24:24.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2081
23:24:24.482 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@35dba0b4 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@6871cd51, testMethod = findsByIdProvidedInPathVariableWithRegex@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58f0acce testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.483 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@35dba0b4 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@2fd2cf1f, testMethod = findsByIdProvidedInPathVariableWithRegexpWithRequestMappingAtClassLevel@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58f0acce testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.483 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.483 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.485 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2104L
23:24:24.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2104L'

23:24:24.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2104'

23:24:24.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2104L
23:24:24.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2104
23:24:24.491 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@35dba0b4 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@2fd2cf1f, testMethod = findsByIdProvidedInPathVariableWithRegexpWithRequestMappingAtClassLevel@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58f0acce testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.491 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@35dba0b4 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@779ca85f, testMethod = findsByIdProvidedInPathVariable@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58f0acce testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.492 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.492 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.493 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.495 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2127L
23:24:24.495 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2127L'

23:24:24.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2127'

23:24:24.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2127L
23:24:24.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2127
23:24:24.499 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@35dba0b4 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@779ca85f, testMethod = findsByIdProvidedInPathVariable@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58f0acce testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.500 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@35dba0b4 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@794245eb, testMethod = returnsHttp404WhenSentRequestContainsPathVarInInvalidFormat@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58f0acce testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.500 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.500 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.502 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.506 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@35dba0b4 testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@794245eb, testMethod = returnsHttp404WhenSentRequestContainsPathVarInInvalidFormat@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58f0acce testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.051 sec
Running net.kaczmarzyk.ConjunctionE2eTest
23:24:24.507 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.507 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2bdf341a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@58b709c9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3d8eae5d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@12ff3bb8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@40d2b219, org.springframework.test.context.transaction.TransactionalTestExecutionListener@204b128b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@68ffbc99, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b678c5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@56a150d0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2e86dfc5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b88b5f8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@bc8921c]
23:24:24.509 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3241c573 testClass = ConjunctionE2eTest, testInstance = net.kaczmarzyk.ConjunctionE2eTest@62cf74f3, testMethod = findsByStreetAndFullName@ConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f7be76 testClass = ConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.509 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.509 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.510 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.512 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.address.street like :param2 )
23:24:24.512 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'firstName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'address'
             |  \-[IDENT] Node: 'street'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:24.513 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
             |  \-[IDENT] IdentNode: 'street' {originalText=street}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.513 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.address.street like :param2 )
23:24:24.513 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.last_name like ?) and (customer0_.street like ?)
23:24:24.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:24:24.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:24.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:24:24.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name like ? or customer0_.last_name like ?
23:24:24.524 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3241c573 testClass = ConjunctionE2eTest, testInstance = net.kaczmarzyk.ConjunctionE2eTest@62cf74f3, testMethod = findsByStreetAndFullName@ConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f7be76 testClass = ConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running net.kaczmarzyk.NotEqualIgnoreCaseE2eTest
23:24:24.525 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.525 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@585f319e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@48ee84b0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1b6ad296, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@574dcc6a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@763fc4dc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4ac805af, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@77b9002, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3eec221b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@367d083e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3c929623, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@67b2ea33, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3891f024]
23:24:24.527 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1ae4bdf4 testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@752ee6e1, testMethod = findsByEnumValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fe1dee9 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.527 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.527 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.529 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.530 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.530 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.531 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.534 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1ae4bdf4 testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@752ee6e1, testMethod = findsByEnumValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fe1dee9 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.535 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1ae4bdf4 testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@37f5c5fd, testMethod = findsByStringValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fe1dee9 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.536 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.536 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.537 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.537 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.537 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.539 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.542 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1ae4bdf4 testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@37f5c5fd, testMethod = findsByStringValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7fe1dee9 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running net.kaczmarzyk.JoinE2eTest
23:24:24.543 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.543 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@515e9100, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2773791d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@51d502a6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@24309836, org.springframework.test.context.support.DirtiesContextTestExecutionListener@143cb21, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3dc4e185, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@447d14a9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@64acc538, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ba9104f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@617b1e76, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4d0f96ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4f880f30]
23:24:24.548 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@2fce09c0, testMethod = findsByOrders@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.549 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.549 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.550 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0 order by generatedAlias0.id asc
23:24:24.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[LIKE] Node: 'like'
    |     +-[METHOD_CALL] Node: '('
    |     |  +-[IDENT] Node: 'upper'
    |     |  \-[EXPR_LIST] Node: 'exprList'
    |     |     \-[DOT] Node: '.'
    |     |        +-[IDENT] Node: 'generatedAlias1'
    |     |        \-[IDENT] Node: 'itemName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:24.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[LIKE] BinaryLogicOperatorNode: 'like'
    |     +-[METHOD_CALL] MethodNode: '('
    |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |     |  \-[EXPR_LIST] SqlNode: 'exprList'
    |     |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:24.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0 order by generatedAlias0.id asc
23:24:24.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where upper(orders1_.item_name) like ? order by customer0_.id asc
23:24:24.558 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@2fce09c0, testMethod = findsByOrders@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.559 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@439a4def, testMethod = findsByOrdersWithPagination@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.559 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.559 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.560 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.564 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0
23:24:24.564 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias1'
          |        \-[IDENT] Node: 'itemName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:24.565 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.565 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0
23:24:24.565 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where upper(orders1_.item_name) like ?
23:24:24.568 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@439a4def, testMethod = findsByOrdersWithPagination@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.569 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@6a8ebb66, testMethod = resolvesJoinProperlyFromAnnotatedCustomInterface@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.570 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.570 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.571 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName in (:param0) order by generatedAlias0.id asc
23:24:24.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias1'
    |     |  \-[IDENT] Node: 'itemName'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:24.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:24.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName in (:param0) order by generatedAlias0.id asc
23:24:24.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where orders1_.item_name in (?) order by customer0_.id asc
23:24:24.580 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@6a8ebb66, testMethod = resolvesJoinProperlyFromAnnotatedCustomInterface@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.581 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@5c333991, testMethod = createsDistinctQueryByDefault@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.581 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.581 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.583 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.584 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.itemName=:param1 ) order by generatedAlias0.id asc
23:24:24.585 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[OR] Node: 'or'
    |     +-[LIKE] Node: 'like'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'generatedAlias2'
    |     |  |  \-[IDENT] Node: 'itemName'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'param0'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias1'
    |        |  \-[IDENT] Node: 'itemName'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:24.585 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[OR] SqlNode: 'or'
    |     +-[LIKE] BinaryLogicOperatorNode: 'like'
    |     |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
    |     |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
    |     |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |        |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |        |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:24.585 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.itemName=:param1 ) order by generatedAlias0.id asc
23:24:24.585 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where orders2_.item_name like ? or orders1_.item_name=? order by customer0_.id asc
23:24:24.590 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@5c333991, testMethod = createsDistinctQueryByDefault@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.591 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@773329cb, testMethod = findsByOrdersAndName@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.591 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.591 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.592 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where ( generatedAlias0.firstName=:param0 ) and ( upper(generatedAlias1.itemName) like :param1 ) order by generatedAlias0.id asc
23:24:24.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'generatedAlias0'
    |     |  |  \-[IDENT] Node: 'firstName'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'param0'
    |     \-[LIKE] Node: 'like'
    |        +-[METHOD_CALL] Node: '('
    |        |  +-[IDENT] Node: 'upper'
    |        |  \-[EXPR_LIST] Node: 'exprList'
    |        |     \-[DOT] Node: '.'
    |        |        +-[IDENT] Node: 'generatedAlias1'
    |        |        \-[IDENT] Node: 'itemName'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:24.595 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
    |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |     |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    |     \-[LIKE] BinaryLogicOperatorNode: 'like'
    |        +-[METHOD_CALL] MethodNode: '('
    |        |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |        |  \-[EXPR_LIST] SqlNode: 'exprList'
    |        |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |        |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |        |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:24.595 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where ( generatedAlias0.firstName=:param0 ) and ( upper(generatedAlias1.itemName) like :param1 ) order by generatedAlias0.id asc
23:24:24.595 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where customer0_.first_name=? and (upper(orders1_.item_name) like ?) order by customer0_.id asc
23:24:24.599 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@773329cb, testMethod = findsByOrdersAndName@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.600 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@3487a5d1, testMethod = filtersByAttributesOfMultipleJoins@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.600 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.600 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.602 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.604 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) order by generatedAlias0.id asc
23:24:24.605 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[OR] Node: 'or'
    |        +-[LIKE] Node: 'like'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'generatedAlias2'
    |        |  |  \-[IDENT] Node: 'itemName'
    |        |  \-[COLON] Node: ':'
    |        |     \-[IDENT] Node: 'param0'
    |        \-[EQ] Node: '='
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'generatedAlias1'
    |           |  \-[IDENT] Node: 'badgeType'
    |           \-[COLON] Node: ':'
    |              \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:24.605 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[OR] SqlNode: 'or'
    |        +-[LIKE] BinaryLogicOperatorNode: 'like'
    |        |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
    |        |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
    |        |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
    |        \-[EQ] BinaryLogicOperatorNode: '='
    |           +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
    |           |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
    |           |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
    |           \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:24.605 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) order by generatedAlias0.id asc
23:24:24.605 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where 1=1 and (orders2_.item_name like ? or badges1_.badge_type=?) order by customer0_.id asc
23:24:24.610 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1ac864d7 testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@3487a5d1, testMethod = filtersByAttributesOfMultipleJoins@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5186e67f testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.067 sec
Running net.kaczmarzyk.ConstValsE2eTest
23:24:24.611 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.611 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@14568116, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@548b7e1a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@790a35fd, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f45ab4a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@f3bc185, org.springframework.test.context.transaction.TransactionalTestExecutionListener@cf15d6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@28c27def, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2adf9c46, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7b394771, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3a09c65, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@38b6b4fb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6e5d2207]
23:24:24.612 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@146fff56 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@270ba731, testMethod = filtersBySingleSpecWithMultipleConstVals@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1094fb98 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.613 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.613 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.614 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.620 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@146fff56 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@270ba731, testMethod = filtersBySingleSpecWithMultipleConstVals@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1094fb98 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.621 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@146fff56 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@586e92b2, testMethod = filtersByConjunctionSpecWithConstValues@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1094fb98 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.621 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.621 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.623 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.625 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.address.street=:param1 )
23:24:24.625 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'address'
             |  \-[IDENT] Node: 'street'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:24.625 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
             |  \-[IDENT] IdentNode: 'street' {originalText=street}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.625 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.address.street=:param1 )
23:24:24.625 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and customer0_.street=?
23:24:24.629 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@146fff56 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@586e92b2, testMethod = filtersByConjunctionSpecWithConstValues@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1094fb98 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.630 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@146fff56 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@13e0770f, testMethod = filtersBySingleSpecWithSingleConstVal@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1094fb98 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.630 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.630 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.632 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.640 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@146fff56 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@13e0770f, testMethod = filtersBySingleSpecWithSingleConstVal@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1094fb98 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running net.kaczmarzyk.DefaultSpELValE2eTest
23:24:24.645 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.645 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@233c4b40, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@ebfe707, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c1f6481, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e45b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@41f968b0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@300f2857, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@272369bb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@55a2cb2a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5f1495c6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@169043e3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2a428e3b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@69faebc2]
23:24:24.646 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@4473d830, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:24.646 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.646 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.648 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.654 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@4473d830, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.655 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@5990f0ab, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:24.656 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.656 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.657 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.663 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@5990f0ab, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.664 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@1565afbf, testMethod = filtersBySingleSpecWithoutParamUsingRawStringDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:24.665 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.665 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.667 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.673 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@1565afbf, testMethod = filtersBySingleSpecWithoutParamUsingRawStringDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.674 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@474e0ab4, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:24.674 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.674 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.676 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.683 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@474e0ab4, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.684 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@6981107f, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithTemporalConstructor@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:24.684 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.684 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.686 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.692 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@6981107f, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithTemporalConstructor@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.698 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@6cea67d4, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpEL@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@23c07745]; rollback [true]
23:24:24.699 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.699 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.700 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.707 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@aed8be testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@6cea67d4, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpEL@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ddc17d5 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.066 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest
23:24:24.708 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.708 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@24e2435f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@262ba2aa, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56104e84, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1c260202, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2ae85262, org.springframework.test.context.transaction.TransactionalTestExecutionListener@512d8b67, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@59d8ba8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2907bf0b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4194830b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7cdf5eed, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@15764a15, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@19d4057]
23:24:24.710 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@10216c09 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@68b7a133, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1942bc06 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.710 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.710 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.711 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 )
23:24:24.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:24.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:24.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 )
23:24:24.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name=? or customer0_.first_name=?) and customer0_.gender=?
23:24:24.721 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@10216c09 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@68b7a133, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1942bc06 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.722 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@10216c09 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@647564c2, testMethod = filtersAccordingToEmptyFilterExtendedByConjunctionSpecParam@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1942bc06 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.722 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.722 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.724 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.732 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@10216c09 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@647564c2, testMethod = filtersAccordingToEmptyFilterExtendedByConjunctionSpecParam@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1942bc06 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.732 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@10216c09 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@366f3b0c, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1942bc06 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.733 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.733 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.734 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 ) ) and ( ( ( generatedAlias0.firstName like :param3 ) or ( generatedAlias0.firstName like :param4 ) ) and ( generatedAlias0.firstName like :param5 ) )
23:24:24.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[OR] Node: 'or'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'lastName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'gender'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[AND] Node: 'and'
             +-[OR] Node: 'or'
             |  +-[LIKE] Node: 'like'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  |  \-[IDENT] Node: 'firstName'
             |  |  \-[COLON] Node: ':'
             |  |     \-[IDENT] Node: 'param3'
             |  \-[LIKE] Node: 'like'
             |     +-[DOT] Node: '.'
             |     |  +-[IDENT] Node: 'generatedAlias0'
             |     |  \-[IDENT] Node: 'firstName'
             |     \-[COLON] Node: ':'
             |        \-[IDENT] Node: 'param4'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param5'

23:24:24.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@7b9b244e}
          \-[AND] SqlNode: 'and'
             +-[OR] SqlNode: 'or'
             |  +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@7a8e35d1}
             |  \-[LIKE] BinaryLogicOperatorNode: 'like'
             |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |     \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@7a8e35d1}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param5, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.740 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 ) ) and ( ( ( generatedAlias0.firstName like :param3 ) or ( generatedAlias0.firstName like :param4 ) ) and ( generatedAlias0.firstName like :param5 ) )
23:24:24.740 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name=? or customer0_.first_name=?) and customer0_.gender=? and (customer0_.first_name like ? or customer0_.first_name like ?) and (customer0_.first_name like ?)
23:24:24.744 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@10216c09 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@366f3b0c, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1942bc06 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.745 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@10216c09 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@c4078b6, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1942bc06 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.745 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.745 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.747 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.754 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@10216c09 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@c4078b6, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1942bc06 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest
23:24:24.756 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.756 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@30b55cae, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@57b2e99, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@235e2dec, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2ba83c41, org.springframework.test.context.support.DirtiesContextTestExecutionListener@316245b6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d31bae5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3fd2dbe2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@55f2a26d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@761e1290, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@16987824, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3f3cacde, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7f1d809e]
23:24:24.757 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@10c834af testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest@50dc7396, testMethod = filtersAccordingToAnnotatedSpec@AnnotatedSpecInterfaceJoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4a0abf27 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.757 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.757 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.759 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.767 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@10c834af testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest@50dc7396, testMethod = filtersAccordingToAnnotatedSpec@AnnotatedSpecInterfaceJoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4a0abf27 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest
23:24:24.768 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.768 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@54d6c1e6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3c91189, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@36a0e677, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@711bbb03, org.springframework.test.context.support.DirtiesContextTestExecutionListener@13a09d37, org.springframework.test.context.transaction.TransactionalTestExecutionListener@582e8393, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@698c55bf, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@45e3282e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@52bd4c80, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7e236f5f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7589fc89, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2977084e]
23:24:24.770 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6f319f62 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6a26271b, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ed5e17c testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.770 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.770 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.771 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 )
23:24:24.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gender'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:24.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 )
23:24:24.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? or customer0_.first_name like ?
23:24:24.781 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6f319f62 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6a26271b, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ed5e17c testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.782 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6f319f62 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@587bec4c, testMethod = filtersAccordingToInterfaceWithOrSpecExtendedBySpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ed5e17c testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.782 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.782 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.784 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.785 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:24:24.786 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gender'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:24.786 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@7b9b244e}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.786 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:24:24.786 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.gender=? or customer0_.first_name like ?) and customer0_.last_name=?
23:24:24.795 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6f319f62 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@587bec4c, testMethod = filtersAccordingToInterfaceWithOrSpecExtendedBySpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ed5e17c testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.796 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6f319f62 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@48835d79, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ed5e17c testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.796 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.796 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.798 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.806 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6f319f62 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@48835d79, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ed5e17c testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.807 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6f319f62 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@55f92ddb, testMethod = filtersAccordingToInterfaceWithOrSpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ed5e17c testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.807 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.807 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.809 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.814 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6f319f62 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@55f92ddb, testMethod = filtersAccordingToInterfaceWithOrSpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ed5e17c testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.815 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6f319f62 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@3af207fc, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ed5e17c testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.816 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.816 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.817 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.825 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6f319f62 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@3af207fc, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3ed5e17c testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.056 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest
23:24:24.826 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.827 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7fd68450, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ece21c9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1b618413, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@60285daa, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2b97a1fb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@14680d29, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@33e52ab, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@21d99a6b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37d77fd2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@63822d44, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@12d89095, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7f3f5a67]
23:24:24.828 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@3b66175, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.829 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.829 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.830 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.834 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) ) and ( generatedAlias0.weight in (50) )
23:24:24.835 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'firstName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'lastName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[AND] Node: 'and'
          |     +-[EQ] Node: '='
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias0'
          |     |  |  \-[IDENT] Node: 'gender'
          |     |  \-[COLON] Node: ':'
          |     |     \-[IDENT] Node: 'param2'
          |     \-[LIKE] Node: 'like'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'firstName'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'param3'
          \-[IN] Node: 'in'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'weight'
             \-[IN_LIST] Node: 'inList'
                \-[NUM_INT] Node: '50'

23:24:24.835 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[AND] SqlNode: 'and'
          |     +-[EQ] BinaryLogicOperatorNode: '='
          |     |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@7b9b244e}
          |     \-[LIKE] BinaryLogicOperatorNode: 'like'
          |        +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[IN] InLogicOperatorNode: 'in'
             +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
             \-[IN_LIST] SqlNode: 'inList'
                \-[NUM_INT] LiteralNode: '50'

23:24:24.835 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) ) and ( generatedAlias0.weight in (50) )
23:24:24.835 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ?) and customer0_.last_name=? and customer0_.gender=? and (customer0_.first_name like ?) and (customer0_.weight in (50))
23:24:24.839 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@3b66175, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.840 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@6dca770f, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.840 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.840 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.841 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( ( generatedAlias0.gender=:param1 ) and ( generatedAlias0.firstName like :param2 ) ) and ( upper(generatedAlias0.firstName) like :param3 )
23:24:24.846 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[AND] Node: 'and'
          |     +-[EQ] Node: '='
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias0'
          |     |  |  \-[IDENT] Node: 'gender'
          |     |  \-[COLON] Node: ':'
          |     |     \-[IDENT] Node: 'param1'
          |     \-[LIKE] Node: 'like'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'firstName'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'param2'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param3'

23:24:24.847 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[AND] SqlNode: 'and'
          |     +-[EQ] BinaryLogicOperatorNode: '='
          |     |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@7b9b244e}
          |     \-[LIKE] BinaryLogicOperatorNode: 'like'
          |        +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.847 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( ( generatedAlias0.gender=:param1 ) and ( generatedAlias0.firstName like :param2 ) ) and ( upper(generatedAlias0.firstName) like :param3 )
23:24:24.847 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=? and (customer0_.first_name like ?) and (upper(customer0_.first_name) like ?)
23:24:24.850 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@6dca770f, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.851 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@2e3abc3b, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.851 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.851 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.853 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.854 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) ) and ( generatedAlias0.weight in (50) ) and ( generatedAlias0.occupation like :param4 )
23:24:24.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[AND] Node: 'and'
          |  |  |  +-[LIKE] Node: 'like'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  |  \-[IDENT] Node: 'firstName'
          |  |  |  |  \-[COLON] Node: ':'
          |  |  |  |     \-[IDENT] Node: 'param0'
          |  |  |  \-[EQ] Node: '='
          |  |  |     +-[DOT] Node: '.'
          |  |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |     |  \-[IDENT] Node: 'lastName'
          |  |  |     \-[COLON] Node: ':'
          |  |  |        \-[IDENT] Node: 'param1'
          |  |  \-[AND] Node: 'and'
          |  |     +-[EQ] Node: '='
          |  |     |  +-[DOT] Node: '.'
          |  |     |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  |  \-[IDENT] Node: 'gender'
          |  |     |  \-[COLON] Node: ':'
          |  |     |     \-[IDENT] Node: 'param2'
          |  |     \-[LIKE] Node: 'like'
          |  |        +-[DOT] Node: '.'
          |  |        |  +-[IDENT] Node: 'generatedAlias0'
          |  |        |  \-[IDENT] Node: 'firstName'
          |  |        \-[COLON] Node: ':'
          |  |           \-[IDENT] Node: 'param3'
          |  \-[IN] Node: 'in'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'weight'
          |     \-[IN_LIST] Node: 'inList'
          |        \-[NUM_INT] Node: '50'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'occupation'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param4'

23:24:24.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[AND] SqlNode: 'and'
          |  |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |  |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  |  \-[AND] SqlNode: 'and'
          |  |     +-[EQ] BinaryLogicOperatorNode: '='
          |  |     |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@7b9b244e}
          |  |     \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |        +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |        |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |        \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[IN] InLogicOperatorNode: 'in'
          |     +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          |     \-[IN_LIST] SqlNode: 'inList'
          |        \-[NUM_INT] LiteralNode: '50'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.occupation' {propertyName=occupation,dereferenceType=PRIMITIVE,getPropertyPath=occupation,path=generatedAlias0.occupation,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'occupation' {originalText=occupation}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) ) and ( generatedAlias0.weight in (50) ) and ( generatedAlias0.occupation like :param4 )
23:24:24.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ?) and customer0_.last_name=? and customer0_.gender=? and (customer0_.first_name like ?) and (customer0_.weight in (50)) and (customer0_.occupation like ?)
23:24:24.859 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@2e3abc3b, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.860 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@39487f70, testMethod = filtersAccordingToInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.860 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.860 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.861 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.869 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@39487f70, testMethod = filtersAccordingToInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.870 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@1c5e759e, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.870 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.870 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.872 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( ( generatedAlias0.gender=:param1 ) and ( generatedAlias0.firstName like :param2 ) )
23:24:24.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[AND] Node: 'and'
             +-[EQ] Node: '='
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'gender'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param1'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param2'

23:24:24.874 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[AND] SqlNode: 'and'
             +-[EQ] BinaryLogicOperatorNode: '='
             |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@7b9b244e}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.874 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( ( generatedAlias0.gender=:param1 ) and ( generatedAlias0.firstName like :param2 ) )
23:24:24.874 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=? and (customer0_.first_name like ?)
23:24:24.878 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@1c5e759e, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.879 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@104f120c, testMethod = filtersAccordingToInterfaceWithoutAnySpecAndBySpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.879 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.879 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.880 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.888 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@104f120c, testMethod = filtersAccordingToInterfaceWithoutAnySpecAndBySpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.889 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@32809f98, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.889 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.889 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.890 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.898 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@32809f98, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.899 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@5d48873d, testMethod = filtersAccordingToInterfaceWithAndSpecAndSpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.899 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.899 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.901 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:24.906 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@144316a6 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@5d48873d, testMethod = filtersAccordingToInterfaceWithAndSpecAndSpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@497b783 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.08 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest
23:24:24.907 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.907 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@66621937, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5557cc74, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@657c5b20, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@37ad86cb, org.springframework.test.context.support.DirtiesContextTestExecutionListener@41709aa8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a2fda9e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2d0d31a0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@764d7114, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@33ad10af, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6782d76e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@23466a0f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3e1e7aa2]
23:24:24.908 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45a98c98 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@7ccbf0d0, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@65bbf773 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.909 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.909 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.910 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.914 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 )
23:24:24.914 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'gender'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:24.915 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@7b9b244e}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.915 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 )
23:24:24.915 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=? or customer0_.first_name=?
23:24:24.919 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45a98c98 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@7ccbf0d0, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@65bbf773 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.920 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45a98c98 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@1ced415b, testMethod = filtersAccordingToEmptyFilterExtendedByDisjunctionSpecParam@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@65bbf773 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.920 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.920 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.921 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.928 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45a98c98 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@1ced415b, testMethod = filtersAccordingToEmptyFilterExtendedByDisjunctionSpecParam@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@65bbf773 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.929 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45a98c98 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@43d21ec0, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@65bbf773 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.930 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.930 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.931 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( ( ( generatedAlias0.lastName=:param2 ) and ( generatedAlias0.gender=:param3 ) ) or ( generatedAlias0.firstName=:param4 ) )
23:24:24.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'firstName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[OR] Node: 'or'
             +-[AND] Node: 'and'
             |  +-[EQ] Node: '='
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  |  \-[IDENT] Node: 'lastName'
             |  |  \-[COLON] Node: ':'
             |  |     \-[IDENT] Node: 'param2'
             |  \-[EQ] Node: '='
             |     +-[DOT] Node: '.'
             |     |  +-[IDENT] Node: 'generatedAlias0'
             |     |  \-[IDENT] Node: 'gender'
             |     \-[COLON] Node: ':'
             |        \-[IDENT] Node: 'param3'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param4'

23:24:24.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[OR] SqlNode: 'or'
             +-[AND] SqlNode: 'and'
             |  +-[EQ] BinaryLogicOperatorNode: '='
             |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}
             |  \-[EQ] BinaryLogicOperatorNode: '='
             |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             |     \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.CustomType@7b9b244e}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.936 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( ( ( generatedAlias0.lastName=:param2 ) and ( generatedAlias0.gender=:param3 ) ) or ( generatedAlias0.firstName=:param4 ) )
23:24:24.936 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.first_name like ?) and (customer0_.last_name=? and customer0_.gender=? or customer0_.first_name=?)
23:24:24.939 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45a98c98 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@43d21ec0, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@65bbf773 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.940 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45a98c98 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@60c972b9, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@65bbf773 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.940 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.940 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.941 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.949 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45a98c98 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@60c972b9, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@65bbf773 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest
23:24:24.950 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:24.950 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@70663424, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3343f1db, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@44579647, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1811f98c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@599739be, org.springframework.test.context.transaction.TransactionalTestExecutionListener@75f6c67e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@d6b8329, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1aa1c691, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7a9b56b2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@399daaa9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@68be0478, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7c3fc2b0]
23:24:24.952 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4aaefbce, testMethod = filtersAccordingToFiltersInWholeInheritanceTree@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.952 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.952 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.953 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.958 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName=:param0 ) and ( generatedAlias2.badgeType=:param1 ) and ( ( generatedAlias0.gender in (:param2) ) and ( generatedAlias0.firstName in (:param3) ) )
23:24:24.958 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  \-[IDENT] Node: 'itemName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'badgeType'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[AND] Node: 'and'
             +-[IN] Node: 'in'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'gender'
             |  \-[IN_LIST] Node: 'inList'
             |     \-[COLON] Node: ':'
             |        \-[IDENT] Node: 'param2'
             \-[IN] Node: 'in'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[IN_LIST] Node: 'inList'
                   \-[COLON] Node: ':'
                      \-[IDENT] Node: 'param3'

23:24:24.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, badges2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join badges badges2_ on customer0_.id=badges2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |  |  |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'badges2_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias2.badgeType,tableAlias=badges2_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'badges2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges2_}
          |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[AND] SqlNode: 'and'
             +-[IN] InLogicOperatorNode: 'in'
             |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             |  \-[IN_LIST] SqlNode: 'inList'
             |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@7b9b244e}
             \-[IN] InLogicOperatorNode: 'in'
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[IN_LIST] SqlNode: 'inList'
                   \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName=:param0 ) and ( generatedAlias2.badgeType=:param1 ) and ( ( generatedAlias0.gender in (:param2) ) and ( generatedAlias0.firstName in (:param3) ) )
23:24:24.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join badges badges2_ on customer0_.id=badges2_.customer_id where orders1_.item_name=? and badges2_.badge_type=? and (customer0_.gender in (?)) and (customer0_.first_name in (?))
23:24:24.962 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4aaefbce, testMethod = filtersAccordingToFiltersInWholeInheritanceTree@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.963 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4ec8083, testMethod = doesNoFilteringIfParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.964 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.964 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.965 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.971 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4ec8083, testMethod = doesNoFilteringIfParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.972 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@2ad63b2, testMethod = filtersAccordingToAnnotatedSimpleSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.972 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.972 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.981 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@2ad63b2, testMethod = filtersAccordingToAnnotatedSimpleSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.981 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@13a984b0, testMethod = filtersAccordingToAnnotatedSimpleSpecInterfaceExtendedWithParamSpecificSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.982 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.982 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.983 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.984 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.firstName like :param1 )
23:24:24.985 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:24.985 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:24.985 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.firstName like :param1 )
23:24:24.985 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and (customer0_.first_name like ?)
23:24:24.989 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@13a984b0, testMethod = filtersAccordingToAnnotatedSimpleSpecInterfaceExtendedWithParamSpecificSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:24.989 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@6badcaa3, testMethod = filtersAccordingToAnnotatedAndSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:24.990 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:24.990 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:24.991 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:24.995 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.gender=:param1 )
23:24:24.995 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:24.996 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@7b9b244e}

23:24:24.996 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.gender=:param1 )
23:24:24.996 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and customer0_.gender=?
23:24:25.000 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@6badcaa3, testMethod = filtersAccordingToAnnotatedAndSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.001 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4b808, testMethod = filtersAccordingToAnnotatedOrSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.001 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.001 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.002 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.035 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4b808, testMethod = filtersAccordingToAnnotatedOrSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.036 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@47a782a1, testMethod = filtersAccordingInterfaceSpecIfParamSpecParameterIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.036 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.036 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.038 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.043 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@47a782a1, testMethod = filtersAccordingInterfaceSpecIfParamSpecParameterIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.043 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@139ea015, testMethod = doesNotFilterAtAllIfBothIfaceAndParamParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.044 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.044 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.045 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.050 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@139ea015, testMethod = doesNotFilterAtAllIfBothIfaceAndParamParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.051 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@16c58781, testMethod = filtersByConjunctionOfAnnotatedInterfaceAndItsParentClass@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.052 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.052 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.053 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.057 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( ( generatedAlias0.firstName like :param1 ) or ( generatedAlias0.lastName like :param2 ) )
23:24:25.057 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gold'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'firstName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param1'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'lastName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param2'

23:24:25.058 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:25.058 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( ( generatedAlias0.firstName like :param1 ) or ( generatedAlias0.lastName like :param2 ) )
23:24:25.058 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (customer0_.first_name like ? or customer0_.last_name like ?)
23:24:25.061 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@16c58781, testMethod = filtersByConjunctionOfAnnotatedInterfaceAndItsParentClass@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.062 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@2379f977, testMethod = filtersAccordingToParamSpecificSpecIfInterfaceSpecParamIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.062 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.062 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.064 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.068 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@2379f977, testMethod = filtersAccordingToParamSpecificSpecIfInterfaceSpecParamIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.069 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@467fe45, testMethod = filtersAccordingToAnnotatedOrSpecInterfaceExtendedWithParamSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.069 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.069 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.071 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.076 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@45d39ccd testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@467fe45, testMethod = filtersAccordingToAnnotatedOrSpecInterfaceExtendedWithParamSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13808cf6 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.128 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest
23:24:25.077 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.077 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@413bf74f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8d464df, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2ac964f3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6ae52aa2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@747a393e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5fa349f2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3e2c4009, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7d5fdd54, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@58c9a808, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1de0963a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4110a187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4226618c]
23:24:25.079 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a29be6f testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@1a49f8b8, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5a11f1e9 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.079 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.079 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.081 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.085 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( generatedAlias0.lastName=:param2 )
23:24:25.085 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[OR] Node: 'or'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias1'
          |  |     |  \-[IDENT] Node: 'badgeType'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[NUM_INT] Node: '1'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:25.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[NUM_INT] LiteralNode: '1'
          |     \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:25.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( generatedAlias0.lastName=:param2 )
23:24:25.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1 and customer0_.last_name=?
23:24:25.089 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a29be6f testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@1a49f8b8, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5a11f1e9 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.090 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a29be6f testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@6b0a6523, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5a11f1e9 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.091 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.091 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.092 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) )
23:24:25.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '1'
          |  \-[NUM_INT] Node: '1'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias2'
             |  |  \-[IDENT] Node: 'itemName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param0'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias1'
                |  \-[IDENT] Node: 'badgeType'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param1'

23:24:25.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '1'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
                |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
                |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:25.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) )
23:24:25.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where 1=1 and (orders2_.item_name like ? or badges1_.badge_type=?)
23:24:25.101 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a29be6f testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@6b0a6523, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5a11f1e9 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.102 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a29be6f testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@b6b8b74, testMethod = filtersAccordingToCustomJoinsFilterExtendingOtherJoinsFilter@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5a11f1e9 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.102 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.102 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.103 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.107 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName like :param0 ) and ( 1=1 ) and ( generatedAlias2.badgeType=:param1 ) and ( 1=1 )
23:24:25.108 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[NUM_INT] Node: '1'
          |  |     \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'badgeType'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:24:25.108 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, badges2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges2_ on customer0_.id=badges2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[NUM_INT] LiteralNode: '1'
          |  |     \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'badges2_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias2.badgeType,tableAlias=badges2_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'badges2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges2_}
          |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:24:25.108 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName like :param0 ) and ( 1=1 ) and ( generatedAlias2.badgeType=:param1 ) and ( 1=1 )
23:24:25.108 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join badges badges2_ on customer0_.id=badges2_.customer_id where (orders1_.item_name like ?) and 1=1 and badges2_.badge_type=? and 1=1
23:24:25.112 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a29be6f testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@b6b8b74, testMethod = filtersAccordingToCustomJoinsFilterExtendingOtherJoinsFilter@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5a11f1e9 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.113 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a29be6f testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@69e2995e, testMethod = filtersAccordingToAnnotatedJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5a11f1e9 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.113 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.113 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.115 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.116 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 )
23:24:25.116 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  \-[IDENT] Node: 'itemName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias1'
          |     |  \-[IDENT] Node: 'badgeType'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:24:25.117 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:24:25.117 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 )
23:24:25.117 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1
23:24:25.121 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a29be6f testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@69e2995e, testMethod = filtersAccordingToAnnotatedJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5a11f1e9 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.122 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a29be6f testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@22740b64, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5a11f1e9 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.122 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.122 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.123 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.127 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 left join generatedAlias0.badges as generatedAlias3 left join generatedAlias0.orders as generatedAlias4 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( ( generatedAlias4.itemName like :param2 ) or ( generatedAlias3.badgeType=:param3 ) ) and ( 1=1 )
23:24:25.128 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias2'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias3'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias4'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[OR] Node: 'or'
          |  |  |  +-[LIKE] Node: 'like'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  |  \-[COLON] Node: ':'
          |  |  |  |     \-[IDENT] Node: 'param0'
          |  |  |  \-[EQ] Node: '='
          |  |  |     +-[DOT] Node: '.'
          |  |  |     |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |     |  \-[IDENT] Node: 'badgeType'
          |  |  |     \-[COLON] Node: ':'
          |  |  |        \-[IDENT] Node: 'param1'
          |  |  \-[EQ] Node: '='
          |  |     +-[NUM_INT] Node: '1'
          |  |     \-[NUM_INT] Node: '1'
          |  \-[OR] Node: 'or'
          |     +-[LIKE] Node: 'like'
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias4'
          |     |  |  \-[IDENT] Node: 'itemName'
          |     |  \-[COLON] Node: ':'
          |     |     \-[IDENT] Node: 'param2'
          |     \-[EQ] Node: '='
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias3'
          |        |  \-[IDENT] Node: 'badgeType'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'param3'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:24:25.128 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=5, fromElements=5, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1, generatedAlias4, generatedAlias3], fromElementByTableAlias=[orders2_, badges1_, orders4_, badges3_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges3_ on customer0_.id=badges3_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges3_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders4_ on customer0_.id=orders4_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias4,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders4_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[OR] SqlNode: 'or'
          |  |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |  |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[NUM_INT] LiteralNode: '1'
          |  |     \-[NUM_INT] LiteralNode: '1'
          |  \-[OR] SqlNode: 'or'
          |     +-[LIKE] BinaryLogicOperatorNode: 'like'
          |     |  +-[DOT] DotNode: 'orders4_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias4.itemName,tableAlias=orders4_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias4}
          |     |  |  +-[ALIAS_REF] IdentNode: 'orders4_.id' {alias=generatedAlias4, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders4_}
          |     |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}
          |     \-[EQ] BinaryLogicOperatorNode: '='
          |        +-[DOT] DotNode: 'badges3_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias3.badgeType,tableAlias=badges3_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias3}
          |        |  +-[ALIAS_REF] IdentNode: 'badges3_.id' {alias=generatedAlias3, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges3_}
          |        |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:24:25.129 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 left join generatedAlias0.badges as generatedAlias3 left join generatedAlias0.orders as generatedAlias4 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( ( generatedAlias4.itemName like :param2 ) or ( generatedAlias3.badgeType=:param3 ) ) and ( 1=1 )
23:24:25.129 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id left outer join badges badges3_ on customer0_.id=badges3_.customer_id left outer join orders orders4_ on customer0_.id=orders4_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1 and (orders4_.item_name like ? or badges3_.badge_type=?) and 1=1
23:24:25.133 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a29be6f testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@22740b64, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5a11f1e9 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.056 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest
23:24:25.134 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.134 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5977c989, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4d097e4e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@17b48da1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@26f8e09e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@41244e49, org.springframework.test.context.transaction.TransactionalTestExecutionListener@47d9b32d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@74b3e7f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@152e15ea, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@761b5700, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7cd1d235, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1736262a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7252e063]
23:24:25.135 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74e87f03 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@4c159b48, testMethod = filtersAccordingToItemNameBadgeTypeFilter@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ee3ad6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.136 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.136 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.141 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 )
23:24:25.142 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'badgeType'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'itemName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:25.142 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:25.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 )
23:24:25.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where badges1_.badge_type=? and orders2_.item_name=?
23:24:25.146 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74e87f03 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@4c159b48, testMethod = filtersAccordingToItemNameBadgeTypeFilter@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ee3ad6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.147 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74e87f03 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@607d36d5, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ee3ad6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.147 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.148 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.149 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.156 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74e87f03 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@607d36d5, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ee3ad6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.157 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74e87f03 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@3b6585fb, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ee3ad6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.157 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.159 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.162 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 where generatedAlias1.badgeType=:param0
23:24:25.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'badgeType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:25.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 where generatedAlias1.badgeType=:param0
23:24:25.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id where badges1_.badge_type=?
23:24:25.167 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74e87f03 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@3b6585fb, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ee3ad6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.168 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74e87f03 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@5657f300, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ee3ad6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.168 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.168 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.169 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.174 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74e87f03 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@5657f300, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ee3ad6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.175 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74e87f03 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@78f7a9c0, testMethod = filtersAccordingToAnnotatedJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ee3ad6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.175 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.175 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.176 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.180 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74e87f03 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@78f7a9c0, testMethod = filtersAccordingToAnnotatedJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ee3ad6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec
Running net.kaczmarzyk.e2e.converter.DateE2eTest
23:24:25.181 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.182 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5c33ab81, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@558c3671, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@27080a5e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5780bed1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@162e7803, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2225eb09, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@45985fe9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@17bc17bd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@72b79b29, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7f475bd5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@78a724c3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@f51c595]
23:24:25.183 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4a0901f0 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@3a4d2ad, testMethod = findsByDateBeforeWithCustomDateFormat@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f2919c7 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.183 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.183 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.185 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.190 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4a0901f0 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@3a4d2ad, testMethod = findsByDateBeforeWithCustomDateFormat@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f2919c7 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.190 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4a0901f0 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@26d709d2, testMethod = findsByDateBetween@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f2919c7 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.191 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.191 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.192 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.198 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4a0901f0 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@26d709d2, testMethod = findsByDateBetween@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f2919c7 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.199 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4a0901f0 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@5c15e5f7, testMethod = findsByDateAfter@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f2919c7 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.199 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.199 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.201 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.205 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4a0901f0 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@5c15e5f7, testMethod = findsByDateAfter@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f2919c7 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest
23:24:25.206 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.206 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6e9eaa96, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@51defa7a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5e8fb0bd, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5ba6659d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@40f7ae65, org.springframework.test.context.transaction.TransactionalTestExecutionListener@66dc812b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4575df15, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2d17c0ab, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@506ec7ea, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5239d115, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@39df2130, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2a5eac38]
23:24:25.208 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@736e0bf8, testMethod = findsByDateTimeAfterWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.208 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.208 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.209 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.211 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime>:param0
23:24:25.211 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.212 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@a5de4af}

23:24:25.212 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime>:param0
23:24:25.212 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time>?
23:24:25.215 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@736e0bf8, testMethod = findsByDateTimeAfterWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.216 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@1b7440c3, testMethod = findsByDateTimeAfterWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.216 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.216 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.218 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.222 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@1b7440c3, testMethod = findsByDateTimeAfterWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.223 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@546c8875, testMethod = findsByDateTimeBeforeWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.223 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.223 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.225 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime<:param0
23:24:25.227 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.227 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@a5de4af}

23:24:25.227 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime<:param0
23:24:25.227 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time<?
23:24:25.230 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@546c8875, testMethod = findsByDateTimeBeforeWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.231 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@4a5637d7, testMethod = findsByDateTimeBeforeWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.231 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.231 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.233 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.241 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@4a5637d7, testMethod = findsByDateTimeBeforeWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.242 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@27fc70e2, testMethod = findsByDateTimeBetweenWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.242 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.242 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.243 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.245 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime between :param0 and :param1
23:24:25.245 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:25.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@a5de4af}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.LocalDateTimeType@a5de4af}

23:24:25.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime between :param0 and :param1
23:24:25.246 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time between ? and ?
23:24:25.249 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@27fc70e2, testMethod = findsByDateTimeBetweenWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.250 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@647aa680, testMethod = findsByDateTimeBetweenWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.250 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.250 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.252 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.256 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@24300ae1 testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@647aa680, testMethod = findsByDateTimeBetweenWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a249c93 testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec
Running net.kaczmarzyk.e2e.converter.UUIDE2eTest
23:24:25.257 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.257 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@71f83fd1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@54e1c058, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c508924, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@136e7b1c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2358d817, org.springframework.test.context.transaction.TransactionalTestExecutionListener@79e12f24, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@11908095, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@71c6bf20, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@143b496f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6453dcc3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@71d27cf4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@35a9e251]
23:24:25.259 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6caca8ed testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@224bbf2b, testMethod = findsByUUIDEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26d76e45 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.259 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.259 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.261 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.262 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode=:param0
23:24:25.262 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.263 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@2fb425f4}

23:24:25.263 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode=:param0
23:24:25.263 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code=?
23:24:25.267 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6caca8ed testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@224bbf2b, testMethod = findsByUUIDEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26d76e45 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.268 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6caca8ed testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@1eb7de01, testMethod = findByUUIDNotIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26d76e45 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.268 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.268 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.269 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode not in (:param0, :param1)
23:24:25.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:25.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@2fb425f4}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.UUIDBinaryType@2fb425f4}

23:24:25.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode not in (:param0, :param1)
23:24:25.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code not in  (? , ?)
23:24:25.275 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6caca8ed testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@1eb7de01, testMethod = findByUUIDNotIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26d76e45 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.275 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6caca8ed testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@2f5004f, testMethod = findsByUUIDNotEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26d76e45 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.276 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.276 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.277 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode<>:param0
23:24:25.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@2fb425f4}

23:24:25.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode<>:param0
23:24:25.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code<>?
23:24:25.282 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6caca8ed testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@2f5004f, testMethod = findsByUUIDNotEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26d76e45 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.283 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6caca8ed testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@22f28cd1, testMethod = findByUUIDIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26d76e45 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.283 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.283 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.285 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.286 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode in (:param0, :param1)
23:24:25.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:25.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@2fb425f4}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.UUIDBinaryType@2fb425f4}

23:24:25.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode in (:param0, :param1)
23:24:25.287 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code in (? , ?)
23:24:25.290 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6caca8ed testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@22f28cd1, testMethod = findByUUIDIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26d76e45 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
Running net.kaczmarzyk.e2e.converter.LocalDateE2eTest
23:24:25.291 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.292 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@26fb851d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2c375d54, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2febad2e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6a8da58e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@10a416af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6ef2412, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@741f7b3c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@73b901e4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@43187052, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3ca81397, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@33e159a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@8ecc81c]
23:24:25.293 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@5b72fe6b, testMethod = findsByDateAfterWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.293 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.293 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.295 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>:param0
23:24:25.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@3c9e169f}

23:24:25.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>:param0
23:24:25.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date>?
23:24:25.300 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@5b72fe6b, testMethod = findsByDateAfterWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.301 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@3b9c9c51, testMethod = findsByDateBeforeWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.301 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.301 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.302 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.304 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate<:param0
23:24:25.304 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.304 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@3c9e169f}

23:24:25.304 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate<:param0
23:24:25.304 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date<?
23:24:25.307 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@3b9c9c51, testMethod = findsByDateBeforeWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.308 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@561e62ed, testMethod = findsByDateBeforeWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.309 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.309 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.310 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.314 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@561e62ed, testMethod = findsByDateBeforeWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.315 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@67c4963e, testMethod = findsByDateAfterWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.315 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.315 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.317 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.321 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@67c4963e, testMethod = findsByDateAfterWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.322 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@15295502, testMethod = findsByDateBetweenWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.322 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.322 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.323 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.325 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate between :param0 and :param1
23:24:25.325 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:25.326 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@3c9e169f}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.LocalDateType@3c9e169f}

23:24:25.326 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate between :param0 and :param1
23:24:25.326 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date between ? and ?
23:24:25.329 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@15295502, testMethod = findsByDateBetweenWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.330 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@b6199f, testMethod = findsByDateBetweenWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.330 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.330 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.332 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.336 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25de39e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@b6199f, testMethod = findsByDateBetweenWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ddf9dd2 testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 sec
Running net.kaczmarzyk.e2e.converter.InstantE2eTest
23:24:25.337 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.337 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@65b388ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6f1f937, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f3ffea8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2df59f9f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@54789e3e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5dc9edc7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@d538268, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@cdbfd3a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1cc21bf1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@ef77a7b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1fa6f90f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4c47e5ec]
23:24:25.339 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@17600ee3, testMethod = findsByInstantAfterWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.339 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.339 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.340 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant>:param0
23:24:25.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@23488e7a}

23:24:25.343 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant>:param0
23:24:25.343 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant>?
23:24:25.346 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@17600ee3, testMethod = findsByInstantAfterWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.347 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@ff4ab1b, testMethod = findsByInstantBetweenWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.347 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.347 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.348 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant between :param0 and :param1
23:24:25.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:25.351 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@23488e7a}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.InstantType@23488e7a}

23:24:25.351 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant between :param0 and :param1
23:24:25.351 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant between ? and ?
23:24:25.354 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@ff4ab1b, testMethod = findsByInstantBetweenWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.355 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@75351e55, testMethod = findsByInstantBetweenWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.355 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.355 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.357 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.361 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@75351e55, testMethod = findsByInstantBetweenWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.362 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@62c9ba66, testMethod = findsByInstantBeforeWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.363 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.363 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.364 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant<:param0
23:24:25.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@23488e7a}

23:24:25.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant<:param0
23:24:25.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant<?
23:24:25.369 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@62c9ba66, testMethod = findsByInstantBeforeWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.370 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@2fbba0b1, testMethod = findsByInstantBeforeWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.370 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.370 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.372 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.376 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@2fbba0b1, testMethod = findsByInstantBeforeWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.377 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@5ef293a6, testMethod = findsByInstantAfterWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.377 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.377 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.379 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.383 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2acad9f8 testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@5ef293a6, testMethod = findsByInstantAfterWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d8e293 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec
Running net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest
23:24:25.384 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.385 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@45066bc9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@56f5d68f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2928651c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@46559c83, org.springframework.test.context.support.DirtiesContextTestExecutionListener@307befa3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@48c2068d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@22289a0c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4873ab4e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@279a4314, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7fb4df04, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@192ac204, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4c5623b4]
23:24:25.386 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@3673c520, testMethod = findsByOffsetDateTimeAfterWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.386 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.388 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer>:param0
23:24:25.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.390 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@4e4d1bf7}

23:24:25.390 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer>:param0
23:24:25.390 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer>?
23:24:25.393 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@3673c520, testMethod = findsByOffsetDateTimeAfterWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.394 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@3df8c3e9, testMethod = findsByOffsetDateTimeBeforeWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.394 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.394 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.396 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.397 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer<:param0
23:24:25.397 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.398 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@4e4d1bf7}

23:24:25.398 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer<:param0
23:24:25.398 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer<?
23:24:25.401 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@3df8c3e9, testMethod = findsByOffsetDateTimeBeforeWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.402 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@3a579d04, testMethod = findsByOffsetDateTimeBetweenWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.402 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.402 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.403 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.405 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer between :param0 and :param1
23:24:25.405 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:24:25.405 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@4e4d1bf7}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.OffsetDateTimeType@4e4d1bf7}

23:24:25.406 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer between :param0 and :param1
23:24:25.406 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer between ? and ?
23:24:25.409 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@3a579d04, testMethod = findsByOffsetDateTimeBetweenWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.410 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@7eae317e, testMethod = findsByOffsetDateTimeBetweenWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.410 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.410 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.412 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.416 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@7eae317e, testMethod = findsByOffsetDateTimeBetweenWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.417 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@578294b2, testMethod = findsByOffsetDateTimeBeforeWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.417 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.417 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.419 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.423 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@578294b2, testMethod = findsByOffsetDateTimeBeforeWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.424 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@74de0941, testMethod = findsByOffsetDateTimeAfterWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.424 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.424 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.426 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.431 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@72ccfe4f testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@74de0941, testMethod = findsByOffsetDateTimeAfterWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4095c586 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec
Running net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest
23:24:25.432 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.432 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7c9454a7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71c73775, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2edd2bde, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6ac7f481, org.springframework.test.context.support.DirtiesContextTestExecutionListener@34a8a412, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c1c416d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3bd806eb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6eee8eed, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1f172f16, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@11e02b0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7a8aa326, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6089c37c]
23:24:25.538 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:24:25.553 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15ms. Found 3 repository interfaces.
23:24:25.587 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$79634710] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:24:25.611 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
23:24:25.612 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
23:24:25.622 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:24:25.635 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:24:25.684 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@736f8837'
23:24:25.684 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:24:25.781 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:24:25.785 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:24:25.838 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@77a02171 testClass = ConverterWithConversionServiceE2eTest, testInstance = net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest@664b784c, testMethod = findsByAddressUsing@ConverterWithConversionServiceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c180da5 testClass = ConverterWithConversionServiceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithConfiguredConversionService}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5a94ad4b]; rollback [true]
23:24:25.839 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.839 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.841 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.843 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:24:25.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address=:param0
23:24:25.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'address'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:24:25.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.street' {propertyName=address,dereferenceType=COMPONENT,getPropertyPath=address,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'address' {originalText=address}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ComponentType@135c307f}

23:24:25.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address=:param0
23:24:25.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street=?
23:24:25.849 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@77a02171 testClass = ConverterWithConversionServiceE2eTest, testInstance = net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest@664b784c, testMethod = findsByAddressUsing@ConverterWithConversionServiceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c180da5 testClass = ConverterWithConversionServiceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithConfiguredConversionService}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.419 sec
Running net.kaczmarzyk.AndE2eTest
23:24:25.850 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.850 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d32d6af, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2029947d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@30ad3219, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1098a50d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7b749e1f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@17127770, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4e76b271, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b93c67f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@44482774, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4065717a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b7bb63d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3e5e2f13]
23:24:25.852 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4dc4f05 testClass = AndE2eTest, testInstance = net.kaczmarzyk.AndE2eTest@3869fa37, testMethod = findsByGoldenCusomersByLastName@AndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@681395b testClass = AndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.852 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.852 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.853 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 )
23:24:25.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gold'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:25.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:25.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 )
23:24:25.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (upper(customer0_.last_name) like ?)
23:24:25.859 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4dc4f05 testClass = AndE2eTest, testInstance = net.kaczmarzyk.AndE2eTest@3869fa37, testMethod = findsByGoldenCusomersByLastName@AndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@681395b testClass = AndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.utils.LoggedQueryTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.MultiLevelFetchJoinE2eTest
23:24:25.861 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.861 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@ccd075b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@10aea3dc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3643ac9d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@10a969af, org.springframework.test.context.support.DirtiesContextTestExecutionListener@74ba533e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@11efae36, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3ae3dfd2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@61dc3d30, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4759b196, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2b2b2955, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f927ead, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@f27e7d2]
23:24:25.864 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20381e51 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@470602f8, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c47011f testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.864 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.864 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.866 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 left join fetch generatedAlias1.note as generatedAlias3 where 1=1 order by generatedAlias0.id asc
23:24:25.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
    |  |  |  |  \-[IDENT] Node: 'tags'
    |  |  |  \-[ALIAS] Node: 'generatedAlias2'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias3'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:25.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ordernote4_.id as id1_6_3_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote4_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    |  \-[SQL_TOKEN] SqlFragment: 'ordernote4_.customer_id as customer3_6_3_, ordernote4_.title as title2_6_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=4, fromElements=4, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1, generatedAlias3], fromElementByTableAlias=[orders1_, ordernote4_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        +-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote4_ on orders1_.note_id=ordernote4_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote4_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:25.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 left join fetch generatedAlias1.note as generatedAlias3 where 1=1 order by generatedAlias0.id asc
23:24:25.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, ordernote4_.id as id1_6_3_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__, ordernote4_.customer_id as customer3_6_3_, ordernote4_.title as title2_6_3_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id left outer join order_note ordernote4_ on orders1_.note_id=ordernote4_.id where 1=1 order by customer0_.id asc
23:24:25.886 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.ItemTag as generatedAlias0
23:24:25.887 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'net'
       |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'ItemTag'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:24:25.887 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'itemtag0_.id as id1_2_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag0_}
    |  \-[SQL_TOKEN] SqlFragment: 'itemtag0_.name as name2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[itemtag0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'item_tags itemtag0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=item_tags,tableAlias=itemtag0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}

23:24:25.887 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.ItemTag as generatedAlias0
23:24:25.887 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select itemtag0_.id as id1_2_, itemtag0_.name as name2_2_ from item_tags itemtag0_
23:24:25.897 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20381e51 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@470602f8, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c47011f testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.898 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20381e51 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@1a93175f, testMethod = shouldFindCustomersUsingInnerFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c47011f testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.898 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.898 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.899 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.905 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:25.906 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:24:25.907 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:24:25.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:24:25.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:24:25.925 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20381e51 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@1a93175f, testMethod = shouldFindCustomersUsingInnerFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c47011f testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.926 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20381e51 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@26385ac2, testMethod = shouldFindCustomersUsingLeftFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c47011f testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.926 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.926 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.927 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.941 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20381e51 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@26385ac2, testMethod = shouldFindCustomersUsingLeftFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c47011f testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.941 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20381e51 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@31bc422b, testMethod = shouldFindAllCustomersWithoutUsingJoinFetches@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c47011f testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.942 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.942 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.943 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.957 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20381e51 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@31bc422b, testMethod = shouldFindAllCustomersWithoutUsingJoinFetches@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c47011f testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.957 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20381e51 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@9141410, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes_withPagination@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c47011f testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.958 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.958 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.959 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.962 [main] WARN  o.h.h.i.ast.QueryTranslatorImpl - HHH000104: firstResult/maxResults specified with collection fetch; applying in memory!
23:24:25.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 1=1
23:24:25.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:24:25.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:24:25.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 1=1
23:24:25.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ where 1=1
23:24:25.974 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20381e51 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@9141410, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes_withPagination@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3c47011f testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.114 sec
Running net.kaczmarzyk.DisjunctionE2eTest
23:24:25.975 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.975 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@63e1f196, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@43ad0fed, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@326ed4bc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@24068b1d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4807b34a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@63fe1fc0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@27f1fc37, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@373fc5b7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4257adf9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5144ba6c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@79fce437, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@30a794c2]
23:24:25.977 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@601e9c19 testClass = DisjunctionE2eTest, testInstance = net.kaczmarzyk.DisjunctionE2eTest@4762c011, testMethod = findsByLastNameOrGoldenByFirstName@DisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62ef35b3 testClass = DisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.977 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.977 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.978 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.980 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 ) ) or ( upper(generatedAlias0.firstName) like :param2 )
23:24:25.980 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gold'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'upper'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[DOT] Node: '.'
          |     |        +-[IDENT] Node: 'generatedAlias0'
          |     |        \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:24:25.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@3aa8ebf9}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7a8e35d1}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7a8e35d1}

23:24:25.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 ) ) or ( upper(generatedAlias0.firstName) like :param2 )
23:24:25.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (upper(customer0_.last_name) like ?) or upper(customer0_.first_name) like ?
23:24:25.984 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@601e9c19 testClass = DisjunctionE2eTest, testInstance = net.kaczmarzyk.DisjunctionE2eTest@4762c011, testMethod = findsByLastNameOrGoldenByFirstName@DisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62ef35b3 testClass = DisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.DateInclusiveE2eTest
23:24:25.985 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:25.986 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@69abf6de, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4f9cb2b7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@224d6aaf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@737a2afb, org.springframework.test.context.support.DirtiesContextTestExecutionListener@45513f4c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6f72345b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@26a33308, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@42cf8d5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@484b0c43, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@366529fd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@9e1674a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6a68ccf3]
23:24:25.987 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4b1eaf1e testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@3e5db430, testMethod = findsByDateBeforeWithCustomDateFormat@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bb87304 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.987 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.987 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.989 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:25.993 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4b1eaf1e testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@3e5db430, testMethod = findsByDateBeforeWithCustomDateFormat@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bb87304 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:25.994 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4b1eaf1e testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@4f8c26f, testMethod = findsByDateBetween@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bb87304 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:25.994 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:25.994 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:25.995 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:25.997 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate<=:param0 ) and ( generatedAlias0.registrationDate>=:param1 )
23:24:25.997 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LE] Node: '<='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'registrationDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:24:25.997 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LE] BinaryLogicOperatorNode: '<='
          |  +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@7c98bac0}
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@7c98bac0}

23:24:25.998 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate<=:param0 ) and ( generatedAlias0.registrationDate>=:param1 )
23:24:25.998 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<=? and customer0_.registration_date>=?
23:24:26.001 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4b1eaf1e testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@4f8c26f, testMethod = findsByDateBetween@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bb87304 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:24:26.001 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4b1eaf1e testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@2b0bebff, testMethod = findsByDateAfter@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bb87304 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:26.002 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:26.002 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:26.003 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:24:26.007 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4b1eaf1e testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@2b0bebff, testMethod = findsByDateAfter@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bb87304 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.IsNullE2eTest
23:24:26.009 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:24:26.009 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@658809f3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@64c52754, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@12c2b7ec, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6f87a1f1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4a65fa63, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7578bfc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ad312d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@527790e0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a4ce2f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@c97ab4c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@65dad7aa, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@bc4bb61]
23:24:26.011 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@361986c2 testClass = IsNullE2eTest, testInstance = net.kaczmarzyk.IsNullE2eTest@2ac90548, testMethod = findsEntitiesWithNullAttributeValue@IsNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@679a6ab2 testClass = IsNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2eed6331]; rollback [true]
23:24:26.011 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:24:26.011 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:24:26.013 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:24:26.017 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@361986c2 testClass = IsNullE2eTest, testInstance = net.kaczmarzyk.IsNullE2eTest@2ac90548, testMethod = findsEntitiesWithNullAttributeValue@IsNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@679a6ab2 testClass = IsNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
23:24:26.028 [Thread-1] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:24:26.028 [Thread-3] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:24:26.033 [Thread-1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:24:26.033 [Thread-1] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:24:26.037 [Thread-3] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
javax.management.InstanceNotFoundException: com.zaxxer.hikari:name=dataSource,type=HikariDataSource
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1083)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:423)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:411)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.springframework.jmx.support.MBeanRegistrationSupport.doUnregister(MBeanRegistrationSupport.java:205)
	at org.springframework.jmx.support.MBeanRegistrationSupport.unregisterBeans(MBeanRegistrationSupport.java:187)
	at org.springframework.jmx.export.MBeanExporter.destroy(MBeanExporter.java:453)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1052)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1059)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1035)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1011)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:931)
23:24:26.038 [Thread-3] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:24:26.039 [Thread-3] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:24:26.039 [Thread-5] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:24:26.048 [Thread-5] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] as said MBean is not registered (perhaps already unregistered by an external process)
23:24:26.049 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:24:26.049 [Thread-5] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:24:26.056 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
23:24:26.056 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
23:24:26.057 [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
23:24:26.075 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
23:24:26.075 [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
23:24:26.075 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.

Results :

Tests run: 627, Failures: 0, Errors: 0, Skipped: 2

[INFO] 
[INFO] --- maven-license-plugin:1.10.b1:check (default) @ specification-arg-resolver ---
[INFO] Checking licenses...
[WARNING] Property 'strictCheck' is not enabled. Please consider adding <strictCheck>true</strictCheck> in your pom.xml file.
[WARNING] See http://code.google.com/p/maven-license-plugin/wiki/Configuration for more information.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  11.936 s
[INFO] Finished at: 2021-02-14T23:24:26Z
[INFO] ------------------------------------------------------------------------
