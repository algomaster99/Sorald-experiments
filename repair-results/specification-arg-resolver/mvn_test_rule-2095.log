[INFO] Scanning for projects...
[INFO] 
[INFO] -------------< net.kaczmarzyk:specification-arg-resolver >--------------
[INFO] Building specification-arg-resolver 2.6.3-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ specification-arg-resolver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/specification-arg-resolver/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ specification-arg-resolver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ specification-arg-resolver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ specification-arg-resolver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ specification-arg-resolver ---
[INFO] Surefire report directory: /workdir/specification-arg-resolver/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running net.kaczmarzyk.MultiLevelJoinE2eTest
23:22:40.669 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:40.680 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57a3e26a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75c56eb9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4bc222e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2dc9b0f5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6531a794, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b5fad2d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5e17553a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3eb91815, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@56dc1551, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@102cec62, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@74f6c5d8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@27912e3]
23:22:41.697 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:22:41.767 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64ms. Found 3 repository interfaces.
23:22:42.197 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:42.384 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
23:22:42.530 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
23:22:42.601 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:22:42.644 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.3.7.Final}
23:22:42.645 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
23:22:42.680 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
23:22:42.800 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:22:43.048 [main] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
23:22:43.393 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:22:43.396 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:22:44.398 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:22:44.437 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:22:44.693 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@79169472 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@304cad3a, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks_withPagination@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@628cb8e0 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:44.699 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:44.699 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:44.711 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 12 ms
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils (file:/home/maven/.m2/repository/org/springframework/spring-core/5.1.4.RELEASE/spring-core-5.1.4.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.springframework.cglib.core.ReflectUtils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
23:22:44.830 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:22:44.846 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 ) order by generatedAlias0.id asc
23:22:44.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[NE] Node: '<>'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias2'
    |        |  \-[IDENT] Node: 'name'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:44.896 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[NE] BinaryLogicOperatorNode: '<>'
    |        +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |        |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |        |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:44.903 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 ) order by generatedAlias0.id asc
23:22:44.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name<>? order by customer0_.id asc
23:22:44.961 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 )
23:22:44.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '1'
          |  \-[NUM_INT] Node: '1'
          \-[NE] Node: '<>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:44.965 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '1'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[NE] BinaryLogicOperatorNode: '<>'
             +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:44.965 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 )
23:22:44.965 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name<>?
23:22:45.063 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@79169472 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@304cad3a, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks_withPagination@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@628cb8e0 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:45.066 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@79169472 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@1b5e6983, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@628cb8e0 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.067 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.067 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.069 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:45.098 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@79169472 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@1b5e6983, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@628cb8e0 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:45.100 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@79169472 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@5db6083b, testMethod = shouldFindCustomersUsingMultilevelJoin@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@628cb8e0 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.101 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.101 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.103 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:45.109 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name=:param0 ) order by generatedAlias0.id asc
23:22:45.110 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias2'
    |        |  \-[IDENT] Node: 'name'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:45.111 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |        |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |        |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:45.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name=:param0 ) order by generatedAlias0.id asc
23:22:45.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name=? order by customer0_.id asc
23:22:45.128 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@79169472 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@5db6083b, testMethod = shouldFindCustomersUsingMultilevelJoin@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@628cb8e0 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.73 sec
Running net.kaczmarzyk.NotInE2eTest
23:22:45.131 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:45.131 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4a66949a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@57e83608, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@57d8d8e2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f726cf4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@514eefc4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4700db93, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@560e1459, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6aa7d7a0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4c3125ff, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@d2ca3a9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2b26d289, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7f680a9a]
23:22:45.134 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1efa258e, testMethod = findsByListOfNotAllowedEnumValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.135 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.135 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:45.146 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0)
23:22:45.147 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:45.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:45.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0)
23:22:45.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender not in  (?)
23:22:45.184 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1efa258e, testMethod = findsByListOfNotAllowedEnumValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:45.186 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@335cd031, testMethod = findsByListOfNotAllowedLongValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.187 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.187 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.189 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:45.195 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (78L, 93L, 86L, 99L)
23:22:45.196 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '78L'
             +-[NUM_LONG] Node: '93L'
             +-[NUM_LONG] Node: '86L'
             \-[NUM_LONG] Node: '99L'

23:22:45.196 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '78'
             +-[NUM_LONG] LiteralNode: '93'
             +-[NUM_LONG] LiteralNode: '86'
             \-[NUM_LONG] LiteralNode: '99'

23:22:45.197 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (78L, 93L, 86L, 99L)
23:22:45.197 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (78 , 93 , 86 , 99)
23:22:45.209 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@335cd031, testMethod = findsByListOfNotAllowedLongValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:45.213 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@753cfae3, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.215 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.215 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.217 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:45.223 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (101L)
23:22:45.224 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[NUM_LONG] Node: '101L'

23:22:45.225 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NUM_LONG] LiteralNode: '101'

23:22:45.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (101L)
23:22:45.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (101)
23:22:45.242 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@753cfae3, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:45.249 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@4ee41c66, testMethod = findsByListOfNotAllowedStringValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.250 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.250 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.252 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:45.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not in (:param0, :param1)
23:22:45.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:45.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:45.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not in (:param0, :param1)
23:22:45.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name not in  (? , ?)
23:22:45.271 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@4ee41c66, testMethod = findsByListOfNotAllowedStringValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:45.274 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@52b7a3e1, testMethod = findsByListOfNotAllowedStringValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.275 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.275 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.276 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:45.292 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@52b7a3e1, testMethod = findsByListOfNotAllowedStringValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:45.293 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5037f491, testMethod = findsByListOfNotAllowedEnumValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.294 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.294 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.296 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:45.311 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@5037f491, testMethod = findsByListOfNotAllowedEnumValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:45.313 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1cfb59e, testMethod = findsByListOfNotAllowedDateValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.313 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.313 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.315 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:45.322 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0, :param1)
23:22:45.323 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:45.324 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:45.324 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0, :param1)
23:22:45.324 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date not in  (? , ?)
23:22:45.335 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1cfb59e, testMethod = findsByListOfNotAllowedDateValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:45.337 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@136c3a6, testMethod = findsByListOfNotAllowedDateValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.337 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.337 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.339 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:45.355 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@136c3a6, testMethod = findsByListOfNotAllowedDateValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:45.357 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@70d61624, testMethod = findsByListOfNotAllowedLongValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:45.357 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.357 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.359 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:45.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (239L, 254L, 247L, 260L)
23:22:45.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '239L'
             +-[NUM_LONG] Node: '254L'
             +-[NUM_LONG] Node: '247L'
             \-[NUM_LONG] Node: '260L'

23:22:45.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '239'
             +-[NUM_LONG] LiteralNode: '254'
             +-[NUM_LONG] LiteralNode: '247'
             \-[NUM_LONG] LiteralNode: '260'

23:22:45.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (239L, 254L, 247L, 260L)
23:22:45.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (239 , 254 , 247 , 260)
23:22:45.375 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5c815478 testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@70d61624, testMethod = findsByListOfNotAllowedLongValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6ccd3cf1 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.244 sec
Running net.kaczmarzyk.ConstSpELValE2eTest
23:22:45.379 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:45.389 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@48a2fb11, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5fc82de5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@65208c91, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4d71476c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@125447a0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@cede70a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6dc8a602, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2a45c6f0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1a9cfd5f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@792a9cb1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@51fadd20, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@550ce3a9]
23:22:45.582 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:22:45.599 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17ms. Found 3 repository interfaces.
23:22:45.643 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:45.672 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
23:22:45.673 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
23:22:45.687 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:22:45.703 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:22:45.771 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:22:45.771 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:22:45.915 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:22:45.920 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:22:45.994 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@aad7ade, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:45.995 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:45.995 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:45.997 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.023 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:22:46.023 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:22:46.024 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:46.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:22:46.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=?
23:22:46.035 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@aad7ade, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.037 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@55785ee7, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.037 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.037 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.040 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.058 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@55785ee7, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.064 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@64bcf689, testMethod = filtersBySingleSpecWithoutParamUsingRawStringConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.066 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.066 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.070 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.086 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@64bcf689, testMethod = filtersBySingleSpecWithoutParamUsingRawStringConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.088 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@d884e9a, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithTemporalConstructor@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.089 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.089 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.092 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:22:46.101 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>=:param0
23:22:46.102 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:46.102 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@3c2654e}

23:22:46.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>=:param0
23:22:46.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date>=?
23:22:46.110 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@d884e9a, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithTemporalConstructor@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.111 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@f243d5c, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpEL@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.111 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.111 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.113 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.129 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@f243d5c, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpEL@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.130 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@6d3b59e2, testMethod = filtersBySingleSpecWithoutParamUsingConstValWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.131 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.131 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.132 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:46.143 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52ebacbf testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@6d3b59e2, testMethod = filtersBySingleSpecWithoutParamUsingConstValWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67599bae testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.76 sec
Running net.kaczmarzyk.DefaultValE2eTest
23:22:46.151 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:46.152 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@36dab184, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71b9b035, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7669d7a2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@724945, org.springframework.test.context.support.DirtiesContextTestExecutionListener@63c78e5e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5fc3b20b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@67afba96, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7505ef47, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2a6f3ac7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@68fe866b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@729feae8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@283a5c2b]
23:22:46.154 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4460edf testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@4a48fe63, testMethod = filtersBySingleSpecWithSingleDefaultVal@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7000df03 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.155 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.155 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.164 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:22:46.165 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:46.165 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.165 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:22:46.165 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=?
23:22:46.174 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4460edf testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@4a48fe63, testMethod = filtersBySingleSpecWithSingleDefaultVal@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7000df03 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.176 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4460edf testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@233202aa, testMethod = filtersBySingleSpecWithoutParam@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7000df03 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.176 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.176 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.184 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 8 ms
23:22:46.200 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4460edf testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@233202aa, testMethod = filtersBySingleSpecWithoutParam@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7000df03 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec
Running net.kaczmarzyk.InE2eTest
23:22:46.203 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:46.204 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2d7bfb13, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7ae736a8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7b3b763d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@34ceefb5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@461f295c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@50e0541, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@25a41143, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6654e105, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@59be715a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2cef4321, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@29c471f6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6859f102]
23:22:46.206 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@6f36c42, testMethod = findsByListOfAllowedLongValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.207 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.208 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.209 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:46.214 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (107L, 122L)
23:22:46.215 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '107L'
             \-[NUM_LONG] Node: '122L'

23:22:46.216 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '107'
             \-[NUM_LONG] LiteralNode: '122'

23:22:46.217 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (107L, 122L)
23:22:46.217 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (107 , 122)
23:22:46.225 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@6f36c42, testMethod = findsByListOfAllowedLongValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.227 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2394fad2, testMethod = findsByListOfAllowedDateValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.228 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.228 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.230 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:46.234 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0, :param1)
23:22:46.235 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:46.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:46.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0, :param1)
23:22:46.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date in (? , ?)
23:22:46.244 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2394fad2, testMethod = findsByListOfAllowedDateValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.246 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@5c4f07c1, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathNameWithoutUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.247 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.247 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.249 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:46.253 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2)
23:22:46.254 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param1'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:46.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2)
23:22:46.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ? , ?)
23:22:46.263 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@5c4f07c1, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathNameWithoutUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.265 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@25297d52, testMethod = findsByListOfAllowedStringValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.266 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.266 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.268 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2, :param3, :param4)
23:22:46.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param1'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param2'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param3'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param4'

23:22:46.274 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@a486851}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.274 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2, :param3, :param4)
23:22:46.274 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ? , ? , ? , ?)
23:22:46.285 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@25297d52, testMethod = findsByListOfAllowedStringValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.291 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@4fddd42b, testMethod = findsByListOfAllowedLongValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.291 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.291 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.293 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:46.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (199L, 214L)
23:22:46.298 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '199L'
             \-[NUM_LONG] Node: '214L'

23:22:46.299 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '199'
             \-[NUM_LONG] LiteralNode: '214'

23:22:46.299 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (199L, 214L)
23:22:46.299 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (199 , 214)
23:22:46.307 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@4fddd42b, testMethod = findsByListOfAllowedLongValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.308 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@79a1f0a1, testMethod = findsByListOfAllowedDateValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.309 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.309 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.310 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:46.320 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@79a1f0a1, testMethod = findsByListOfAllowedDateValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.321 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@4ca3e806, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.322 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.322 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.323 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:46.326 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (245L)
23:22:46.327 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[NUM_LONG] Node: '245L'

23:22:46.327 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NUM_LONG] LiteralNode: '245'

23:22:46.327 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (245L)
23:22:46.327 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (245)
23:22:46.333 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@4ca3e806, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.335 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@597050fa, testMethod = findsByListOfAllowedStringValuesUsingParamSeparatorAndWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.335 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.336 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.337 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:46.347 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@597050fa, testMethod = findsByListOfAllowedStringValuesUsingParamSeparatorAndWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.349 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@6f05062b, testMethod = findsByListOfAllowedStringValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.349 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.349 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.351 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1)
23:22:46.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:46.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.354 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1)
23:22:46.355 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ?)
23:22:46.361 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@6f05062b, testMethod = findsByListOfAllowedStringValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.363 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@35e55afa, testMethod = findsByListOfAllowedEnumValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.363 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.363 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.365 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0, :param1)
23:22:46.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:46.369 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:46.369 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0, :param1)
23:22:46.369 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in (? , ?)
23:22:46.378 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@35e55afa, testMethod = findsByListOfAllowedEnumValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.379 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@e60c516, testMethod = findsByListOfAllowedEnumValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.379 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.379 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.381 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.391 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@e60c516, testMethod = findsByListOfAllowedEnumValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.392 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@7ec53f8f, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.393 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.393 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.395 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.403 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@19abe8f7 testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@7ec53f8f, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26753687 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.201 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedRepeatedJoinSpecInterfaceArgumentResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.WebRequestProcessingContextTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedSpecInterfaceArgumentResolverTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.spring.data.jpa.web.OrSpecificationResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinsSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedAndSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.RepeatedJoinResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedConjunctionSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.DisjunctionSpecificationResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.web.WebRequestProcessingContextPathVariableResolverTest
Tests run: 40, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverSpecConstructorTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest
23:22:46.548 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:46.548 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6a2c62ca, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1c247e5b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2a87d40f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@586fe6ee, org.springframework.test.context.support.DirtiesContextTestExecutionListener@51dcf51b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6eb58fdd, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7a0619a8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5df9d890, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6b3b9a19, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@29b23bc4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6333ac03, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@701dc5ad]
23:22:46.551 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a8a50b8 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@5e7026b9, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveDefaultValueWithInvalidSpELSyntax@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.551 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.551 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.553 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.559 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a8a50b8 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@5e7026b9, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveDefaultValueWithInvalidSpELSyntax@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.561 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a8a50b8 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7b828793, testMethod = returnsSpecificationWithRawDefaultValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.561 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.561 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.563 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.565 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a8a50b8 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7b828793, testMethod = returnsSpecificationWithRawDefaultValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.566 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a8a50b8 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@882c166, testMethod = returnsSpecificationWithDefaultValueInSpEL@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.567 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.567 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.569 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.571 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a8a50b8 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@882c166, testMethod = returnsSpecificationWithDefaultValueInSpEL@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.572 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a8a50b8 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@23b81002, testMethod = returnsSpecificationWithDefaultValue@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.572 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.572 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.574 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.576 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a8a50b8 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@23b81002, testMethod = returnsSpecificationWithDefaultValue@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@a426150 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverPathVariablesTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest
23:22:46.580 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:46.581 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7531ba53, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@72da5f0e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f0170e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3829e6ca, org.springframework.test.context.support.DirtiesContextTestExecutionListener@403230be, org.springframework.test.context.transaction.TransactionalTestExecutionListener@60b03599, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@627a06e6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1592a3d5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@44f4c619, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@25892fe3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@17765082, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@17fac5b2]
23:22:46.582 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@32142479 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@7aece85c, testMethod = returnsSpecificationWithConstValue@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.583 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.583 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.585 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.587 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@32142479 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@7aece85c, testMethod = returnsSpecificationWithConstValue@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.588 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@32142479 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@7a56c3c7, testMethod = returnsSpecificationWithConstValueInSpEL@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.589 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.589 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.591 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.593 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@32142479 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@7a56c3c7, testMethod = returnsSpecificationWithConstValueInSpEL@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.594 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@32142479 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@29701f1f, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveConstValueWithInvalidSpELSyntax@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.595 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.595 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.597 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.599 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@32142479 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@29701f1f, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveConstValueWithInvalidSpELSyntax@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.600 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@32142479 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@1a2454b0, testMethod = returnsSpecificationWithRawConstValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:46.601 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.601 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.603 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.604 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@32142479 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@1a2454b0, testMethod = returnsSpecificationWithRawConstValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58842f55 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running net.kaczmarzyk.spring.data.jpa.web.SpecificationArgumentResolverTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverOnTypeMismatchTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.AndSpecificationResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.ConjunctionSpecificationResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.web.JoinSpecificationResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedDisjunctionSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedRepeatedJoinFetchSpecInterfaceArgumentResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinFetchSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedOrSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedSpecInterfaceWithComplexInheritanceTreeTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.RepeatedJoinFetchResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.ConverterFallbackMechanismTest
Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.spring.data.jpa.utils.TypeUtilTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.PathVariableResolverTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.ConverterTest
Tests run: 24, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToLocalDateConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToLocalDateTimeConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToInstantConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToOffsetDateTimeConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.JoinPathUtilsTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest
23:22:46.715 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:46.715 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@87f4794, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@78a894fe, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@146b3bc7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@200cdb37, org.springframework.test.context.support.DirtiesContextTestExecutionListener@523d6b45, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6e8e1a98, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@23f6a18d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@65e503a7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5cbb2b1d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@42ffa0c8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@54139bd3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@19a652cd]
23:22:46.717 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@16c2c396 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@78cb1a92, testMethod = rejectsInvalidNumberOfArguments@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e9e73 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.718 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.718 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.720 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.722 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@16c2c396 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@78cb1a92, testMethod = rejectsInvalidNumberOfArguments@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e9e73 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.723 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@16c2c396 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@4a1bb556, testMethod = rejectsMissingArgument@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e9e73 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.724 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.724 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.727 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:22:46.729 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@16c2c396 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@4a1bb556, testMethod = rejectsMissingArgument@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e9e73 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.730 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@16c2c396 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@28f307ca, testMethod = filtersByNestedProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e9e73 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.731 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.731 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.733 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.734 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street not like :param0
23:22:46.734 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:46.735 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.735 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street not like :param0
23:22:46.735 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street not like ?
23:22:46.738 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@16c2c396 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@28f307ca, testMethod = filtersByNestedProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e9e73 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.739 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@16c2c396 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@24763d10, testMethod = filtersByFirstLevelProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e9e73 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.740 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.740 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.742 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not like :param0
23:22:46.743 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:46.743 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.743 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not like :param0
23:22:46.743 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not like ?
23:22:46.745 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not like :param0
23:22:46.746 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:46.746 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.746 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not like :param0
23:22:46.746 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name not like ?
23:22:46.748 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@16c2c396 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@24763d10, testMethod = filtersByFirstLevelProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e9e73 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running net.kaczmarzyk.spring.data.jpa.domain.ConjunctionUnitTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.185 sec
Running net.kaczmarzyk.spring.data.jpa.domain.IsNullTest
23:22:46.935 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:46.936 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@541b377d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7a343975, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@720f29f0, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7b3fd68e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7612a64b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2db6d66d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@26fd2a82, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@23f31375, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@40b0c9be, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5bae7a7b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1448e2b6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2f9b33f1]
23:22:46.937 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@a53f879 testClass = IsNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.IsNullTest@62cdff2b, testMethod = findsCustomersWithNullField@IsNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@29400267 testClass = IsNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.938 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.938 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.940 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.941 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is null
23:22:46.941 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'nickName'

23:22:46.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'customer0_.nick_name' {propertyName=nickName,dereferenceType=PRIMITIVE,getPropertyPath=nickName,path=generatedAlias0.nickName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             \-[IDENT] IdentNode: 'nickName' {originalText=nickName}

23:22:46.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is null
23:22:46.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.nick_name is null
23:22:46.945 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@a53f879 testClass = IsNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.IsNullTest@62cdff2b, testMethod = findsCustomersWithNullField@IsNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@29400267 testClass = IsNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest
23:22:46.947 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:46.947 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6bddd4ce, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@108d88b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@16019c16, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2b59285c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2ea7e25d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@692cab82, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@73d76b9d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@11aeb673, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@a0b11, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@c76c029, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4435c9b9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@204ce262]
23:22:46.949 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67091f3b testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@66f99dcc, testMethod = rejectsInvalidNumberOfArguments@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c6e0c testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.949 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.949 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.951 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.953 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67091f3b testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@66f99dcc, testMethod = rejectsInvalidNumberOfArguments@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c6e0c testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.954 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67091f3b testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@1fc4292a, testMethod = rejectsMissingArgument@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c6e0c testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.955 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.955 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.957 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.958 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67091f3b testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@1fc4292a, testMethod = rejectsMissingArgument@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c6e0c testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.959 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67091f3b testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@65d3d7d7, testMethod = filtersByNestedProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c6e0c testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.960 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.960 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.961 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:46.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.address.street) like :param0
23:22:46.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'address'
          |        \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:46.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |        \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.address.street) like :param0
23:22:46.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.street) like ?
23:22:46.968 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67091f3b testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@65d3d7d7, testMethod = filtersByNestedProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c6e0c testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:46.969 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67091f3b testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@260d5273, testMethod = filtersByFirstLevelProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c6e0c testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.970 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.970 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.971 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:46.972 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName) like :param0
23:22:46.972 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:46.973 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.973 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName) like :param0
23:22:46.973 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name) like ?
23:22:46.975 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName) like :param0
23:22:46.975 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:46.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:46.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName) like :param0
23:22:46.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name) like ?
23:22:46.978 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67091f3b testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@260d5273, testMethod = filtersByFirstLevelProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@321c6e0c testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest
23:22:46.980 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:46.980 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@60bd3a8b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5b5b5011, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@8d15c75, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5dcaa37a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@542aa32a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@55f0ba66, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@57c06659, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5f19dea8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5eab0592, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@ed8a7ab, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5afefa87, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4b0393ee]
23:22:46.982 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@50f95c8, testMethod = performsMultilevelJoinFetchOfTypeInnerAndLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:46.982 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:46.982 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:46.984 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:46.987 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:22:46.987 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:22:46.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:22:46.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:22:46.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:22:47.004 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@50f95c8, testMethod = performsMultilevelJoinFetchOfTypeInnerAndLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.005 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@482b6e57, testMethod = performsTwoFetchesUsingSingleInnerJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.005 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.006 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.007 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.010 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:22:47.010 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.011 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.011 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:22:47.011 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id order by customer0_.id asc
23:22:47.015 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@482b6e57, testMethod = performsTwoFetchesUsingSingleInnerJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.017 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@72294513, testMethod = performsMultilevelFetchWithAttributeOfTypeList@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.017 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.017 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.019 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.022 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsList as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:47.023 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsList'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.024 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags_list,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tagslist2_.order_id as order_id1_10_1__, tagslist2_.tags_list_id as tags_lis2_10_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsList], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.024 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsList as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:47.024 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tagslist2_.order_id as order_id1_10_1__, tagslist2_.tags_list_id as tags_lis2_10_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:22:47.028 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@72294513, testMethod = performsMultilevelFetchWithAttributeOfTypeList@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.029 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1eb9ab8f, testMethod = performsMultilevelFetchWithAttributeOfTypeCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.030 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.030 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.032 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsCollection as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:47.036 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsCollection'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.037 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders_tags_collection,item_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tagscollec2_.order_id as order_id1_9_1__, tagscollec2_.tags_collection_id as tags_col2_9_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsCollection], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.038 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsCollection as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:47.038 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tagscollec2_.order_id as order_id1_9_1__, tagscollec2_.tags_collection_id as tags_col2_9_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:22:47.041 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1eb9ab8f, testMethod = performsMultilevelFetchWithAttributeOfTypeCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.043 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@157312, testMethod = performsDistinctFetchWhenDistinctParamIsSetToTrue@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.043 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.043 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.045 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.047 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:22:47.048 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |  |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  |  \-[IDENT] Node: 'data'
       |  |  |  |  \-[IDENT] Node: 'jpa'
       |  |  |  \-[IDENT] Node: 'Customer'
       |  |  \-[ALIAS] Node: 'generatedAlias0'
       |  \-[JOIN] Node: 'join'
       |     +-[LEFT] Node: 'left'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'generatedAlias0'
       |     |  \-[IDENT] Node: 'orders'
       |     \-[ALIAS] Node: 'generatedAlias1'
       \-[SELECT] Node: 'select'
          +-[DISTINCT] Node: 'distinct'
          \-[IDENT] Node: 'generatedAlias0'

23:22:47.048 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}

23:22:47.048 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:22:47.048 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id
23:22:47.052 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@157312, testMethod = performsDistinctFetchWhenDistinctParamIsSetToTrue@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.053 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@6d7e973b, testMethod = performsMultilevelJoinFetchOfTypeLeftAndInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.054 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.054 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.056 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.058 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:22:47.059 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:22:47.059 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:22:47.060 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:22:47.060 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:22:47.063 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@6d7e973b, testMethod = performsMultilevelJoinFetchOfTypeLeftAndInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.064 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@22c62ede, testMethod = performsMultilevelFetchWithAttributeOfTypeSet@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.065 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.065 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.066 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.069 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:47.069 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.070 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.070 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:47.070 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:22:47.074 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@22c62ede, testMethod = performsMultilevelFetchWithAttributeOfTypeSet@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.075 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@66b1f207, testMethod = throwsIllegalArgumentExceptionWhenAliasAndMultiplePathsWerePassedToConstructor@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.076 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.076 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.077 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.081 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@66b1f207, testMethod = throwsIllegalArgumentExceptionWhenAliasAndMultiplePathsWerePassedToConstructor@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.082 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@70295fa4, testMethod = performsNotDistinctFetchWhenDistinctParamIsSetToFalse@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.082 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.082 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.084 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:22:47.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |  |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  |  \-[IDENT] Node: 'data'
       |  |  |  |  \-[IDENT] Node: 'jpa'
       |  |  |  \-[IDENT] Node: 'Customer'
       |  |  \-[ALIAS] Node: 'generatedAlias0'
       |  \-[JOIN] Node: 'join'
       |     +-[LEFT] Node: 'left'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'generatedAlias0'
       |     |  \-[IDENT] Node: 'orders'
       |     \-[ALIAS] Node: 'generatedAlias1'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:22:47.087 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}

23:22:47.087 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:22:47.087 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id
23:22:47.090 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@70295fa4, testMethod = performsNotDistinctFetchWhenDistinctParamIsSetToFalse@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.092 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@41c96a67, testMethod = performsTwoFetchesUsingSingleLeftJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.092 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.092 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.094 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:22:47.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.098 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:22:47.098 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id order by customer0_.id asc
23:22:47.102 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@41c96a67, testMethod = performsTwoFetchesUsingSingleLeftJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.103 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@3f02095, testMethod = performsMultilevelFetchWithSimpleEntityAttribute@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.103 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.103 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.105 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.108 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.note as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:47.109 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.110 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ordernote2_.id as id1_6_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'ordernote2_.customer_id as customer3_6_2_, ordernote2_.title as title2_6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[ordernote2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.110 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.note as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:47.110 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, ordernote2_.id as id1_6_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, ordernote2_.customer_id as customer3_6_2_, ordernote2_.title as title2_6_2_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id where 1=1 order by customer0_.id asc
23:22:47.114 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@3f02095, testMethod = performsMultilevelFetchWithSimpleEntityAttribute@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.115 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1427cc16, testMethod = performsMultilevelJoinFetchOfTypeLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.116 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.116 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.117 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.123 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1427cc16, testMethod = performsMultilevelJoinFetchOfTypeLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.124 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@794d8b4c, testMethod = fetchesLazyCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.125 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.125 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.127 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.129 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 order by generatedAlias0.id asc
23:22:47.129 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 order by generatedAlias0.id asc
23:22:47.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id order by customer0_.id asc
23:22:47.133 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@794d8b4c, testMethod = fetchesLazyCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.134 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@50e3019b, testMethod = performsMultilevelJoinFetchOfTypeInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.135 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.135 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.139 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:22:47.139 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:22:47.141 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:22:47.141 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:22:47.141 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:22:47.144 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@50e3019b, testMethod = performsMultilevelJoinFetchOfTypeInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.146 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@2e652f4e, testMethod = throwsIllegalArgumentExceptionWhenFetchJoinsAreDefinedInInvalidOrder@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.146 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.146 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.148 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.153 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@2e652f4e, testMethod = throwsIllegalArgumentExceptionWhenFetchJoinsAreDefinedInInvalidOrder@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.154 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@2f49d34d, testMethod = performsTwoFetchesUsingTwoJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.155 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.155 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.159 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:47.160 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.160 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.161 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:47.161 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id where 1=1 order by customer0_.id asc
23:22:47.164 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51b4ab43 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@2f49d34d, testMethod = performsTwoFetchesUsingTwoJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5710598e testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.186 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest
23:22:47.166 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.166 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@66b98075, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@20e27a41, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f638200, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1cf44346, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3664d285, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5e7967a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@46577744, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7807e2bb, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@68e7f7c4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@510af8e4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2c1a48d6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6bcf75d4]
23:22:47.168 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@369cadcf, testMethod = producesEmptyResultOnTypeMismatch_longPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.168 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.168 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.170 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.171 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 0=1
23:22:47.171 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '0'
          \-[NUM_INT] Node: '1'

23:22:47.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '0'
          \-[NUM_INT] LiteralNode: '1'

23:22:47.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 0=1
23:22:47.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where 0=1
23:22:47.174 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@369cadcf, testMethod = producesEmptyResultOnTypeMismatch_longPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.175 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@32be264e, testMethod = usesWrappedSpecWhenTypeMatches@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.176 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.176 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.177 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.178 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=539L
23:22:47.178 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '539L'

23:22:47.179 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '539'

23:22:47.179 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=539L
23:22:47.179 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=539
23:22:47.181 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@32be264e, testMethod = usesWrappedSpecWhenTypeMatches@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.182 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@2d3ff2e8, testMethod = producesEmptyResultOnTypeMismatch_boolean@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.183 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.183 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.184 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.186 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@2d3ff2e8, testMethod = producesEmptyResultOnTypeMismatch_boolean@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.187 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@2120bccc, testMethod = producesEmptyResultOnTypeMismatch_intPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.188 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.188 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.190 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.192 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@2120bccc, testMethod = producesEmptyResultOnTypeMismatch_intPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.193 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@49038769, testMethod = producesEmptyResultOnTypeMismatch_date@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.194 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.194 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.195 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.198 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@49038769, testMethod = producesEmptyResultOnTypeMismatch_date@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.199 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@3e8d8bee, testMethod = producesEmptyResultOnTypeMismatch_enum@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.199 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.199 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.201 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.203 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@3e8d8bee, testMethod = producesEmptyResultOnTypeMismatch_enum@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.205 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@1e098fc5, testMethod = producesEmptyResultOnTypeMismatch_long@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.205 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.205 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.207 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.209 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d908f18 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@1e098fc5, testMethod = producesEmptyResultOnTypeMismatch_long@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@625cb9b testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 sec
Running net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest
23:22:47.210 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.211 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@73000a80, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6169c15d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4cf7f5d8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5a172b6c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@29307ea4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6fc31f6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@75d64dc4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@16795459, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3c16cd6c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5b022899, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1cfde650, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@40fab20a]
23:22:47.213 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@6b7ff02a, testMethod = filtersByPrimitiveBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.213 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.213 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.215 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.216 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>=:param0
23:22:47.216 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.217 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:47.217 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>=:param0
23:22:47.217 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold>=?
23:22:47.220 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@6b7ff02a, testMethod = filtersByPrimitiveBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.221 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@5fac8f7e, testMethod = filtersByDoubleValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.222 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.222 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.223 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.224 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.21D
23:22:47.225 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:22:47.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:22:47.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.21D
23:22:47.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>=65.21
23:22:47.228 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.2D
23:22:47.228 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.2D'

23:22:47.229 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.2'

23:22:47.229 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.2D
23:22:47.229 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>=65.2
23:22:47.231 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@5fac8f7e, testMethod = filtersByDoubleValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.232 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7e452d2b, testMethod = filtersByPrimitiveLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.233 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.233 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.234 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.235 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>=56L
23:22:47.235 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '56L'

23:22:47.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '56'

23:22:47.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>=56L
23:22:47.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long>=56
23:22:47.238 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7e452d2b, testMethod = filtersByPrimitiveLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.239 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@15769719, testMethod = filtersByPrimitiveIntValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.240 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.240 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.242 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.242 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>=56
23:22:47.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '56'

23:22:47.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '56'

23:22:47.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>=56
23:22:47.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int>=56
23:22:47.246 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@15769719, testMethod = filtersByPrimitiveIntValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.247 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@2928c493, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.247 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.247 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.249 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.250 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>=:param0
23:22:47.250 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.250 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:47.251 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>=:param0
23:22:47.251 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>=?
23:22:47.254 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@2928c493, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.255 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@5a8dfd2e, testMethod = filtersByString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.255 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.255 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.257 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>=:param0
23:22:47.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:47.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>=:param0
23:22:47.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name>=?
23:22:47.262 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@5a8dfd2e, testMethod = filtersByString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.263 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@5e39a9ba, testMethod = filterByDateWithCustomDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.263 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.263 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.265 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.268 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@5e39a9ba, testMethod = filterByDateWithCustomDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.269 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@570e6180, testMethod = filtersByPrimitiveFloatValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.270 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.270 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.271 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.21F
23:22:47.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:22:47.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:22:47.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.21F
23:22:47.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.21
23:22:47.275 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0F
23:22:47.275 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.0F'

23:22:47.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.0'

23:22:47.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0F
23:22:47.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.0
23:22:47.277 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.09F
23:22:47.277 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.09F'

23:22:47.277 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.09'

23:22:47.277 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.09F
23:22:47.277 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.09
23:22:47.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0999F
23:22:47.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.0999F'

23:22:47.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.0999'

23:22:47.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0999F
23:22:47.280 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.0999
23:22:47.281 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@570e6180, testMethod = filtersByPrimitiveFloatValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.283 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1c9f274d, testMethod = filtersByBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.283 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.283 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.285 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.285 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>=:param0
23:22:47.286 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.286 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:47.286 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>=:param0
23:22:47.286 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj>=?
23:22:47.289 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1c9f274d, testMethod = filtersByBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.290 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1af3bf5b, testMethod = filtersByIntegerValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.291 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.291 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.292 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.293 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>=56
23:22:47.293 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '56'

23:22:47.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '56'

23:22:47.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>=56
23:22:47.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight>=56
23:22:47.296 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1af3bf5b, testMethod = filtersByIntegerValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.297 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@66009368, testMethod = filtersByLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.297 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.297 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.299 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.300 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>=593L
23:22:47.300 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '593L'

23:22:47.300 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '593'

23:22:47.301 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>=593L
23:22:47.301 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id>=593
23:22:47.303 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@66009368, testMethod = filtersByLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.304 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@3fd3d49c, testMethod = filtersByEnumValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.304 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.304 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.306 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.306 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>=:param0
23:22:47.307 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.307 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:47.307 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>=:param0
23:22:47.307 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender>=?
23:22:47.311 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@3fd3d49c, testMethod = filtersByEnumValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.312 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@39088acb, testMethod = filtersByEnumString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.313 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.313 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.314 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.315 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>=:param0
23:22:47.315 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5547476c}

23:22:47.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>=:param0
23:22:47.316 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string>=?
23:22:47.320 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@39088acb, testMethod = filtersByEnumString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.321 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@39a4bd89, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.321 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.321 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.323 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.325 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@39a4bd89, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.327 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@79571cc5, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.327 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.327 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.329 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.330 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@79571cc5, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.332 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@47690183, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.332 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.332 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.334 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.336 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48b3ce9b testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@47690183, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@56fdb4db testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.126 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest
23:22:47.338 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.338 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6c53ce34, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@64ec804f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5008c5a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5ffdea7c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2dadadd9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2d43bedb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2ca08575, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1cbe3497, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5c3d91bc, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6cb84986, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@449be249, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@296c6cc1]
23:22:47.340 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c32c581 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@10055e52, testMethod = rejectsInvalidNumberOfArguments@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55623ed5 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.340 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.340 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.342 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.344 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c32c581 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@10055e52, testMethod = rejectsInvalidNumberOfArguments@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55623ed5 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.345 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c32c581 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@131af11d, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55623ed5 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.345 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.345 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.347 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<=:param0
23:22:47.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:47.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<=:param0
23:22:47.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<=?
23:22:47.351 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c32c581 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@131af11d, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55623ed5 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.352 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c32c581 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@16be6b36, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55623ed5 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.352 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.352 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.354 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.357 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c32c581 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@16be6b36, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55623ed5 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.358 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c32c581 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@2ff35d7, testMethod = rejectsMissingArgument@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55623ed5 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.358 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.358 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.360 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.361 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c32c581 testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@2ff35d7, testMethod = rejectsMissingArgument@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55623ed5 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NullTest
23:22:47.363 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.363 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4effab3b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5e584389, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@42491839, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@732af580, org.springframework.test.context.support.DirtiesContextTestExecutionListener@40bf2ead, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5ce76938, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@56653a4d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@72c743f4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4bb4c147, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2c7ddfa0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@53b52f30, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1b250e51]
23:22:47.364 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@39008911 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@2df92850, testMethod = findsCustomersWithNotNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70d7282a testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.365 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.365 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.366 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is not null
23:22:47.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'nickName'

23:22:47.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'customer0_.nick_name' {propertyName=nickName,dereferenceType=PRIMITIVE,getPropertyPath=nickName,path=generatedAlias0.nickName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             \-[IDENT] IdentNode: 'nickName' {originalText=nickName}

23:22:47.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is not null
23:22:47.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.nick_name is not null
23:22:47.370 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@39008911 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@2df92850, testMethod = findsCustomersWithNotNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70d7282a testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.371 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@39008911 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@348c2548, testMethod = findsCustomersWithNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70d7282a testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.372 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.372 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.374 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.376 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@39008911 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@348c2548, testMethod = findsCustomersWithNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@70d7282a testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LikeTest
23:22:47.380 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.382 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5e1fd72a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c173587, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3212ff1b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4ba64e36, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6ba076ef, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3ececd11, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1b8117f4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@62af3d4c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ad038f8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@42becaf6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@51934be2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4a4d59c1]
23:22:47.384 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4670caf6 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@25712d03, testMethod = rejectsInvalidNumberOfArguments@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78c7928a testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.384 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.384 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.387 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4670caf6 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@25712d03, testMethod = rejectsInvalidNumberOfArguments@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78c7928a testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.388 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4670caf6 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@28220b56, testMethod = rejectsMissingArgument@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78c7928a testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.388 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.388 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.390 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.391 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4670caf6 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@28220b56, testMethod = rejectsMissingArgument@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78c7928a testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.392 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4670caf6 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@78ef5801, testMethod = filtersByNestedProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78c7928a testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.392 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.392 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.394 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.394 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street like :param0
23:22:47.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:47.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street like :param0
23:22:47.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street like ?
23:22:47.398 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4670caf6 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@78ef5801, testMethod = filtersByNestedProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78c7928a testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.399 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4670caf6 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@2625c1cc, testMethod = filtersByFirstLevelProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78c7928a testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.399 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.399 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.401 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName like :param0
23:22:47.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:47.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName like :param0
23:22:47.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name like ?
23:22:47.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName like :param0
23:22:47.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:47.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName like :param0
23:22:47.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name like ?
23:22:47.406 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4670caf6 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@2625c1cc, testMethod = filtersByFirstLevelProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78c7928a testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest
23:22:47.408 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.408 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@74d6d08a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3217aada, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@34f14035, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@72efba55, org.springframework.test.context.support.DirtiesContextTestExecutionListener@307f6602, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3f314bad, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1ff4496, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ecd7bee, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@45c95343, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@70900474, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@b303504, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6ec73d87]
23:22:47.409 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24c28909 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@6aa2ffd3, testMethod = rejectsTooManyArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e7664b testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.410 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.410 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.412 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.413 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@24c28909 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@6aa2ffd3, testMethod = rejectsTooManyArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e7664b testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.414 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24c28909 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@480a5088, testMethod = rejectsTooFewArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e7664b testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.414 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.414 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.416 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.417 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@24c28909 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@480a5088, testMethod = rejectsTooFewArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e7664b testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.418 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24c28909 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@2119bb3d, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e7664b testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.419 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.419 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.421 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate between :param0 and :param1
23:22:47.422 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:47.423 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:47.423 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate between :param0 and :param1
23:22:47.423 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date between ? and ?
23:22:47.427 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@24c28909 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@2119bb3d, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e7664b testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.428 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24c28909 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@340a5c52, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e7664b testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.428 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.428 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.430 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.433 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@24c28909 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@340a5c52, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12e7664b testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest
23:22:47.434 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.434 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@46c09751, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@76da91cf, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4cd78959, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@128acee, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4310d985, org.springframework.test.context.transaction.TransactionalTestExecutionListener@61e67cc1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@118bace5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@55002de6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@10990a32, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@42cb7c94, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@eeb1cac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5ad07f8a]
23:22:47.436 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@145baec6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@172b39c3, testMethod = rejectsInvalidNumberOfArguments@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a5b73cb testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.437 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.437 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.438 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.440 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@145baec6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@172b39c3, testMethod = rejectsInvalidNumberOfArguments@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a5b73cb testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.441 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@145baec6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@7e389cd6, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a5b73cb testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.442 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.442 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.443 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<:param0
23:22:47.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.445 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:47.445 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<:param0
23:22:47.445 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<?
23:22:47.447 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@145baec6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@7e389cd6, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a5b73cb testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.448 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@145baec6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@c0ed96c, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a5b73cb testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.449 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.449 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.450 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.453 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@145baec6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@c0ed96c, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a5b73cb testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.454 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@145baec6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@47c5b16b, testMethod = rejectsMissingArgument@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a5b73cb testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.454 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.454 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.456 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.457 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@145baec6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@47c5b16b, testMethod = rejectsMissingArgument@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a5b73cb testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest
23:22:47.459 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.459 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@591e1df7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@697b105e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c54bc3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@dcaa310, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2492f6fb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@155afbd7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@396d21ec, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@61e7d7f2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@52f1d01b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@10371dd1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@40053c7a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1f022bcf]
23:22:47.460 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c030d36 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@359c9b3b, testMethod = rejectsInvalidNumberOfArguments@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.461 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.461 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.463 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.464 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c030d36 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@359c9b3b, testMethod = rejectsInvalidNumberOfArguments@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.465 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c030d36 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@75ac2594, testMethod = rejectsMissingArgument@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.466 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.466 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.467 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.469 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c030d36 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@75ac2594, testMethod = rejectsMissingArgument@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.470 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c030d36 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@22846025, testMethod = filtersByNestedProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.470 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.470 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.472 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.475 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c030d36 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@22846025, testMethod = filtersByNestedProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.476 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@c030d36 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@a1c87e6, testMethod = filtersByFirstLevelProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.477 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.477 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.478 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.482 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@c030d36 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@a1c87e6, testMethod = filtersByFirstLevelProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ef116e8 testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest
23:22:47.484 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.484 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4d923ffc, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ed70448, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1eb08757, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4bcb5415, org.springframework.test.context.support.DirtiesContextTestExecutionListener@177aef4f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@61f94cac, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7be9e5fb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6a937d6f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2ad3e7e5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@164523f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3596a9d5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@441fd20d]
23:22:47.486 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@687d4471 testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@2e309b13, testMethod = rejectsInvalidNumberOfArguments@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79b7aebc testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.486 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.486 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.488 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.489 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@687d4471 testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@2e309b13, testMethod = rejectsInvalidNumberOfArguments@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79b7aebc testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.490 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@687d4471 testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@6e65fc8b, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79b7aebc testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.491 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.491 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.492 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.493 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>:param0
23:22:47.493 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.494 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:47.494 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>:param0
23:22:47.494 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>?
23:22:47.497 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@687d4471 testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@6e65fc8b, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79b7aebc testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.500 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@687d4471 testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@6d9020e6, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79b7aebc testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.500 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.500 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.502 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.504 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@687d4471 testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@6d9020e6, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79b7aebc testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.505 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@687d4471 testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@2388307, testMethod = rejectsMissingArgument@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79b7aebc testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.506 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.506 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.507 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.509 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@687d4471 testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@2388307, testMethod = rejectsMissingArgument@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79b7aebc testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running net.kaczmarzyk.spring.data.jpa.domain.BetweenTest
23:22:47.510 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.510 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@34668a96, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@686d5284, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@43542dd7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@66143420, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6626204e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@645db77c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@60514b5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@41f79561, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1604e941, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1f6b4aaa, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@31e5554e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4c44928e]
23:22:47.512 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3482b7e6, testMethod = filtersByIntRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.513 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.513 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.514 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 70L and 100L
23:22:47.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          +-[NUM_LONG] Node: '70L'
          \-[NUM_LONG] Node: '100L'

23:22:47.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          +-[NUM_LONG] LiteralNode: '70'
          \-[NUM_LONG] LiteralNode: '100'

23:22:47.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 70L and 100L
23:22:47.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int between 70 and 100
23:22:47.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 85L and 400L
23:22:47.518 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          +-[NUM_LONG] Node: '85L'
          \-[NUM_LONG] Node: '400L'

23:22:47.518 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          +-[NUM_LONG] LiteralNode: '85'
          \-[NUM_LONG] LiteralNode: '400'

23:22:47.518 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 85L and 400L
23:22:47.518 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int between 85 and 400
23:22:47.520 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3482b7e6, testMethod = filtersByIntRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.521 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@46c87d4b, testMethod = rejectsTooManyArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.521 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.521 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.523 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.524 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@46c87d4b, testMethod = rejectsTooManyArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.525 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@65a610f7, testMethod = filtersByFloatRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.526 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.526 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.527 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.528 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 70.0F and 100.0F
23:22:47.528 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          +-[NUM_FLOAT] Node: '70.0F'
          \-[NUM_FLOAT] Node: '100.0F'

23:22:47.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          +-[NUM_FLOAT] LiteralNode: '70.0'
          \-[NUM_FLOAT] LiteralNode: '100.0'

23:22:47.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 70.0F and 100.0F
23:22:47.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float between 70.0 and 100.0
23:22:47.530 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 85.0F and 300.2F
23:22:47.531 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          +-[NUM_FLOAT] Node: '85.0F'
          \-[NUM_FLOAT] Node: '300.2F'

23:22:47.531 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          +-[NUM_FLOAT] LiteralNode: '85.0'
          \-[NUM_FLOAT] LiteralNode: '300.2'

23:22:47.531 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 85.0F and 300.2F
23:22:47.531 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float between 85.0 and 300.2
23:22:47.533 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@65a610f7, testMethod = filtersByFloatRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.534 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@2248583e, testMethod = filtersByEnumRange_string@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.534 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.534 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.536 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.537 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString between :param0 and :param1
23:22:47.537 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:47.538 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5547476c}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@5547476c}

23:22:47.538 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString between :param0 and :param1
23:22:47.538 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string between ? and ?
23:22:47.540 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@2248583e, testMethod = filtersByEnumRange_string@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.541 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7f8b9fa7, testMethod = filtersByDoubleRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.541 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.541 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.543 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 70.0D and 100.0D
23:22:47.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          +-[NUM_DOUBLE] Node: '70.0D'
          \-[NUM_DOUBLE] Node: '100.0D'

23:22:47.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          +-[NUM_DOUBLE] LiteralNode: '70.0'
          \-[NUM_DOUBLE] LiteralNode: '100.0'

23:22:47.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 70.0D and 100.0D
23:22:47.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double between 70.0 and 100.0
23:22:47.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 85.0D and 300.2D
23:22:47.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          +-[NUM_DOUBLE] Node: '85.0D'
          \-[NUM_DOUBLE] Node: '300.2D'

23:22:47.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          +-[NUM_DOUBLE] LiteralNode: '85.0'
          \-[NUM_DOUBLE] LiteralNode: '300.2'

23:22:47.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 85.0D and 300.2D
23:22:47.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double between 85.0 and 300.2
23:22:47.548 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7f8b9fa7, testMethod = filtersByDoubleRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.549 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3ab8f900, testMethod = filtersByEnumRange_ordinal@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.550 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.550 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.551 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender between :param0 and :param1
23:22:47.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:47.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:47.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender between :param0 and :param1
23:22:47.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender between ? and ?
23:22:47.555 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3ab8f900, testMethod = filtersByEnumRange_ordinal@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.556 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@725f288f, testMethod = filtersByBigDecimalRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.557 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.557 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.558 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.559 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 70BD and 100BD
23:22:47.560 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightBigDecimal'
          +-[NUM_BIG_DECIMAL] Node: '70BD'
          \-[NUM_BIG_DECIMAL] Node: '100BD'

23:22:47.560 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_big_decimal' {propertyName=weightBigDecimal,dereferenceType=PRIMITIVE,getPropertyPath=weightBigDecimal,path=generatedAlias0.weightBigDecimal,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightBigDecimal' {originalText=weightBigDecimal}
          +-[NUM_BIG_DECIMAL] LiteralNode: '70'
          \-[NUM_BIG_DECIMAL] LiteralNode: '100'

23:22:47.560 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 70BD and 100BD
23:22:47.560 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_big_decimal between 70 and 100
23:22:47.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 85BD and 300.31BD
23:22:47.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightBigDecimal'
          +-[NUM_BIG_DECIMAL] Node: '85BD'
          \-[NUM_BIG_DECIMAL] Node: '300.31BD'

23:22:47.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_big_decimal' {propertyName=weightBigDecimal,dereferenceType=PRIMITIVE,getPropertyPath=weightBigDecimal,path=generatedAlias0.weightBigDecimal,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightBigDecimal' {originalText=weightBigDecimal}
          +-[NUM_BIG_DECIMAL] LiteralNode: '85'
          \-[NUM_BIG_DECIMAL] LiteralNode: '300.31'

23:22:47.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 85BD and 300.31BD
23:22:47.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_big_decimal between 85 and 300.31
23:22:47.565 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@725f288f, testMethod = filtersByBigDecimalRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.566 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3b310465, testMethod = rejectsTooFewArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.566 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.566 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.568 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.569 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3b310465, testMethod = rejectsTooFewArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.570 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7f1c1df5, testMethod = filtersByRegistrationDateWithDefaultDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.571 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.571 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.572 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.576 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7f1c1df5, testMethod = filtersByRegistrationDateWithDefaultDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.577 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@18cbd36b, testMethod = filtersByRegistrationDateWithCustomDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.577 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.577 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.579 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.581 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6b981dea testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@18cbd36b, testMethod = filtersByRegistrationDateWithCustomDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5bab61e7 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 sec
Running net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest
23:22:47.583 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.583 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4fd1458d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5d6850f7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3b8bbfab, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3dbb7f60, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7803a877, org.springframework.test.context.transaction.TransactionalTestExecutionListener@67f3a068, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1e33dda, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@674502f9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2604e76, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@786a4eb2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@607fa188, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2fe235b4]
23:22:47.585 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@265b52b7 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@7e58471, testMethod = rejectsInvalidNumberOfArguments@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22ce83d6 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.585 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.585 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.587 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.588 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@265b52b7 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@7e58471, testMethod = rejectsInvalidNumberOfArguments@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22ce83d6 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.589 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@265b52b7 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@735b638, testMethod = rejectsMissingArgument@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22ce83d6 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.590 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.590 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.591 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.592 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@265b52b7 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@735b638, testMethod = rejectsMissingArgument@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22ce83d6 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.593 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@265b52b7 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@6015326, testMethod = filtersByNestedProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22ce83d6 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.594 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.594 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.595 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.598 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@265b52b7 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@6015326, testMethod = filtersByNestedProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22ce83d6 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.599 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@265b52b7 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@1613e5ab, testMethod = filtersByFirstLevelProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22ce83d6 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.600 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.600 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.602 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.605 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@265b52b7 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@1613e5ab, testMethod = filtersByFirstLevelProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@22ce83d6 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running net.kaczmarzyk.spring.data.jpa.domain.JoinTest
23:22:47.606 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.607 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2360414f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@76eabed6, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@773faae8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@159e8432, org.springframework.test.context.support.DirtiesContextTestExecutionListener@34d5d5f7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@17eac1b5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1d88414a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7cd6e9dd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6636e1dd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@279063c7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@784df46e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@339e62bb]
23:22:47.608 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@2ec9bd88, testMethod = performsMultilevelJoinWithAttributeOfTypeList@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.609 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.609 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.610 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.613 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsList as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:22:47.613 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsList'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags_list,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsList], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsList as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:22:47.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:22:47.617 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@2ec9bd88, testMethod = performsMultilevelJoinWithAttributeOfTypeList@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.618 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@4f38acf, testMethod = joinsCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.618 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.618 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.620 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.622 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName=:param0 order by generatedAlias0.id asc
23:22:47.622 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias1'
    |     |  \-[IDENT] Node: 'itemName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.623 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.623 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName=:param0 order by generatedAlias0.id asc
23:22:47.623 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id where orders1_.item_name=? order by customer0_.id asc
23:22:47.626 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@4f38acf, testMethod = joinsCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.627 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@1d1071bb, testMethod = performsMultilevelJoinWithAttributeOfTypeCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.627 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.627 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.629 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.631 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsCollection as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:22:47.631 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsCollection'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders_tags_collection,item_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsCollection], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsCollection as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:22:47.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:22:47.635 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@1d1071bb, testMethod = performsMultilevelJoinWithAttributeOfTypeCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.636 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@52416fd7, testMethod = performsMultilevelJoinWithAttributeOfTypeSet@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.636 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.636 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.637 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.640 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tags as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:22:47.640 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.641 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.641 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tags as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:22:47.641 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:22:47.643 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@52416fd7, testMethod = performsMultilevelJoinWithAttributeOfTypeSet@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.644 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@2631075f, testMethod = performsMultilevelJoinWithSimpleEntityAttribute@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.645 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.645 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.646 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.649 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.note as generatedAlias2 where generatedAlias2.title=:param0 order by generatedAlias0.id asc
23:22:47.649 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'title'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:47.650 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[ordernote2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'ordernote2_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias2.title,tableAlias=ordernote2_,className=net.kaczmarzyk.spring.data.jpa.OrderNote,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'ordernote2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.OrderNote, tableAlias=ordernote2_}
    |     |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:47.650 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.note as generatedAlias2 where generatedAlias2.title=:param0 order by generatedAlias0.id asc
23:22:47.650 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id where ordernote2_.title=? order by customer0_.id asc
23:22:47.653 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@2631075f, testMethod = performsMultilevelJoinWithSimpleEntityAttribute@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.654 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@37ca8b4c, testMethod = throwsIllegalArgumentExceptionWhenJoinsAreDefinedInInvalidOrder@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.654 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.654 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.656 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.659 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5a33ba9b testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@37ca8b4c, testMethod = throwsIllegalArgumentExceptionWhenJoinsAreDefinedInInvalidOrder@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4337cf96 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec
Running net.kaczmarzyk.spring.data.jpa.domain.InTest
23:22:47.660 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.660 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@78288298, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@544364ba, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1e0ccdd6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5f849a79, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6304ff53, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2cad213d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@54372b03, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2f9b24ae, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6b21a869, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2e40d8f9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@43c28101, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@350a7383]
23:22:47.662 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@7f096ea0, testMethod = filtersWithTwoEnumValues@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.663 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.663 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.664 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.667 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@7f096ea0, testMethod = filtersWithTwoEnumValues@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.668 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@6086ba82, testMethod = filtersByLongValue_withAdditionalNonExistingValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.668 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.668 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.670 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.671 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (12345L, 807L, 808L)
23:22:47.671 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '12345L'
             +-[NUM_LONG] Node: '807L'
             \-[NUM_LONG] Node: '808L'

23:22:47.671 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '12345'
             +-[NUM_LONG] LiteralNode: '807'
             \-[NUM_LONG] LiteralNode: '808'

23:22:47.671 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (12345L, 807L, 808L)
23:22:47.672 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (12345 , 807 , 808)
23:22:47.674 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@6086ba82, testMethod = filtersByLongValue_withAdditionalNonExistingValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.675 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@7ad9ed91, testMethod = filtersByDateWithDefaultDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.675 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.675 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.677 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.677 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0)
23:22:47.677 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:47.678 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:47.678 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0)
23:22:47.678 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date in (?)
23:22:47.682 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@7ad9ed91, testMethod = filtersByDateWithDefaultDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.683 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@4f1545bd, testMethod = filtersByString@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.683 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.683 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.685 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0, :param1)
23:22:47.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:47.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:47.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0, :param1)
23:22:47.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name in (? , ?)
23:22:47.687 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0)
23:22:47.691 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:47.692 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:47.692 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0)
23:22:47.692 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name in (?)
23:22:47.694 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@4f1545bd, testMethod = filtersByString@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.695 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@688fa02f, testMethod = filterByDateWithCustomDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.695 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.695 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.697 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.700 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@688fa02f, testMethod = filterByDateWithCustomDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.701 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@400a5164, testMethod = filtersByEnumValue_singleValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.701 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.701 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.703 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.703 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0)
23:22:47.704 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:47.704 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:47.704 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0)
23:22:47.704 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in (?)
23:22:47.707 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@400a5164, testMethod = filtersByEnumValue_singleValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.708 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@41313f58, testMethod = filtersByBooleanValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.709 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.709 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.710 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.711 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold in (:param0)
23:22:47.711 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:47.711 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:47.712 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold in (:param0)
23:22:47.712 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold in (?)
23:22:47.714 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@41313f58, testMethod = filtersByBooleanValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.715 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@38f4c6af, testMethod = filtersByIntegerValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.715 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.715 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.717 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.718 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight in (121, 65)
23:22:47.718 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_INT] Node: '121'
             \-[NUM_INT] Node: '65'

23:22:47.718 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_INT] LiteralNode: '121'
             \-[NUM_INT] LiteralNode: '65'

23:22:47.719 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight in (121, 65)
23:22:47.719 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight in (121 , 65)
23:22:47.746 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@38f4c6af, testMethod = filtersByIntegerValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.747 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@16554f2e, testMethod = filtersByLongValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.747 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.747 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.749 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.749 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (835L, 836L)
23:22:47.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '835L'
             \-[NUM_LONG] Node: '836L'

23:22:47.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '835'
             \-[NUM_LONG] LiteralNode: '836'

23:22:47.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (835L, 836L)
23:22:47.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (835 , 836)
23:22:47.752 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@539c833d testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@16554f2e, testMethod = filtersByLongValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4fbdd61f testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.092 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest
23:22:47.753 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.753 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1a420390, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2523c97a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@49ffcd07, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4fc6dcb7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4512085c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e41619d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@49e11ca7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@30bb4248, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@65beeceb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@10063448, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@51c316cb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3b00a7b9]
23:22:47.755 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@8a1bd62 testClass = DisjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest@70d336f5, testMethod = shouldIncludeResultsOfBothSpecs@DisjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@206100aa testClass = DisjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.755 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.755 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.757 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.759 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:22:47.759 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:47.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:47.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:22:47.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name like ? or customer0_.last_name like ?
23:22:47.762 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@8a1bd62 testClass = DisjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest@70d336f5, testMethod = shouldIncludeResultsOfBothSpecs@DisjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@206100aa testClass = DisjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EqualTest
23:22:47.764 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.764 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@9628240, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@296a6a10, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4da86d09, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5a21746a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@474c8dec, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3d8c55ff, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@33c2a762, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@62110754, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4111c517, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1eed4367, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@38321e6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@52f3859a]
23:22:47.766 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@59c9df97, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.766 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.767 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.768 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold=:param0
23:22:47.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:47.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold=:param0
23:22:47.769 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=?
23:22:47.772 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@59c9df97, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.773 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@986deaf, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.773 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.773 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.775 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.777 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@986deaf, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.778 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@598acf89, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.778 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.778 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.780 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.780 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong=121L
23:22:47.780 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '121L'

23:22:47.781 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '121'

23:22:47.781 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong=121L
23:22:47.781 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long=121
23:22:47.783 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@598acf89, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.784 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@c0c9d4a, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.784 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.784 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.786 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt=121
23:22:47.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '121'

23:22:47.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '121'

23:22:47.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt=121
23:22:47.787 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int=121
23:22:47.789 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@c0c9d4a, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.790 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@17b17fa8, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.791 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.791 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.792 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble=121.2D
23:22:47.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '121.2D'

23:22:47.793 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '121.2'

23:22:47.794 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble=121.2D
23:22:47.794 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double=121.2
23:22:47.795 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@17b17fa8, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.796 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@2a673ee8, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.797 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.797 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.798 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate=:param0
23:22:47.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.800 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:47.800 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate=:param0
23:22:47.800 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date=?
23:22:47.803 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@2a673ee8, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.803 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@6c73d88c, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.804 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.804 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.805 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.808 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@6c73d88c, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.810 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1a343d3e, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.810 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.810 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.812 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.814 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1a343d3e, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.815 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@127350d8, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.816 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.816 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.817 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.818 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj=:param0
23:22:47.818 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.819 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:47.819 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj=:param0
23:22:47.819 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj=?
23:22:47.821 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@127350d8, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.822 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@46808854, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.822 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.822 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.824 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.825 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight=121
23:22:47.825 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '121'

23:22:47.825 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '121'

23:22:47.825 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight=121
23:22:47.825 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight=121
23:22:47.827 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@46808854, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.828 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@22cc2ae5, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.829 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.829 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.831 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.831 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=884L
23:22:47.831 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '884L'

23:22:47.832 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '884'

23:22:47.832 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=884L
23:22:47.832 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=884
23:22:47.834 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@22cc2ae5, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.835 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@40889699, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.835 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.835 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.837 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.837 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender=:param0
23:22:47.837 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.838 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:47.838 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender=:param0
23:22:47.838 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=?
23:22:47.841 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6fe8e276 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@40889699, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2dacf052 testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 13, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.078 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest
23:22:47.843 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.843 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@952883c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@254ed9ba, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3693deae, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6f3af541, org.springframework.test.context.support.DirtiesContextTestExecutionListener@723493f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@21e40707, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@92adb3b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3182b7a2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@677f1963, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6622f6b4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@398e1a48, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1d95957c]
23:22:47.845 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b42a630 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@7892d7a7, testMethod = rejectsInvalidNumberOfArguments@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ceeba96 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.845 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.845 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.846 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.848 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b42a630 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@7892d7a7, testMethod = rejectsInvalidNumberOfArguments@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ceeba96 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.849 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b42a630 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@3c288a4e, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ceeba96 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.849 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.849 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.851 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.855 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b42a630 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@3c288a4e, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ceeba96 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.856 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b42a630 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@726c1889, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ceeba96 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.856 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.856 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.858 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.860 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b42a630 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@726c1889, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ceeba96 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.861 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b42a630 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@2a621df3, testMethod = rejectsMissingArgument@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ceeba96 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.861 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.861 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.863 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.864 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b42a630 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@2a621df3, testMethod = rejectsMissingArgument@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4ceeba96 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest
23:22:47.865 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.865 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@d61ac34, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@234a8c1f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@663e2cfd, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76cb6d16, org.springframework.test.context.support.DirtiesContextTestExecutionListener@764b7ff7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1962f55, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16d8a25e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3bd6ce4e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@164fba04, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2693d31f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@750a4fc1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78235b90]
23:22:47.867 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@7986302f, testMethod = filtersByStringCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.868 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.868 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.869 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)<>:param0
23:22:47.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:47.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)<>:param0
23:22:47.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name)<>?
23:22:47.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)<>:param0
23:22:47.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:47.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)<>:param0
23:22:47.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name)<>?
23:22:47.875 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@7986302f, testMethod = filtersByStringCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.876 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@ff18823, testMethod = filtersByEnumCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.877 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.877 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.878 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.879 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<>:param0
23:22:47.879 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.879 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:47.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<>:param0
23:22:47.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<>?
23:22:47.882 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@ff18823, testMethod = filtersByEnumCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.883 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@6e6d544, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.884 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.884 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.885 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.886 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<>:param0
23:22:47.886 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.886 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:47.886 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<>:param0
23:22:47.886 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<>?
23:22:47.889 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@6e6d544, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.890 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3f47094a, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.890 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.890 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.892 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.893 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3f47094a, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.894 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@7b8d2b32, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.895 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.895 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.896 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.897 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<>121L
23:22:47.897 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '121L'

23:22:47.897 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '121'

23:22:47.897 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<>121L
23:22:47.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<>121
23:22:47.900 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@7b8d2b32, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.901 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1f39afe, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.901 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.901 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.903 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.903 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<>121
23:22:47.903 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '121'

23:22:47.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '121'

23:22:47.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<>121
23:22:47.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<>121
23:22:47.906 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1f39afe, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.907 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2e884ee5, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.907 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.907 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.909 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.909 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<>121.2D
23:22:47.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '121.2D'

23:22:47.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '121.2'

23:22:47.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<>121.2D
23:22:47.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<>121.2
23:22:47.912 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2e884ee5, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.913 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@25824720, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.914 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.914 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.916 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.916 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<>:param0
23:22:47.916 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.917 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:47.917 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<>:param0
23:22:47.917 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<>?
23:22:47.919 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@25824720, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.920 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@119db52f, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.920 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.920 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<>:param0
23:22:47.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.923 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:47.923 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<>:param0
23:22:47.923 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<>?
23:22:47.925 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@119db52f, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.926 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@4977e352, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.927 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.927 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.928 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.930 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@4977e352, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.931 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@5dc09bca, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.932 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.932 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.934 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.934 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<>:param0
23:22:47.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:47.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:47.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<>:param0
23:22:47.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<>?
23:22:47.937 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@5dc09bca, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.938 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1ec2726f, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.939 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.939 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.940 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.941 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<>121
23:22:47.941 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '121'

23:22:47.941 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '121'

23:22:47.942 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<>121
23:22:47.942 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<>121
23:22:47.943 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1ec2726f, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.945 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@416bf563, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.945 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.945 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.947 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.947 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>940L
23:22:47.947 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '940L'

23:22:47.948 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '940'

23:22:47.948 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>940L
23:22:47.948 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>940
23:22:47.950 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@416bf563, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.951 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@4cfc4eb2, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.951 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.951 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.953 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.956 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2a0651 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@4cfc4eb2, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44126e04 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.092 sec
Running net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest
23:22:47.958 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.958 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2c271689, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3977c7e4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@54dd6160, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@24f89b6b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@307f4223, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3730fb2f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@8d95ac8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@689aab7b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@22be8211, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1267fcea, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@502afb74, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6dd65379]
23:22:47.959 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d3f6e6 testClass = ConjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest@a57734e, testMethod = shouldFilterWithBothSpecs@ConjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@30d016c9 testClass = ConjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.960 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.960 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.961 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.address.street like :param0 ) and ( generatedAlias0.registrationDate<:param1 )
23:22:47.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'address'
          |  |  \-[IDENT] Node: 'street'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LT] Node: '<'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:47.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  |  \-[IDENT] IdentNode: 'street' {originalText=street}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[LT] BinaryLogicOperatorNode: '<'
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:47.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.address.street like :param0 ) and ( generatedAlias0.registrationDate<:param1 )
23:22:47.963 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.street like ?) and customer0_.registration_date<?
23:22:47.965 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d3f6e6 testClass = ConjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest@a57734e, testMethod = shouldFilterWithBothSpecs@ConjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@30d016c9 testClass = ConjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest
23:22:47.966 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.967 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7238072e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2cb6c8a6, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4e9d3925, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@685a8158, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5ae9ea0a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4080ea09, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@67f3b72d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5b9fbaca, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4e33a209, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@924c964, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@73145db2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@557bf0f0]
23:22:47.968 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@594c8879 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@3dee7142, testMethod = rejectsInvalidNumberOfArguments@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67988d92 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.969 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.969 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.970 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.971 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@594c8879 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@3dee7142, testMethod = rejectsInvalidNumberOfArguments@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67988d92 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.972 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@594c8879 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@3c176ee, testMethod = filtersFirstLevelPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67988d92 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.973 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.974 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.977 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@594c8879 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@3c176ee, testMethod = filtersFirstLevelPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67988d92 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.978 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@594c8879 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@7cb8ae89, testMethod = filtersByNestedPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67988d92 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.979 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.979 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.980 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.983 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@594c8879 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@7cb8ae89, testMethod = filtersByNestedPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67988d92 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.984 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@594c8879 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@3c9d64e4, testMethod = rejectsMissingArgument@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67988d92 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.984 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.984 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.986 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:47.987 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@594c8879 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@3c9d64e4, testMethod = rejectsMissingArgument@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@67988d92 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotNullTest
23:22:47.988 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:47.989 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3d59a887, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2938c689, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4dbae8f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2ffa8ce5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5f17140d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@30749de8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6902e2bf, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@12e4c6de, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@75b41ff3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@61bb5770, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f5246e2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2b34a1e0]
23:22:47.990 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@464c18c8 testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@6b0c851b, testMethod = findsCustomersWithNotNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2351ad5a testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.990 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.990 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.992 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:47.994 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@464c18c8 testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@6b0c851b, testMethod = findsCustomersWithNotNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2351ad5a testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:47.995 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@464c18c8 testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@578fb678, testMethod = findsCustomersWithNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2351ad5a testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:47.996 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:47.996 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:47.998 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.000 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@464c18c8 testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@578fb678, testMethod = findsCustomersWithNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2351ad5a testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LessThanTest
23:22:48.001 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.001 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2dc33a2d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@59ed8460, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3aaed411, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5580356d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@61267fa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@54dd2962, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@181f61b4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4c601487, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1e69a9c6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@23c21550, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4033d25d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@cbb32f0]
23:22:48.003 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@44971269, testMethod = filtersByPrimitiveBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.003 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.003 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.005 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.006 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<:param0
23:22:48.006 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.006 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:48.011 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<:param0
23:22:48.012 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<?
23:22:48.014 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@44971269, testMethod = filtersByPrimitiveBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.017 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@1d5ada5a, testMethod = filtersByDoubleValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.017 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.017 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.019 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.020 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.200100000000006D
23:22:48.020 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.200100000000006D'

23:22:48.022 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.200100000000006'

23:22:48.022 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.200100000000006D
23:22:48.022 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<55.200100000000006
23:22:48.026 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.2D
23:22:48.026 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.2D'

23:22:48.027 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.2'

23:22:48.027 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.2D
23:22:48.027 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<55.2
23:22:48.029 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@1d5ada5a, testMethod = filtersByDoubleValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.032 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@32a2da8c, testMethod = filtersByPrimitiveLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.032 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.032 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.034 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.038 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<55L
23:22:48.039 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '55L'

23:22:48.039 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '55'

23:22:48.040 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<55L
23:22:48.040 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<55
23:22:48.045 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@32a2da8c, testMethod = filtersByPrimitiveLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.047 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@7b8058e0, testMethod = filtersByPrimitiveIntValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.048 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.048 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.050 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.050 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<55
23:22:48.051 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '55'

23:22:48.052 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '55'

23:22:48.052 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<55
23:22:48.052 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<55
23:22:48.055 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@7b8058e0, testMethod = filtersByPrimitiveIntValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.056 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@39b3de87, testMethod = filtersByDateWithDefaultDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.057 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.057 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.059 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.064 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@39b3de87, testMethod = filtersByDateWithDefaultDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.067 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@37b98741, testMethod = filtersByString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.067 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.067 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.069 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.070 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<:param0
23:22:48.070 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.071 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.071 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<:param0
23:22:48.071 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<?
23:22:48.074 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@37b98741, testMethod = filtersByString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.076 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@c377641, testMethod = filterByDateWithCustomDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.076 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.076 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.078 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.083 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@c377641, testMethod = filterByDateWithCustomDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.085 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4063af6, testMethod = filtersByPrimitiveFloatValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.086 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.086 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.088 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.093 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<65.21F
23:22:48.094 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:22:48.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:22:48.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<65.21F
23:22:48.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<65.21
23:22:48.098 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<55.0F
23:22:48.098 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '55.0F'

23:22:48.100 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '55.0'

23:22:48.100 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<55.0F
23:22:48.100 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<55.0
23:22:48.103 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@4063af6, testMethod = filtersByPrimitiveFloatValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.104 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5659f3b4, testMethod = filtersByBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.105 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.105 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.106 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.107 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<:param0
23:22:48.107 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.108 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:48.108 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<:param0
23:22:48.109 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<?
23:22:48.112 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5659f3b4, testMethod = filtersByBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.114 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@337eb419, testMethod = filtersByIntegerValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.114 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.114 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.116 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.117 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<55
23:22:48.117 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '55'

23:22:48.118 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '55'

23:22:48.118 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<55
23:22:48.118 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<55
23:22:48.121 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@337eb419, testMethod = filtersByIntegerValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.128 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@631a1820, testMethod = filtersByLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.129 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.129 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.130 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.133 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1007L
23:22:48.134 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1007L'

23:22:48.135 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1007'

23:22:48.135 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1007L
23:22:48.135 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<1007
23:22:48.137 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1009L
23:22:48.137 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1009L'

23:22:48.137 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1009'

23:22:48.138 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1009L
23:22:48.138 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<1009
23:22:48.150 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@631a1820, testMethod = filtersByLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.152 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@268f0cd1, testMethod = filtersByEnumValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.152 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.155 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<:param0
23:22:48.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.159 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:48.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<:param0
23:22:48.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<?
23:22:48.168 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@268f0cd1, testMethod = filtersByEnumValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.169 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@7e8e2fc7, testMethod = filtersByEnumString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.169 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.169 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.171 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<:param0
23:22:48.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5547476c}

23:22:48.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<:param0
23:22:48.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string<?
23:22:48.175 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@7e8e2fc7, testMethod = filtersByEnumString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.176 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@2f975804, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.177 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.177 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.178 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.180 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@2f975804, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.181 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6820dd90, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.182 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.182 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.184 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.185 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6820dd90, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.188 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3d5d552d, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.194 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.194 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.195 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.197 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@671275fe testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3d5d552d, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@b940d24 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.197 sec
Running net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest
23:22:48.203 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.203 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7431ac04, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@154ca57c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3ba34018, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@71139676, org.springframework.test.context.support.DirtiesContextTestExecutionListener@83b55dc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@78ac66e2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@59ae4a6f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3463d70a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@66a4e1ef, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7d2410af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5672c056, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7c039615]
23:22:48.205 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@3030edcc, testMethod = filtersByPrimitiveBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.206 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.206 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.207 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.208 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>:param0
23:22:48.209 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.211 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:48.211 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>:param0
23:22:48.211 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold>?
23:22:48.214 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@3030edcc, testMethod = filtersByPrimitiveBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.215 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@58f49b5e, testMethod = filtersByDoubleValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.216 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.216 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.217 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.219 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.21D
23:22:48.220 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:22:48.225 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:22:48.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.21D
23:22:48.226 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>65.21
23:22:48.230 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.2D
23:22:48.230 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.2D'

23:22:48.230 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.2'

23:22:48.231 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.2D
23:22:48.231 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>65.2
23:22:48.232 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@58f49b5e, testMethod = filtersByDoubleValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.233 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@6114adbe, testMethod = filtersByPrimitiveLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.234 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.234 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.235 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>56L
23:22:48.236 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '56L'

23:22:48.237 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '56'

23:22:48.237 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>56L
23:22:48.237 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long>56
23:22:48.240 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@6114adbe, testMethod = filtersByPrimitiveLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.241 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@17d745ae, testMethod = filtersByPrimitiveIntValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.241 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.241 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.243 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>65
23:22:48.243 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '65'

23:22:48.244 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '65'

23:22:48.244 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>65
23:22:48.244 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int>65
23:22:48.246 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@17d745ae, testMethod = filtersByPrimitiveIntValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.247 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@36d476c2, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.247 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.247 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.249 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.253 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@36d476c2, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.254 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@677b00ae, testMethod = filtersByString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.255 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.255 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.256 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.257 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>:param0
23:22:48.257 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.257 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>:param0
23:22:48.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name>?
23:22:48.260 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@677b00ae, testMethod = filtersByString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.261 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5883f0d5, testMethod = filterByDateWithCustomDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.261 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.262 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.263 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.266 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5883f0d5, testMethod = filterByDateWithCustomDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.267 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4ddb882, testMethod = filtersByPrimitiveFloatValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.267 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.267 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.269 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.21F
23:22:48.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:22:48.270 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:22:48.270 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.21F
23:22:48.270 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>65.21
23:22:48.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.1F
23:22:48.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.1F'

23:22:48.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.1'

23:22:48.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.1F
23:22:48.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>65.1
23:22:48.273 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4ddb882, testMethod = filtersByPrimitiveFloatValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.274 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@9111d0a, testMethod = filtersByBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.275 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.275 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.276 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.277 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>:param0
23:22:48.277 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.278 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:48.278 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>:param0
23:22:48.278 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj>?
23:22:48.280 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@9111d0a, testMethod = filtersByBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.281 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@545cfddb, testMethod = filtersByIntegerValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.282 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.282 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.283 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.284 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>65
23:22:48.284 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '65'

23:22:48.285 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '65'

23:22:48.285 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>65
23:22:48.285 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight>65
23:22:48.288 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@545cfddb, testMethod = filtersByIntegerValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.289 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4710240f, testMethod = filtersByLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.289 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.289 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.300 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 11 ms
23:22:48.301 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>1073L
23:22:48.301 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1073L'

23:22:48.302 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1073'

23:22:48.302 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>1073L
23:22:48.302 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id>1073
23:22:48.305 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4710240f, testMethod = filtersByLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.306 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@2566428f, testMethod = filtersByEnumValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.306 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.306 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.307 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.308 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>:param0
23:22:48.309 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.311 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:48.311 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>:param0
23:22:48.311 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender>?
23:22:48.316 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@2566428f, testMethod = filtersByEnumValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.318 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@2f0fa056, testMethod = filtersByEnumString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.318 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.318 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.320 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>:param0
23:22:48.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5547476c}

23:22:48.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>:param0
23:22:48.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string>?
23:22:48.326 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@2f0fa056, testMethod = filtersByEnumString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.328 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@76700647, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.328 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.328 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.329 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.331 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@76700647, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.332 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7148320d, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.333 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.333 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.334 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.336 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7148320d, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.337 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@29ec693e, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.337 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.337 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.339 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.340 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@40f6e092 testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@29ec693e, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@7bc27f7e testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.142 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotInTest
23:22:48.342 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.342 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1772cc68, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@747c1f84, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@23ebd596, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f8b373f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2e1bbf2a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3a0f0552, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@47b530e0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3171c5e6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4260de0d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@876686, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6e5b7446, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@513ad29e]
23:22:48.343 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@7effdd04, testMethod = filtersWithTwoEnumValues@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.344 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.344 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.345 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0, :param1)
23:22:48.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:48.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:48.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0, :param1)
23:22:48.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender not in  (? , ?)
23:22:48.349 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@7effdd04, testMethod = filtersWithTwoEnumValues@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.350 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5d3dbf56, testMethod = filtersByLongValue_withAdditionalNonExistingValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.350 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.350 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.352 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.352 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (12345L, 1099L, 1100L)
23:22:48.352 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '12345L'
             +-[NUM_LONG] Node: '1099L'
             \-[NUM_LONG] Node: '1100L'

23:22:48.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '12345'
             +-[NUM_LONG] LiteralNode: '1099'
             \-[NUM_LONG] LiteralNode: '1100'

23:22:48.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (12345L, 1099L, 1100L)
23:22:48.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (12345 , 1099 , 1100)
23:22:48.355 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5d3dbf56, testMethod = filtersByLongValue_withAdditionalNonExistingValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.356 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@7fefa1cc, testMethod = filtersByDateWithDefaultDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.356 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.356 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.357 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.358 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0)
23:22:48.358 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:48.359 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:48.359 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0)
23:22:48.359 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date not in  (?)
23:22:48.362 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@7fefa1cc, testMethod = filtersByDateWithDefaultDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.363 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@a6bd353, testMethod = filtersByString@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.363 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.363 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.365 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0, :param1)
23:22:48.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:48.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0, :param1)
23:22:48.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not in  (? , ?)
23:22:48.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0)
23:22:48.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:48.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0)
23:22:48.368 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not in  (?)
23:22:48.369 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@a6bd353, testMethod = filtersByString@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.370 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@1ef3b6ea, testMethod = filterByDateWithCustomDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.370 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.370 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.372 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.374 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@1ef3b6ea, testMethod = filterByDateWithCustomDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.375 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@22a85176, testMethod = filtersByEnumValue_singleValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.376 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.376 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.377 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.380 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@22a85176, testMethod = filtersByEnumValue_singleValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.381 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@633f8efd, testMethod = filtersByBooleanValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.381 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.381 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.383 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold not in (:param0)
23:22:48.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:48.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:48.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold not in (:param0)
23:22:48.384 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold not in  (?)
23:22:48.386 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@633f8efd, testMethod = filtersByBooleanValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.387 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@11972f4a, testMethod = filtersByIntegerValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.388 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.388 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.389 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight not in (121, 65)
23:22:48.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_INT] Node: '121'
             \-[NUM_INT] Node: '65'

23:22:48.396 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_INT] LiteralNode: '121'
             \-[NUM_INT] LiteralNode: '65'

23:22:48.396 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight not in (121, 65)
23:22:48.396 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight not in  (121 , 65)
23:22:48.398 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@11972f4a, testMethod = filtersByIntegerValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.398 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@30d9da5e, testMethod = filtersByLongValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.399 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.399 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.400 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (1127L, 1128L)
23:22:48.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '1127L'
             \-[NUM_LONG] Node: '1128L'

23:22:48.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '1127'
             \-[NUM_LONG] LiteralNode: '1128'

23:22:48.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (1127L, 1128L)
23:22:48.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (1127 , 1128)
23:22:48.404 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1c833e78 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@30d9da5e, testMethod = filtersByLongValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@604c8ed5 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.064 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest
23:22:48.405 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.405 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4474a287, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@47c90585, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7cf6ea5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ff8df3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@617e67f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6e14a376, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@25fb28dd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5917b984, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4bc40cb8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8019a5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7c4164a8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@18fe293d]
23:22:48.407 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6d340d36 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@3cebe931, testMethod = rejectsInvalidNumberOfArguments@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6852f1d testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.407 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.407 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.408 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.410 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6d340d36 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@3cebe931, testMethod = rejectsInvalidNumberOfArguments@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6852f1d testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.411 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6d340d36 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@d4ce346, testMethod = rejectsMissingArgument@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6852f1d testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.411 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.411 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.413 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.414 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6d340d36 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@d4ce346, testMethod = rejectsMissingArgument@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6852f1d testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.415 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6d340d36 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@2712bbab, testMethod = filtersByNestedProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6852f1d testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.415 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.415 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.417 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.419 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6d340d36 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@2712bbab, testMethod = filtersByNestedProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6852f1d testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.420 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6d340d36 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@6e29615e, testMethod = filtersByFirstLevelProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6852f1d testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.420 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.421 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.422 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.425 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6d340d36 testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@6e29615e, testMethod = filtersByFirstLevelProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6852f1d testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest
23:22:48.426 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.426 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@54ba8e11, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5bdf8295, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4b8d9b97, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5284d7f2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@52ce11b5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7522ea53, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@52d48643, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@269bf0ac, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@47a0e73, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@66e81cdd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@10f868dd, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@691ff4fe]
23:22:48.431 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@70f4dd28, testMethod = filtersByPrimitiveBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.431 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.431 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.433 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.434 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<=:param0
23:22:48.434 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.435 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:48.435 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<=:param0
23:22:48.435 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<=?
23:22:48.437 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@70f4dd28, testMethod = filtersByPrimitiveBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.438 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7e26e452, testMethod = filtersByDoubleValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.439 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.439 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.440 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.441 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=65.21D
23:22:48.441 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:22:48.441 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:22:48.441 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=65.21D
23:22:48.441 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<=65.21
23:22:48.443 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=55.2D
23:22:48.443 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.2D'

23:22:48.443 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.2'

23:22:48.443 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=55.2D
23:22:48.443 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<=55.2
23:22:48.445 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7e26e452, testMethod = filtersByDoubleValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.446 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2a1c6186, testMethod = filtersByPrimitiveLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.446 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.446 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.448 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.448 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<=55L
23:22:48.449 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '55L'

23:22:48.449 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '55'

23:22:48.449 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<=55L
23:22:48.449 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<=55
23:22:48.451 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2a1c6186, testMethod = filtersByPrimitiveLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.452 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7d5505a9, testMethod = filtersByPrimitiveIntValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.452 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.452 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.454 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<=55
23:22:48.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '55'

23:22:48.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '55'

23:22:48.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<=55
23:22:48.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<=55
23:22:48.457 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7d5505a9, testMethod = filtersByPrimitiveIntValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.458 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@14c75caf, testMethod = filtersByDateWithDefaultDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.458 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.459 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.460 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.463 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@14c75caf, testMethod = filtersByDateWithDefaultDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.464 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2c663246, testMethod = filtersByString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.464 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.464 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.466 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.466 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<=:param0
23:22:48.467 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.467 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.467 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<=:param0
23:22:48.467 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<=?
23:22:48.470 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2c663246, testMethod = filtersByString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.471 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@41b7ebec, testMethod = filterByDateWithCustomDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.471 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.471 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.473 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.475 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@41b7ebec, testMethod = filterByDateWithCustomDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.476 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6cf4325b, testMethod = filtersByPrimitiveFloatValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.477 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.477 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.478 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=65.1F
23:22:48.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.1F'

23:22:48.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.1'

23:22:48.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=65.1F
23:22:48.479 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<=65.1
23:22:48.481 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=55.1F
23:22:48.481 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '55.1F'

23:22:48.481 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '55.1'

23:22:48.481 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=55.1F
23:22:48.481 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<=55.1
23:22:48.486 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6cf4325b, testMethod = filtersByPrimitiveFloatValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.487 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1c486cec, testMethod = filtersByBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.487 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.487 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.489 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.490 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<=:param0
23:22:48.495 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}

23:22:48.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<=:param0
23:22:48.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<=?
23:22:48.500 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1c486cec, testMethod = filtersByBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.501 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6d6a20f7, testMethod = filtersByIntegerValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.502 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.502 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.503 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<=55
23:22:48.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '55'

23:22:48.505 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '55'

23:22:48.505 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<=55
23:22:48.505 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<=55
23:22:48.507 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6d6a20f7, testMethod = filtersByIntegerValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.508 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6b420c8, testMethod = filtersByLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.508 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.508 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.510 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<=1185L
23:22:48.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1185L'

23:22:48.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1185'

23:22:48.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<=1185L
23:22:48.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<=1185
23:22:48.513 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6b420c8, testMethod = filtersByLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.514 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@31a45131, testMethod = filtersByEnumValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.514 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.514 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.516 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<=:param0
23:22:48.516 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:48.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<=:param0
23:22:48.517 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<=?
23:22:48.520 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@31a45131, testMethod = filtersByEnumValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.521 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@51baea92, testMethod = filtersByEnumString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.521 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.521 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.523 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<=:param0
23:22:48.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.524 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5547476c}

23:22:48.524 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<=:param0
23:22:48.524 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string<=?
23:22:48.526 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@51baea92, testMethod = filtersByEnumString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.527 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7be03bb2, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.528 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.528 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.529 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.531 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7be03bb2, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.532 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@fb8da51, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.532 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.532 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.534 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.535 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@fb8da51, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.536 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@770feaab, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.537 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.537 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.538 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.540 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ea91363 testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@770feaab, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@3f0c27dc testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.115 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest
23:22:48.541 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.541 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@786f4b15, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2f397395, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5710fcdf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@50c903e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7b95469, org.springframework.test.context.transaction.TransactionalTestExecutionListener@63782ad0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@33ded464, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@52b23f41, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1f652362, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3de9a4f4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@78513ad9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3b5a4aa5]
23:22:48.543 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@78373fdf, testMethod = filtersByStringCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.544 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.544 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.545 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)=:param0
23:22:48.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)=:param0
23:22:48.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name)=?
23:22:48.548 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)=:param0
23:22:48.548 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.548 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.549 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)=:param0
23:22:48.549 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name)=?
23:22:48.550 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@78373fdf, testMethod = filtersByStringCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.551 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@43b60ce1, testMethod = filtersByEnumCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.552 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.552 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.553 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.556 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@43b60ce1, testMethod = filtersByEnumCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.557 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7ddb114d, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.557 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.557 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.558 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.561 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7ddb114d, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.562 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@5fea6cdb, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.562 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.562 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.563 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.565 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@5fea6cdb, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.566 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@270cf3eb, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.566 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.566 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.568 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.570 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@270cf3eb, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.571 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@16ec1438, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.571 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.571 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.573 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.575 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@16ec1438, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.576 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@5194394, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.576 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.576 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.578 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.580 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@5194394, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.580 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@152e530d, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.581 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.581 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.582 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.585 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@152e530d, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.586 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@4fe99105, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.586 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.586 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.588 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.590 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@4fe99105, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.601 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@1a8cb4a9, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.602 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.602 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.604 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.606 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@1a8cb4a9, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.607 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@524af1ab, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.607 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.607 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.609 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.611 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@524af1ab, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.612 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@27e9ac69, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.612 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.612 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.614 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.616 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@27e9ac69, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.617 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@357aa5cf, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.617 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.617 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.619 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.619 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1255L
23:22:48.620 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1255L'

23:22:48.620 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1255'

23:22:48.620 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1255L
23:22:48.620 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1255
23:22:48.623 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@357aa5cf, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.630 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@74bc67d7, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.630 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.630 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.635 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
23:22:48.637 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@65bccd0f testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@74bc67d7, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63dee1b7 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 15, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.097 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest
23:22:48.639 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.639 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@45da0d4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e5d28ee, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@245b080c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@33650388, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5a575e30, org.springframework.test.context.transaction.TransactionalTestExecutionListener@d1a17cc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@71fd650b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6a9f41ff, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ad92442, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@57a0f6a2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4d6f0460, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5def348b]
23:22:48.645 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7e7047a2, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.646 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.646 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.647 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.652 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7e7047a2, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.653 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4136d4da, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.654 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.654 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.655 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.657 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4136d4da, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.658 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@23aa4376, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.659 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.659 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.660 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.663 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@23aa4376, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.663 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@401835ac, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.664 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.664 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.666 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.667 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@401835ac, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.668 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@5c275b83, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.669 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.669 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.670 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.672 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@5c275b83, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.673 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@2ef08ad0, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.673 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.673 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.675 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.677 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@2ef08ad0, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.678 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@421b4cf3, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.679 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.679 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.680 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.683 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@421b4cf3, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.684 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@1e07ae6, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.684 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.684 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.686 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.702 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@1e07ae6, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.703 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@66844ccf, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.703 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.703 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.705 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.707 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@66844ccf, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.714 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7a203af7, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.714 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.714 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.716 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.718 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7a203af7, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.719 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4dbd1fdb, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.719 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.719 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.721 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>1293L
23:22:48.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1293L'

23:22:48.722 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1293'

23:22:48.722 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>1293L
23:22:48.722 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>1293
23:22:48.724 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4dbd1fdb, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.724 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@15f75fa5, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.725 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.725 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.726 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.730 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f0469e2 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@15f75fa5, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20ba3c52 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.092 sec
Running net.kaczmarzyk.EqualIgnoreCaseE2eTest
23:22:48.731 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.731 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c4bff52, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6d0bf784, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@12c2135e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@235b8132, org.springframework.test.context.support.DirtiesContextTestExecutionListener@30f94b64, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2fc3d28, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2686ca, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7f0bd5ed, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5d30303, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@66257bec, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5281b134, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7384b234]
23:22:48.732 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30e6c577 testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@169ddbb6, testMethod = findsByStringValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20f7197f testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.733 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.733 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.734 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.735 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.735 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.736 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.739 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30e6c577 testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@169ddbb6, testMethod = findsByStringValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20f7197f testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.740 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30e6c577 testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@6338a0ec, testMethod = findsByEnumValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20f7197f testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.740 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.740 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.742 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.742 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.742 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.744 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.747 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30e6c577 testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@6338a0ec, testMethod = findsByEnumValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@20f7197f testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running net.kaczmarzyk.ParamSeparatorE2eTest
23:22:48.748 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.749 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@76745c61, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@21238ffe, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f499565, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7a2256bb, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2ee18aca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1300bc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7001e12f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@187ee61a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3a6b8805, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2c997fdb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@536efbfe, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3ccf89bf]
23:22:48.750 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@13312ba2 testClass = ParamSeparatorE2eTest, testInstance = net.kaczmarzyk.ParamSeparatorE2eTest@38ede85d, testMethod = doesNoFilteringIfParameterUsingParamSeparatorIsMissing@ParamSeparatorE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ac74499 testClass = ParamSeparatorE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.751 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.751 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.752 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.754 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0
23:22:48.755 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'net'
       |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'Customer'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:22:48.755 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}

23:22:48.755 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0
23:22:48.755 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_
23:22:48.762 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@13312ba2 testClass = ParamSeparatorE2eTest, testInstance = net.kaczmarzyk.ParamSeparatorE2eTest@38ede85d, testMethod = doesNoFilteringIfParameterUsingParamSeparatorIsMissing@ParamSeparatorE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ac74499 testClass = ParamSeparatorE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running net.kaczmarzyk.LikeE2eTest
23:22:48.763 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.763 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d7a4740, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@643afff3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@381a4407, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6169de0c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e06d526, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d707e72, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@17a027a7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@381602e1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@40c14f20, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3e3c2aa4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@28b7afdb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@203ea126]
23:22:48.765 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d12c4dd testClass = LikeE2eTest, testInstance = net.kaczmarzyk.LikeE2eTest@1969a032, testMethod = filtersByFirstName@LikeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@dfee4f1 testClass = LikeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.765 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.765 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.767 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.774 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d12c4dd testClass = LikeE2eTest, testInstance = net.kaczmarzyk.LikeE2eTest@1969a032, testMethod = filtersByFirstName@LikeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@dfee4f1 testClass = LikeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.NullE2eTest
23:22:48.776 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.776 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4b71aee1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6e44d39e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1f122485, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7fd9d86, org.springframework.test.context.support.DirtiesContextTestExecutionListener@413d2d3e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@9addea4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@715e518, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6c6f49d1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4493ddbf, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@23ac7377, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@bb96f3f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1d0e8e58]
23:22:48.777 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7db865a8 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@11e0a164, testMethod = findsEntitiesWithNoFiltering@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e7011b5 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.778 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.778 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.779 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.787 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7db865a8 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@11e0a164, testMethod = findsEntitiesWithNoFiltering@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e7011b5 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.788 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7db865a8 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@4e6eb11d, testMethod = findsEntitiesWithNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e7011b5 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.788 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.788 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.790 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.801 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7db865a8 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@4e6eb11d, testMethod = findsEntitiesWithNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e7011b5 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.802 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7db865a8 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@4bb51f15, testMethod = findsEntitiesWithNotNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e7011b5 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.803 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.803 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.804 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.811 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7db865a8 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@4bb51f15, testMethod = findsEntitiesWithNotNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e7011b5 testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running net.kaczmarzyk.TypeMismatchE2eTest
23:22:48.812 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.812 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5be16caa, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6185f1ec, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3a87c694, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4ddb3312, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1d8f923f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@534b0af3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@57fcc568, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@43ab3f26, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@22d45306, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2943c93d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@18a59ef8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@26dc0c5]
23:22:48.814 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@737e8e66 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@622ec92a, testMethod = returnsEmptyResultIfStringProvidedInsteadOfNumericalId@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@620b0fad testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.814 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.814 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.816 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.821 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@737e8e66 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@622ec92a, testMethod = returnsEmptyResultIfStringProvidedInsteadOfNumericalId@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@620b0fad testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.822 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@737e8e66 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@76f0017d, testMethod = returnsEmptyResultIfNoneOfTheValuesAreValidEnums@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@620b0fad testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.822 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.822 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.824 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.825 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in ()
23:22:48.826 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'

23:22:48.826 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'

23:22:48.826 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in ()
23:22:48.826 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in ()
23:22:48.829 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@737e8e66 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@76f0017d, testMethod = returnsEmptyResultIfNoneOfTheValuesAreValidEnums@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@620b0fad testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.830 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@737e8e66 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@42081e5f, testMethod = throwsExceptionIfOneOfSpecifiedEnumValuesIsInvalid@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@620b0fad testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.831 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.831 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.832 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.836 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@737e8e66 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@42081e5f, testMethod = throwsExceptionIfOneOfSpecifiedEnumValuesIsInvalid@TypeMismatchE2eTest, testException = org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: invalid values present in the HTTP param; nested exception is class net.kaczmarzyk.spring.data.jpa.utils.Converter$ValuesRejectedException: invalid values present in the HTTP param, mergedContextConfiguration = [WebMergedContextConfiguration@620b0fad testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.837 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@737e8e66 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@35fdc926, testMethod = filtersOnlyByValidEnumValuesIfEmptyResultOnTypeMismatchBehaviourSpecified@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@620b0fad testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.838 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.838 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.839 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.846 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@737e8e66 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@35fdc926, testMethod = filtersOnlyByValidEnumValuesIfEmptyResultOnTypeMismatchBehaviourSpecified@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@620b0fad testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.846 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@737e8e66 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@2c28414b, testMethod = findsByEitherIdOrNameEvenThoughTheirTypesAreDifferent@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@620b0fad testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.847 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.847 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.849 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.850 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( 0=1 ) or ( upper(generatedAlias0.firstName) like :param0 )
23:22:48.851 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '0'
          |  \-[NUM_INT] Node: '1'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:48.851 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '0'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.851 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( 0=1 ) or ( upper(generatedAlias0.firstName) like :param0 )
23:22:48.851 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where 0=1 or upper(customer0_.first_name) like ?
23:22:48.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.id=1516L ) or ( upper(generatedAlias0.firstName) like :param0 )
23:22:48.855 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'id'
          |  \-[NUM_LONG] Node: '1516L'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:22:48.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NUM_LONG] LiteralNode: '1516'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.id=1516L ) or ( upper(generatedAlias0.firstName) like :param0 )
23:22:48.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1516 or upper(customer0_.first_name) like ?
23:22:48.859 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@737e8e66 testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@2c28414b, testMethod = findsByEitherIdOrNameEvenThoughTheirTypesAreDifferent@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@620b0fad testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running net.kaczmarzyk.OrE2eTest
23:22:48.860 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.861 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7211ab39, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3c1c984f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@42a1c3ba, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4c1ea0ab, org.springframework.test.context.support.DirtiesContextTestExecutionListener@33299272, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6bafbab8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@27df0864, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1efdefcc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@61b85463, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@77544896, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2817f230, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5965eb71]
23:22:48.862 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@59302368 testClass = OrE2eTest, testInstance = net.kaczmarzyk.OrE2eTest@3447daf1, testMethod = findsByFullName@OrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4134db1e testClass = OrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.862 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.863 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.864 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.866 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( upper(generatedAlias0.firstName) like :param0 ) or ( upper(generatedAlias0.lastName) like :param1 )
23:22:48.866 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'upper'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'generatedAlias0'
          |  |        \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:48.866 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.866 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( upper(generatedAlias0.firstName) like :param0 ) or ( upper(generatedAlias0.lastName) like :param1 )
23:22:48.866 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name) like ? or upper(customer0_.last_name) like ?
23:22:48.871 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@59302368 testClass = OrE2eTest, testInstance = net.kaczmarzyk.OrE2eTest@3447daf1, testMethod = findsByFullName@OrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4134db1e testClass = OrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.NotNullE2eTest
23:22:48.873 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.873 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7cebf48d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4e3ef73d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6ba68981, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3f64099c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1c08cd61, org.springframework.test.context.transaction.TransactionalTestExecutionListener@253646c2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7a832964, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6534e741, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3f8d5d43, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@281a0c26, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4bb1d848, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@9fd2090]
23:22:48.874 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57ab8f82 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@49fdc88e, testMethod = findsEntitiesWithNoNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43874d7f testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.875 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.875 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.876 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.883 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@57ab8f82 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@49fdc88e, testMethod = findsEntitiesWithNoNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43874d7f testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.884 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57ab8f82 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@2d9a82e9, testMethod = findsEntitiesWithNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43874d7f testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.884 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.884 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.886 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.892 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@57ab8f82 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@2d9a82e9, testMethod = findsEntitiesWithNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43874d7f testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.893 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57ab8f82 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@6328f3b1, testMethod = findsAllEntities@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43874d7f testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.894 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.894 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.895 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.902 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@57ab8f82 testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@6328f3b1, testMethod = findsAllEntities@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43874d7f testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running net.kaczmarzyk.ComparableE2eTest
23:22:48.903 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.903 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@70d52d7e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7883c414, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@69f4fa56, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5a31d662, org.springframework.test.context.support.DirtiesContextTestExecutionListener@356be87, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6513699d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2bfb0923, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7fad58f8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4939730c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3798a437, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@445911f6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5126fb1d]
23:22:48.905 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6d77c929 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@45eeea37, testMethod = filtersByRegistrationDateRange_customDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3bf5ced8 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.905 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.905 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.907 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.909 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate>=:param0 ) and ( generatedAlias0.registrationDate<=:param1 )
23:22:48.909 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'registrationDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:48.909 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:48.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate>=:param0 ) and ( generatedAlias0.registrationDate<=:param1 )
23:22:48.910 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>=? and customer0_.registration_date<=?
23:22:48.914 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6d77c929 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@45eeea37, testMethod = filtersByRegistrationDateRange_customDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3bf5ced8 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.915 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6d77c929 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@797b2044, testMethod = findsByNameRange@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3bf5ced8 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.915 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.915 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.916 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.918 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName>=:param0 ) and ( generatedAlias0.firstName<=:param1 )
23:22:48.918 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:48.919 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.919 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName>=:param0 ) and ( generatedAlias0.firstName<=:param1 )
23:22:48.919 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name>=? and customer0_.first_name<=?
23:22:48.923 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6d77c929 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@797b2044, testMethod = findsByNameRange@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3bf5ced8 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.924 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6d77c929 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@c9acbec, testMethod = filtersByRegistrationDateRange_defaultDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3bf5ced8 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.925 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.925 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.926 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.932 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6d77c929 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@c9acbec, testMethod = filtersByRegistrationDateRange_defaultDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3bf5ced8 testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running net.kaczmarzyk.JoinFetchE2eTest
23:22:48.933 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.933 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5f113675, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@788a47fc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@46329e85, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@e840be5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@58f036de, org.springframework.test.context.transaction.TransactionalTestExecutionListener@72ef3f9b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@207b41f5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@e8ebd3c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@57913cf5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5c89c27b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@260754f6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5d1b7a57]
23:22:48.935 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6a8b30a3 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@2376463f, testMethod = createsNotDistinctQueryIfDistinctAttributeIsSetToFalse@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@710e1af6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.935 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.935 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.937 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.938 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:22:48.939 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.939 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:22:48.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.first_name=?
23:22:48.944 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6a8b30a3 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@2376463f, testMethod = createsNotDistinctQueryIfDistinctAttributeIsSetToFalse@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@710e1af6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.945 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6a8b30a3 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@20ba2011, testMethod = createsDistinctQueryByDefault@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@710e1af6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.945 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.945 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.947 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.948 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:22:48.949 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.949 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.949 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:22:48.949 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.first_name=?
23:22:48.953 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6a8b30a3 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@20ba2011, testMethod = createsDistinctQueryByDefault@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@710e1af6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.954 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6a8b30a3 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@22be8899, testMethod = findsByLastNameWithPagination@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@710e1af6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.955 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.955 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.956 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.958 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.lastName=:param0 order by generatedAlias0.id asc
23:22:48.958 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'lastName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:48.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:48.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.lastName=:param0 order by generatedAlias0.id asc
23:22:48.959 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.last_name=? order by customer0_.id asc
23:22:48.961 [main] WARN  o.h.h.i.ast.QueryTranslatorImpl - HHH000104: firstResult/maxResults specified with collection fetch; applying in memory!
23:22:48.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:22:48.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:48.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:48.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:22:48.962 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ where customer0_.last_name=?
23:22:48.968 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6a8b30a3 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@22be8899, testMethod = findsByLastNameWithPagination@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@710e1af6 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running net.kaczmarzyk.AvoidingRedundantJoinE2eTest
23:22:48.969 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:48.969 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@501f21fe, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@78aa11f2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c57c200, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1c0ed7c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@35b7156f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1dbaa7aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5f3f31df, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@35e55526, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@38f42298, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@703b55db, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@562c23ca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@497f104c]
23:22:48.971 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b32e17b testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@15990a52, testMethod = performsJoinOnlyIfUsedInFiltering@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@454009a0 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.971 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.971 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:48.980 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 where ( generatedAlias1.name like :param0 ) and ( 1=1 )
23:22:48.980 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Movie'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'stars'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'name'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:22:48.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie,person,movie_stars)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[person2_, movie0_], fromElementsByPath=[generatedAlias0.stars], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Movie.stars,tableName=person,tableAlias=person2_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'person2_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=person2_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'person2_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person2_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:22:48.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 where ( generatedAlias1.name like :param0 ) and ( 1=1 )
23:22:48.981 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id where (person2_.name like ?) and 1=1
23:22:48.988 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b32e17b testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@15990a52, testMethod = performsJoinOnlyIfUsedInFiltering@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@454009a0 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:48.989 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b32e17b testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@79fe746d, testMethod = performsEachJoinOnlyOnce@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@454009a0 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:48.989 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:48.990 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:48.991 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:48.993 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 inner join generatedAlias0.directors as generatedAlias2 where ( ( generatedAlias1.name like :param0 ) and ( generatedAlias2.name like :param1 ) ) and ( 1=1 )
23:22:48.993 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Movie'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'stars'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'directors'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  \-[IDENT] Node: 'name'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'name'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:22:48.994 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie,person,movie_stars,movie_directors)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[person2_, person4_, movie0_], fromElementsByPath=[generatedAlias0.directors, generatedAlias0.stars], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Movie.stars,tableName=person,tableAlias=person2_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join movie_directors directors3_ on movie0_.id=directors3_.movie_id inner join person person4_ on directors3_.directors_id=person4_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Movie.directors,tableName=person,tableAlias=person4_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'person2_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=person2_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias1}
          |  |  |  +-[ALIAS_REF] IdentNode: 'person2_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person2_}
          |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'person4_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=person4_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'person4_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person4_}
          |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:22:48.994 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 inner join generatedAlias0.directors as generatedAlias2 where ( ( generatedAlias1.name like :param0 ) and ( generatedAlias2.name like :param1 ) ) and ( 1=1 )
23:22:48.994 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id inner join movie_directors directors3_ on movie0_.id=directors3_.movie_id inner join person person4_ on directors3_.directors_id=person4_.id where (person2_.name like ?) and (person4_.name like ?) and 1=1
23:22:49.003 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b32e17b testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@79fe746d, testMethod = performsEachJoinOnlyOnce@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@454009a0 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.004 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b32e17b testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@68ddb10c, testMethod = doesNotJoinAtAllIfFilteringNotAppliedOnJoinPaths@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@454009a0 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.004 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.004 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.006 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.008 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 where 1=1
23:22:49.008 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Movie'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:22:49.008 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:22:49.008 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 where 1=1
23:22:49.008 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ where 1=1
23:22:49.012 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b32e17b testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@68ddb10c, testMethod = doesNotJoinAtAllIfFilteringNotAppliedOnJoinPaths@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@454009a0 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 sec
Running net.kaczmarzyk.EqualE2eTest
23:22:49.013 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.014 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@a809e74, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5bcc10fa, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1a8b3791, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7cdab66c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7227f4bd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@49d761c3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@aa3e0d7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@23635e39, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6e2cd4f4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1c07798b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@9b79784, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@309c821d]
23:22:49.015 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d06acfd testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@386ad5cb, testMethod = findsByExactStringValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25169558 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.016 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.016 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.017 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.019 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName=:param0
23:22:49.019 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.020 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.020 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName=:param0
23:22:49.020 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name=?
23:22:49.024 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d06acfd testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@386ad5cb, testMethod = findsByExactStringValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25169558 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.024 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d06acfd testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@4ad177f3, testMethod = findsByExactDateValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25169558 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.025 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.025 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.026 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.031 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d06acfd testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@4ad177f3, testMethod = findsByExactDateValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25169558 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.032 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d06acfd testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@70a8159f, testMethod = findsByExactLongValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25169558 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.032 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.032 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.034 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1920L
23:22:49.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1920L'

23:22:49.036 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1920'

23:22:49.036 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1920L
23:22:49.036 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1920
23:22:49.039 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d06acfd testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@70a8159f, testMethod = findsByExactLongValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25169558 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.040 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d06acfd testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@721b38e0, testMethod = findsByExactEnumValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25169558 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.041 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.041 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.042 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.048 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2d06acfd testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@721b38e0, testMethod = findsByExactEnumValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25169558 testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
Running net.kaczmarzyk.NotEqualE2ETest
23:22:49.050 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.050 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@75321ba4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@746be7ac, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1f6b8c1f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@471a163a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2290ca46, org.springframework.test.context.transaction.TransactionalTestExecutionListener@9ed1f3f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4a256169, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5d1915d1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@797f26ce, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@180aca39, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@79c5de78, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6ce7fb0c]
23:22:49.052 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26b63bbb testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@3d4bf0dc, testMethod = findsByExactStringValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4262ac5e testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.053 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.053 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.054 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName<>:param0
23:22:49.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName<>:param0
23:22:49.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name<>?
23:22:49.063 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26b63bbb testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@3d4bf0dc, testMethod = findsByExactStringValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4262ac5e testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.064 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26b63bbb testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@67ce092d, testMethod = findsByExactDateValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4262ac5e testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.064 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.064 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.066 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.072 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26b63bbb testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@67ce092d, testMethod = findsByExactDateValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4262ac5e testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.073 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26b63bbb testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@fb7cc8f, testMethod = findsByExactLongValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4262ac5e testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.074 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.074 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.075 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>2012L
23:22:49.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2012L'

23:22:49.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2012'

23:22:49.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>2012L
23:22:49.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>2012
23:22:49.082 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26b63bbb testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@fb7cc8f, testMethod = findsByExactLongValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4262ac5e testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.083 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@26b63bbb testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@7e561665, testMethod = findsByExactEnumValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4262ac5e testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.083 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.083 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.085 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.091 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@26b63bbb testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@7e561665, testMethod = findsByExactEnumValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4262ac5e testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
Running net.kaczmarzyk.PathVariableHandlingE2eTest
23:22:49.092 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.092 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@27241127, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5631baf5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f546133, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@379ebfa0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@30b43d5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6b89dfac, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@17287617, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5589b8ed, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@44c639d4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6197fa5f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@35dba0b4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2d8d2832]
23:22:49.093 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2eb37eee testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@43fe629a, testMethod = findsByIdProviedInPathVariableAndByRegularSpec@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40fd8aa1 testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.094 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.094 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.095 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.098 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 )
23:22:49.099 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:49.099 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:49.099 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 )
23:22:49.099 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=?
23:22:49.108 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2eb37eee testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@43fe629a, testMethod = findsByIdProviedInPathVariableAndByRegularSpec@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40fd8aa1 testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.109 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2eb37eee testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@71f8f1, testMethod = findsByIdProvidedInPathVariableWithRegex@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40fd8aa1 testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.109 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.109 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.111 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.113 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2081L
23:22:49.113 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2081L'

23:22:49.114 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2081'

23:22:49.114 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2081L
23:22:49.114 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2081
23:22:49.117 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2eb37eee testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@71f8f1, testMethod = findsByIdProvidedInPathVariableWithRegex@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40fd8aa1 testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.118 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2eb37eee testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@28b0eae9, testMethod = findsByIdProvidedInPathVariableWithRegexpWithRequestMappingAtClassLevel@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40fd8aa1 testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.119 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.119 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.120 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.122 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2104L
23:22:49.122 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2104L'

23:22:49.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2104'

23:22:49.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2104L
23:22:49.123 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2104
23:22:49.126 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2eb37eee testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@28b0eae9, testMethod = findsByIdProvidedInPathVariableWithRegexpWithRequestMappingAtClassLevel@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40fd8aa1 testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.127 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2eb37eee testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@7cbfa39d, testMethod = findsByIdProvidedInPathVariable@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40fd8aa1 testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.128 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.128 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.129 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2127L
23:22:49.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2127L'

23:22:49.132 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2127'

23:22:49.132 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2127L
23:22:49.132 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2127
23:22:49.135 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2eb37eee testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@7cbfa39d, testMethod = findsByIdProvidedInPathVariable@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40fd8aa1 testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.136 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2eb37eee testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@24623fe4, testMethod = returnsHttp404WhenSentRequestContainsPathVarInInvalidFormat@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40fd8aa1 testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.137 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.138 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.143 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2eb37eee testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@24623fe4, testMethod = returnsHttp404WhenSentRequestContainsPathVarInInvalidFormat@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40fd8aa1 testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.052 sec
Running net.kaczmarzyk.ConjunctionE2eTest
23:22:49.144 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.144 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3b88b5f8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@bc8921c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@57336465, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4f53f1b1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@310abad6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e1d8699, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3241c573, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@62cf74f3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6f7be76, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@14ccd97f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@281aecc8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@31eb7dd4]
23:22:49.145 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44bc7dc9 testClass = ConjunctionE2eTest, testInstance = net.kaczmarzyk.ConjunctionE2eTest@365b1eb5, testMethod = findsByStreetAndFullName@ConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25a5d43a testClass = ConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.146 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.146 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.147 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.address.street like :param2 )
23:22:49.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'firstName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'address'
             |  \-[IDENT] Node: 'street'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:49.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
             |  \-[IDENT] IdentNode: 'street' {originalText=street}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.address.street like :param2 )
23:22:49.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.last_name like ?) and (customer0_.street like ?)
23:22:49.153 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:22:49.154 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:49.154 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.154 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:22:49.154 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name like ? or customer0_.last_name like ?
23:22:49.161 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44bc7dc9 testClass = ConjunctionE2eTest, testInstance = net.kaczmarzyk.ConjunctionE2eTest@365b1eb5, testMethod = findsByStreetAndFullName@ConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25a5d43a testClass = ConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running net.kaczmarzyk.NotEqualIgnoreCaseE2eTest
23:22:49.162 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.163 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@67b2ea33, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3891f024, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@667333f0, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4ef88293, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3e6b1a0d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@9ccdd34, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@765f934e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c397b0c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1ae4bdf4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@752ee6e1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7fe1dee9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@48b73b02]
23:22:49.164 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5677182f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@2bd00fce, testMethod = findsByEnumValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b34e798 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.164 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.164 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.166 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.166 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.166 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.168 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.171 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5677182f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@2bd00fce, testMethod = findsByEnumValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b34e798 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.171 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5677182f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@78f2bb1b, testMethod = findsByStringValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b34e798 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.172 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.172 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.173 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.174 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.174 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.175 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.178 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5677182f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@78f2bb1b, testMethod = findsByStringValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b34e798 testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running net.kaczmarzyk.JoinE2eTest
23:22:49.179 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.180 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4d0f96ac, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4f880f30, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c9055e6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@45a16cac, org.springframework.test.context.support.DirtiesContextTestExecutionListener@74aa2842, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7bd44868, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5951d91, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4b1fd583, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6e520c9a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@371c8e30, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1ac864d7, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2fce09c0]
23:22:49.181 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@6b4773ff, testMethod = findsByOrders@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.182 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.182 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.183 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.185 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0 order by generatedAlias0.id asc
23:22:49.185 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[LIKE] Node: 'like'
    |     +-[METHOD_CALL] Node: '('
    |     |  +-[IDENT] Node: 'upper'
    |     |  \-[EXPR_LIST] Node: 'exprList'
    |     |     \-[DOT] Node: '.'
    |     |        +-[IDENT] Node: 'generatedAlias1'
    |     |        \-[IDENT] Node: 'itemName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:49.186 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[LIKE] BinaryLogicOperatorNode: 'like'
    |     +-[METHOD_CALL] MethodNode: '('
    |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |     |  \-[EXPR_LIST] SqlNode: 'exprList'
    |     |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:49.186 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0 order by generatedAlias0.id asc
23:22:49.186 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where upper(orders1_.item_name) like ? order by customer0_.id asc
23:22:49.190 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@6b4773ff, testMethod = findsByOrders@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.191 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1d932614, testMethod = findsByOrdersWithPagination@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.192 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.192 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.193 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.197 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0
23:22:49.197 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias1'
          |        \-[IDENT] Node: 'itemName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.198 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.198 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0
23:22:49.198 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where upper(orders1_.item_name) like ?
23:22:49.201 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1d932614, testMethod = findsByOrdersWithPagination@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.202 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@5eb0f030, testMethod = resolvesJoinProperlyFromAnnotatedCustomInterface@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.202 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.202 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.204 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.209 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName in (:param0) order by generatedAlias0.id asc
23:22:49.209 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias1'
    |     |  \-[IDENT] Node: 'itemName'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:49.209 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:49.209 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName in (:param0) order by generatedAlias0.id asc
23:22:49.210 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where orders1_.item_name in (?) order by customer0_.id asc
23:22:49.213 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@5eb0f030, testMethod = resolvesJoinProperlyFromAnnotatedCustomInterface@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.214 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@496ce170, testMethod = createsDistinctQueryByDefault@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.215 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.215 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.216 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.218 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.itemName=:param1 ) order by generatedAlias0.id asc
23:22:49.218 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[OR] Node: 'or'
    |     +-[LIKE] Node: 'like'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'generatedAlias2'
    |     |  |  \-[IDENT] Node: 'itemName'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'param0'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias1'
    |        |  \-[IDENT] Node: 'itemName'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:49.219 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[OR] SqlNode: 'or'
    |     +-[LIKE] BinaryLogicOperatorNode: 'like'
    |     |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
    |     |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
    |     |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |        |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |        |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:49.219 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.itemName=:param1 ) order by generatedAlias0.id asc
23:22:49.219 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where orders2_.item_name like ? or orders1_.item_name=? order by customer0_.id asc
23:22:49.223 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@496ce170, testMethod = createsDistinctQueryByDefault@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.224 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@5f2efaec, testMethod = findsByOrdersAndName@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.225 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.225 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.226 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.228 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where ( generatedAlias0.firstName=:param0 ) and ( upper(generatedAlias1.itemName) like :param1 ) order by generatedAlias0.id asc
23:22:49.228 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'generatedAlias0'
    |     |  |  \-[IDENT] Node: 'firstName'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'param0'
    |     \-[LIKE] Node: 'like'
    |        +-[METHOD_CALL] Node: '('
    |        |  +-[IDENT] Node: 'upper'
    |        |  \-[EXPR_LIST] Node: 'exprList'
    |        |     \-[DOT] Node: '.'
    |        |        +-[IDENT] Node: 'generatedAlias1'
    |        |        \-[IDENT] Node: 'itemName'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:49.228 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
    |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |     |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    |     \-[LIKE] BinaryLogicOperatorNode: 'like'
    |        +-[METHOD_CALL] MethodNode: '('
    |        |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |        |  \-[EXPR_LIST] SqlNode: 'exprList'
    |        |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |        |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |        |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:49.229 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where ( generatedAlias0.firstName=:param0 ) and ( upper(generatedAlias1.itemName) like :param1 ) order by generatedAlias0.id asc
23:22:49.229 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where customer0_.first_name=? and (upper(orders1_.item_name) like ?) order by customer0_.id asc
23:22:49.232 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@5f2efaec, testMethod = findsByOrdersAndName@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.233 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@26378a64, testMethod = filtersByAttributesOfMultipleJoins@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.234 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.234 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.235 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.238 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) order by generatedAlias0.id asc
23:22:49.238 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[OR] Node: 'or'
    |        +-[LIKE] Node: 'like'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'generatedAlias2'
    |        |  |  \-[IDENT] Node: 'itemName'
    |        |  \-[COLON] Node: ':'
    |        |     \-[IDENT] Node: 'param0'
    |        \-[EQ] Node: '='
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'generatedAlias1'
    |           |  \-[IDENT] Node: 'badgeType'
    |           \-[COLON] Node: ':'
    |              \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:49.238 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[OR] SqlNode: 'or'
    |        +-[LIKE] BinaryLogicOperatorNode: 'like'
    |        |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
    |        |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
    |        |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
    |        \-[EQ] BinaryLogicOperatorNode: '='
    |           +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
    |           |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
    |           |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
    |           \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:49.239 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) order by generatedAlias0.id asc
23:22:49.239 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where 1=1 and (orders2_.item_name like ? or badges1_.badge_type=?) order by customer0_.id asc
23:22:49.244 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7931048d testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@26378a64, testMethod = filtersByAttributesOfMultipleJoins@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e699edc testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 sec
Running net.kaczmarzyk.ConstValsE2eTest
23:22:49.245 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.245 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38b6b4fb, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6e5d2207, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f6ef272, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@582a1e4e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@55b678dc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@52fc2577, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7aa9b038, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@72f9194d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@146fff56, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@270ba731, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1094fb98, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2a1dabb6]
23:22:49.247 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5d589727 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@ca31114, testMethod = filtersBySingleSpecWithMultipleConstVals@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@71a69653 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.247 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.247 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.248 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.254 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5d589727 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@ca31114, testMethod = filtersBySingleSpecWithMultipleConstVals@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@71a69653 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.255 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5d589727 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@74791130, testMethod = filtersByConjunctionSpecWithConstValues@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@71a69653 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.255 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.255 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.257 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.address.street=:param1 )
23:22:49.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'address'
             |  \-[IDENT] Node: 'street'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:49.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
             |  \-[IDENT] IdentNode: 'street' {originalText=street}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.address.street=:param1 )
23:22:49.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and customer0_.street=?
23:22:49.263 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5d589727 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@74791130, testMethod = filtersByConjunctionSpecWithConstValues@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@71a69653 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.264 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5d589727 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@55524f16, testMethod = filtersBySingleSpecWithSingleConstVal@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@71a69653 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.264 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.264 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.265 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.274 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5d589727 testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@55524f16, testMethod = filtersBySingleSpecWithSingleConstVal@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@71a69653 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running net.kaczmarzyk.DefaultSpELValE2eTest
23:22:49.276 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.276 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2a428e3b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@69faebc2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@12bbf99e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6203f71, org.springframework.test.context.support.DirtiesContextTestExecutionListener@382d4ad8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@63702e4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4b0d7cb5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4c511912, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1ef8f1ca, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2066f0d3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@aed8be, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4473d830]
23:22:49.278 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@1d8264c9, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:49.278 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.278 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.280 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.286 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@1d8264c9, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.287 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@46ff06df, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:49.288 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.288 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.290 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.296 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@46ff06df, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.296 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@27bc569a, testMethod = filtersBySingleSpecWithoutParamUsingRawStringDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:49.297 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.297 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.298 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.304 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@27bc569a, testMethod = filtersBySingleSpecWithoutParamUsingRawStringDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.305 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3d65fbab, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:49.306 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.306 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.307 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.314 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3d65fbab, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.315 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@13bf8a36, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithTemporalConstructor@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:49.315 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.315 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.316 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.323 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@13bf8a36, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithTemporalConstructor@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.324 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3aa746cd, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpEL@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6587c92f]; rollback [true]
23:22:49.324 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.324 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.326 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.333 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4407b019 testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3aa746cd, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpEL@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6fee485b testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.058 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest
23:22:49.334 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.334 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@15764a15, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@19d4057, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@647407b4, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@625a05e1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@455bdd5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2eafa259, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6aa2599f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@58e53c27, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@434fa353, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@10216c09, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@68b7a133, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1942bc06]
23:22:49.336 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@50e43637 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@3a9fe0d4, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.336 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.336 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.338 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 )
23:22:49.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:49.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:49.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 )
23:22:49.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name=? or customer0_.first_name=?) and customer0_.gender=?
23:22:49.347 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@50e43637 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@3a9fe0d4, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.348 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@50e43637 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@44810123, testMethod = filtersAccordingToEmptyFilterExtendedByConjunctionSpecParam@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.348 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.348 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.349 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.357 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@50e43637 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@44810123, testMethod = filtersAccordingToEmptyFilterExtendedByConjunctionSpecParam@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.358 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@50e43637 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@277ffb17, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.359 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.359 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.360 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.firstName like :param2 ) ) and ( ( ( generatedAlias0.lastName=:param3 ) or ( generatedAlias0.firstName=:param4 ) ) and ( generatedAlias0.gender=:param5 ) )
23:22:49.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[OR] Node: 'or'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'firstName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[AND] Node: 'and'
             +-[OR] Node: 'or'
             |  +-[EQ] Node: '='
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  |  \-[IDENT] Node: 'lastName'
             |  |  \-[COLON] Node: ':'
             |  |     \-[IDENT] Node: 'param3'
             |  \-[EQ] Node: '='
             |     +-[DOT] Node: '.'
             |     |  +-[IDENT] Node: 'generatedAlias0'
             |     |  \-[IDENT] Node: 'firstName'
             |     \-[COLON] Node: ':'
             |        \-[IDENT] Node: 'param4'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'gender'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param5'

23:22:49.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}
          \-[AND] SqlNode: 'and'
             +-[OR] SqlNode: 'or'
             |  +-[EQ] BinaryLogicOperatorNode: '='
             |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@a486851}
             |  \-[EQ] BinaryLogicOperatorNode: '='
             |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |     \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@a486851}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param5, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:49.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.firstName like :param2 ) ) and ( ( ( generatedAlias0.lastName=:param3 ) or ( generatedAlias0.firstName=:param4 ) ) and ( generatedAlias0.gender=:param5 ) )
23:22:49.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.first_name like ?) and (customer0_.first_name like ?) and (customer0_.last_name=? or customer0_.first_name=?) and customer0_.gender=?
23:22:49.369 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@50e43637 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@277ffb17, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.370 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@50e43637 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@70137569, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.370 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.370 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.372 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.380 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@50e43637 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@70137569, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@44946197 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest
23:22:49.381 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.381 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3f3cacde, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7f1d809e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7991877f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2c9d9931, org.springframework.test.context.support.DirtiesContextTestExecutionListener@761d8a20, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6517ed0d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@10c834af, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@50dc7396, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4a0abf27, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@10af5cee, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@41937f18, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7260f47f]
23:22:49.382 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@21580cf2 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest@51b9ee5e, testMethod = filtersAccordingToAnnotatedSpec@AnnotatedSpecInterfaceJoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@751fd568 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.383 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.383 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.384 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.392 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@21580cf2 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest@51b9ee5e, testMethod = filtersAccordingToAnnotatedSpec@AnnotatedSpecInterfaceJoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@751fd568 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest
23:22:49.393 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.393 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7589fc89, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2977084e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@111698ac, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@74aa4446, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4efd93ee, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5f59d707, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7aafe7b8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5c0104df, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ec19e52, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6f319f62, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6a26271b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3ed5e17c]
23:22:49.395 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@23fbc6b2 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@1ba44388, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.395 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.395 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.397 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 )
23:22:49.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gender'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:49.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 )
23:22:49.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? or customer0_.first_name like ?
23:22:49.406 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@23fbc6b2 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@1ba44388, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.407 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@23fbc6b2 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6242c07c, testMethod = filtersAccordingToInterfaceWithOrSpecExtendedBySpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.408 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.408 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.409 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.411 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:22:49.411 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gender'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:49.412 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.412 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:22:49.412 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.gender=? or customer0_.first_name like ?) and customer0_.last_name=?
23:22:49.417 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@23fbc6b2 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6242c07c, testMethod = filtersAccordingToInterfaceWithOrSpecExtendedBySpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.418 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@23fbc6b2 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@75d80b46, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.418 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.418 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.419 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.428 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@23fbc6b2 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@75d80b46, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.429 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@23fbc6b2 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@2348e36, testMethod = filtersAccordingToInterfaceWithOrSpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.429 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.429 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.431 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.436 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@23fbc6b2 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@2348e36, testMethod = filtersAccordingToInterfaceWithOrSpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.437 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@23fbc6b2 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@4d914933, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.438 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.438 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.439 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.447 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@23fbc6b2 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@4d914933, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7511928e testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest
23:22:49.449 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.449 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@12d89095, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7f3f5a67, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@731a83bd, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1007897, org.springframework.test.context.support.DirtiesContextTestExecutionListener@578a1c1a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@526388ee, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7543fe74, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7785e48b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@70685cad, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3e828eb6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@54d8774c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@ca160e0]
23:22:49.450 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@406287f2, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.451 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.451 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.452 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.456 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.weight in (50) ) and ( generatedAlias0.lastName=:param2 ) and ( generatedAlias0.firstName like :param3 )
23:22:49.457 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[AND] Node: 'and'
          |  |  |  +-[EQ] Node: '='
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  |  \-[IDENT] Node: 'gender'
          |  |  |  |  \-[COLON] Node: ':'
          |  |  |  |     \-[IDENT] Node: 'param0'
          |  |  |  \-[LIKE] Node: 'like'
          |  |  |     +-[DOT] Node: '.'
          |  |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |     |  \-[IDENT] Node: 'firstName'
          |  |  |     \-[COLON] Node: ':'
          |  |  |        \-[IDENT] Node: 'param1'
          |  |  \-[IN] Node: 'in'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'weight'
          |  |     \-[IN_LIST] Node: 'inList'
          |  |        \-[NUM_INT] Node: '50'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param3'

23:22:49.457 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[AND] SqlNode: 'and'
          |  |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}
          |  |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          |  |  \-[IN] InLogicOperatorNode: 'in'
          |  |     +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          |  |     \-[IN_LIST] SqlNode: 'inList'
          |  |        \-[NUM_INT] LiteralNode: '50'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.458 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.weight in (50) ) and ( generatedAlias0.lastName=:param2 ) and ( generatedAlias0.firstName like :param3 )
23:22:49.458 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? and (customer0_.first_name like ?) and (customer0_.weight in (50)) and customer0_.last_name=? and (customer0_.first_name like ?)
23:22:49.461 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@406287f2, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.462 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@33065b9c, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.463 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.463 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.464 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.468 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 ) and ( upper(generatedAlias0.firstName) like :param3 )
23:22:49.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'gender'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param3'

23:22:49.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 ) and ( upper(generatedAlias0.firstName) like :param3 )
23:22:49.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? and (customer0_.first_name like ?) and customer0_.last_name=? and (upper(customer0_.first_name) like ?)
23:22:49.473 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@33065b9c, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.474 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@717ca1ee, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.474 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.474 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.476 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.477 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.weight in (50) ) and ( generatedAlias0.lastName=:param2 ) and ( generatedAlias0.firstName like :param3 ) and ( generatedAlias0.occupation like :param4 )
23:22:49.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[AND] Node: 'and'
          |  |  |  +-[AND] Node: 'and'
          |  |  |  |  +-[EQ] Node: '='
          |  |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  |  |  \-[IDENT] Node: 'gender'
          |  |  |  |  |  \-[COLON] Node: ':'
          |  |  |  |  |     \-[IDENT] Node: 'param0'
          |  |  |  |  \-[LIKE] Node: 'like'
          |  |  |  |     +-[DOT] Node: '.'
          |  |  |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |     |  \-[IDENT] Node: 'firstName'
          |  |  |  |     \-[COLON] Node: ':'
          |  |  |  |        \-[IDENT] Node: 'param1'
          |  |  |  \-[IN] Node: 'in'
          |  |  |     +-[DOT] Node: '.'
          |  |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |     |  \-[IDENT] Node: 'weight'
          |  |  |     \-[IN_LIST] Node: 'inList'
          |  |  |        \-[NUM_INT] Node: '50'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'lastName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param2'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param3'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'occupation'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param4'

23:22:49.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[AND] SqlNode: 'and'
          |  |  |  +-[AND] SqlNode: 'and'
          |  |  |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}
          |  |  |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          |  |  |  \-[IN] InLogicOperatorNode: 'in'
          |  |  |     +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |     |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          |  |  |     \-[IN_LIST] SqlNode: 'inList'
          |  |  |        \-[NUM_INT] LiteralNode: '50'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@a486851}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.occupation' {propertyName=occupation,dereferenceType=PRIMITIVE,getPropertyPath=occupation,path=generatedAlias0.occupation,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'occupation' {originalText=occupation}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.weight in (50) ) and ( generatedAlias0.lastName=:param2 ) and ( generatedAlias0.firstName like :param3 ) and ( generatedAlias0.occupation like :param4 )
23:22:49.478 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? and (customer0_.first_name like ?) and (customer0_.weight in (50)) and customer0_.last_name=? and (customer0_.first_name like ?) and (customer0_.occupation like ?)
23:22:49.482 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@717ca1ee, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.483 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@6ea248fd, testMethod = filtersAccordingToInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.483 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.483 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.485 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.493 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@6ea248fd, testMethod = filtersAccordingToInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.494 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@10a4dc72, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.494 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.494 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.496 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:22:49.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gender'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:49.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:22:49.498 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? and (customer0_.first_name like ?) and customer0_.last_name=?
23:22:49.502 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@10a4dc72, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.503 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@6612d9aa, testMethod = filtersAccordingToInterfaceWithoutAnySpecAndBySpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.503 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.503 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.505 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.513 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@6612d9aa, testMethod = filtersAccordingToInterfaceWithoutAnySpecAndBySpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.513 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@11368ba6, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.514 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.514 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.515 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.524 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@11368ba6, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.524 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@2f6be5a1, testMethod = filtersAccordingToInterfaceWithAndSpecAndSpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.525 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.525 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.526 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.531 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3e65c397 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@2f6be5a1, testMethod = filtersAccordingToInterfaceWithAndSpecAndSpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@b889306 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.084 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest
23:22:49.533 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.533 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@23466a0f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e1e7aa2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@65ed2da6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@14a5bfd2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4a3b95b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@49251807, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@45a98c98, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7ccbf0d0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@65bbf773, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@43f3ee3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@dfbbfb0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2e9583af]
23:22:49.535 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5049c718 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@6943732d, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.535 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.535 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.536 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.540 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 )
23:22:49.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'gender'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:49.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@5c0d876c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 )
23:22:49.541 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=? or customer0_.first_name=?
23:22:49.546 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5049c718 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@6943732d, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.546 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5049c718 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@28da3eb1, testMethod = filtersAccordingToEmptyFilterExtendedByDisjunctionSpecParam@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.547 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.547 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.548 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.556 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5049c718 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@28da3eb1, testMethod = filtersAccordingToEmptyFilterExtendedByDisjunctionSpecParam@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.557 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5049c718 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@3b1b2335, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.557 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.557 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.559 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 ) ) and ( ( generatedAlias0.firstName like :param3 ) or ( generatedAlias0.firstName like :param4 ) )
23:22:49.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'lastName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'gender'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'firstName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param3'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param4'

23:22:49.564 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@5c0d876c}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@a486851}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.564 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 ) ) and ( ( generatedAlias0.firstName like :param3 ) or ( generatedAlias0.firstName like :param4 ) )
23:22:49.564 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name=? and customer0_.gender=? or customer0_.first_name=?) and (customer0_.first_name like ? or customer0_.first_name like ?)
23:22:49.567 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5049c718 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@3b1b2335, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.568 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5049c718 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@55b0d752, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.569 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.569 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.570 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.577 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5049c718 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@55b0d752, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@315bf7c1 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest
23:22:49.579 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.579 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@68be0478, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c3fc2b0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5cb13543, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@82d149e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@10a84c27, org.springframework.test.context.transaction.TransactionalTestExecutionListener@128026c0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@474e12fe, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@27a7676d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@753cceca, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6699408b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@51f76744, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4df7fe18]
23:22:49.580 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@5611dbb9, testMethod = filtersAccordingToFiltersInWholeInheritanceTree@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.581 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.581 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.582 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias0.gender in (:param0) ) and ( generatedAlias0.firstName in (:param1) ) ) and ( generatedAlias1.badgeType=:param2 ) and ( generatedAlias2.itemName=:param3 )
23:22:49.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[IN] Node: 'in'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'gender'
          |  |  |  \-[IN_LIST] Node: 'inList'
          |  |  |     \-[COLON] Node: ':'
          |  |  |        \-[IDENT] Node: 'param0'
          |  |  \-[IN] Node: 'in'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[IN_LIST] Node: 'inList'
          |  |        \-[COLON] Node: ':'
          |  |           \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias1'
          |     |  \-[IDENT] Node: 'badgeType'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'itemName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param3'

23:22:49.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[IN] InLogicOperatorNode: 'in'
          |  |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  |  \-[IN_LIST] SqlNode: 'inList'
          |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@5c0d876c}
          |  |  \-[IN] InLogicOperatorNode: 'in'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[IN_LIST] SqlNode: 'inList'
          |  |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias0.gender in (:param0) ) and ( generatedAlias0.firstName in (:param1) ) ) and ( generatedAlias1.badgeType=:param2 ) and ( generatedAlias2.itemName=:param3 )
23:22:49.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where (customer0_.gender in (?)) and (customer0_.first_name in (?)) and badges1_.badge_type=? and orders2_.item_name=?
23:22:49.591 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@5611dbb9, testMethod = filtersAccordingToFiltersInWholeInheritanceTree@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.592 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@412c1ad0, testMethod = doesNoFilteringIfParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.593 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.593 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.594 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.600 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@412c1ad0, testMethod = doesNoFilteringIfParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.601 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@325f3a06, testMethod = filtersAccordingToAnnotatedSimpleSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.602 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.602 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.603 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.611 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@325f3a06, testMethod = filtersAccordingToAnnotatedSimpleSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.612 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@483f70bf, testMethod = filtersAccordingToAnnotatedSimpleSpecInterfaceExtendedWithParamSpecificSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.612 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.612 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.614 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.615 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.firstName like :param1 )
23:22:49.615 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:49.616 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.616 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.firstName like :param1 )
23:22:49.616 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and (customer0_.first_name like ?)
23:22:49.619 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@483f70bf, testMethod = filtersAccordingToAnnotatedSimpleSpecInterfaceExtendedWithParamSpecificSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.620 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@294d2e39, testMethod = filtersAccordingToAnnotatedAndSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.621 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.621 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.622 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.626 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.gender=:param1 )
23:22:49.626 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:49.627 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@5c0d876c}

23:22:49.627 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.gender=:param1 )
23:22:49.627 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and customer0_.gender=?
23:22:49.652 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@294d2e39, testMethod = filtersAccordingToAnnotatedAndSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.652 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@7a0dd67c, testMethod = filtersAccordingToAnnotatedOrSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.653 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.653 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.654 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.663 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@7a0dd67c, testMethod = filtersAccordingToAnnotatedOrSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.664 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@19c9e237, testMethod = filtersAccordingInterfaceSpecIfParamSpecParameterIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.664 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.664 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.665 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.670 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@19c9e237, testMethod = filtersAccordingInterfaceSpecIfParamSpecParameterIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.671 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@6e997547, testMethod = doesNotFilterAtAllIfBothIfaceAndParamParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.671 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.671 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.673 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.679 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@6e997547, testMethod = doesNotFilterAtAllIfBothIfaceAndParamParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.680 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@49a5c387, testMethod = filtersByConjunctionOfAnnotatedInterfaceAndItsParentClass@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.680 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.680 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.681 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( ( generatedAlias0.firstName like :param1 ) or ( generatedAlias0.lastName like :param2 ) )
23:22:49.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gold'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'firstName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param1'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'lastName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param2'

23:22:49.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( ( generatedAlias0.firstName like :param1 ) or ( generatedAlias0.lastName like :param2 ) )
23:22:49.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (customer0_.first_name like ? or customer0_.last_name like ?)
23:22:49.690 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@49a5c387, testMethod = filtersByConjunctionOfAnnotatedInterfaceAndItsParentClass@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.691 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1f4cd72a, testMethod = filtersAccordingToParamSpecificSpecIfInterfaceSpecParamIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.691 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.691 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.693 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.697 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1f4cd72a, testMethod = filtersAccordingToParamSpecificSpecIfInterfaceSpecParamIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.698 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@3ea6cb23, testMethod = filtersAccordingToAnnotatedOrSpecInterfaceExtendedWithParamSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.698 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.698 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.700 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.705 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c810e2c testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@3ea6cb23, testMethod = filtersAccordingToAnnotatedOrSpecInterfaceExtendedWithParamSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ac965f testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.13 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest
23:22:49.707 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.707 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4110a187, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4226618c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@57ba1828, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e7215a3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@aaa9973, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7b71a3ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7c0d8fb5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@220c529a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7cb326a9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@a29be6f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1a49f8b8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a11f1e9]
23:22:49.708 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5b45bcae testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@145b7283, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.709 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.709 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.710 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.715 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( generatedAlias0.lastName=:param2 )
23:22:49.715 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[OR] Node: 'or'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias1'
          |  |     |  \-[IDENT] Node: 'badgeType'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[NUM_INT] Node: '1'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:49.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[NUM_INT] LiteralNode: '1'
          |     \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( generatedAlias0.lastName=:param2 )
23:22:49.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1 and customer0_.last_name=?
23:22:49.719 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5b45bcae testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@145b7283, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.720 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5b45bcae testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@206bb3fe, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.721 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.721 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.722 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) )
23:22:49.727 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '1'
          |  \-[NUM_INT] Node: '1'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias2'
             |  |  \-[IDENT] Node: 'itemName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param0'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias1'
                |  \-[IDENT] Node: 'badgeType'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param1'

23:22:49.727 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '1'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
                |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
                |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.727 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) )
23:22:49.727 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where 1=1 and (orders2_.item_name like ? or badges1_.badge_type=?)
23:22:49.731 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5b45bcae testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@206bb3fe, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.732 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5b45bcae testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@601f6fd5, testMethod = filtersAccordingToCustomJoinsFilterExtendingOtherJoinsFilter@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.732 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.733 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.734 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( 1=1 ) and ( generatedAlias2.itemName like :param1 ) and ( 1=1 )
23:22:49.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  |  \-[IDENT] Node: 'badgeType'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[NUM_INT] Node: '1'
          |  |     \-[NUM_INT] Node: '1'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'itemName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:22:49.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  |  |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[NUM_INT] LiteralNode: '1'
          |  |     \-[NUM_INT] LiteralNode: '1'
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:22:49.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( 1=1 ) and ( generatedAlias2.itemName like :param1 ) and ( 1=1 )
23:22:49.739 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where badges1_.badge_type=? and 1=1 and (orders2_.item_name like ?) and 1=1
23:22:49.743 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5b45bcae testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@601f6fd5, testMethod = filtersAccordingToCustomJoinsFilterExtendingOtherJoinsFilter@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.744 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5b45bcae testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@5d1f854f, testMethod = filtersAccordingToAnnotatedJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.744 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.744 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.746 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.747 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 )
23:22:49.747 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  \-[IDENT] Node: 'itemName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias1'
          |     |  \-[IDENT] Node: 'badgeType'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:22:49.748 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:22:49.748 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 )
23:22:49.748 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1
23:22:49.752 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5b45bcae testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@5d1f854f, testMethod = filtersAccordingToAnnotatedJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.753 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5b45bcae testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@77d252d6, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.753 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.753 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.755 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.759 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 left join generatedAlias0.badges as generatedAlias3 left join generatedAlias0.orders as generatedAlias4 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( ( generatedAlias4.itemName like :param2 ) or ( generatedAlias3.badgeType=:param3 ) ) and ( 1=1 )
23:22:49.759 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias2'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias3'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias4'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[OR] Node: 'or'
          |  |  |  +-[LIKE] Node: 'like'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  |  \-[COLON] Node: ':'
          |  |  |  |     \-[IDENT] Node: 'param0'
          |  |  |  \-[EQ] Node: '='
          |  |  |     +-[DOT] Node: '.'
          |  |  |     |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |     |  \-[IDENT] Node: 'badgeType'
          |  |  |     \-[COLON] Node: ':'
          |  |  |        \-[IDENT] Node: 'param1'
          |  |  \-[EQ] Node: '='
          |  |     +-[NUM_INT] Node: '1'
          |  |     \-[NUM_INT] Node: '1'
          |  \-[OR] Node: 'or'
          |     +-[LIKE] Node: 'like'
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias4'
          |     |  |  \-[IDENT] Node: 'itemName'
          |     |  \-[COLON] Node: ':'
          |     |     \-[IDENT] Node: 'param2'
          |     \-[EQ] Node: '='
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias3'
          |        |  \-[IDENT] Node: 'badgeType'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'param3'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:22:49.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=5, fromElements=5, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1, generatedAlias4, generatedAlias3], fromElementByTableAlias=[orders2_, badges1_, orders4_, badges3_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges3_ on customer0_.id=badges3_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges3_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders4_ on customer0_.id=orders4_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias4,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders4_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[OR] SqlNode: 'or'
          |  |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          |  |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |  |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[NUM_INT] LiteralNode: '1'
          |  |     \-[NUM_INT] LiteralNode: '1'
          |  \-[OR] SqlNode: 'or'
          |     +-[LIKE] BinaryLogicOperatorNode: 'like'
          |     |  +-[DOT] DotNode: 'orders4_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias4.itemName,tableAlias=orders4_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias4}
          |     |  |  +-[ALIAS_REF] IdentNode: 'orders4_.id' {alias=generatedAlias4, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders4_}
          |     |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}
          |     \-[EQ] BinaryLogicOperatorNode: '='
          |        +-[DOT] DotNode: 'badges3_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias3.badgeType,tableAlias=badges3_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias3}
          |        |  +-[ALIAS_REF] IdentNode: 'badges3_.id' {alias=generatedAlias3, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges3_}
          |        |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:22:49.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 left join generatedAlias0.badges as generatedAlias3 left join generatedAlias0.orders as generatedAlias4 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( ( generatedAlias4.itemName like :param2 ) or ( generatedAlias3.badgeType=:param3 ) ) and ( 1=1 )
23:22:49.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id left outer join badges badges3_ on customer0_.id=badges3_.customer_id left outer join orders orders4_ on customer0_.id=orders4_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1 and (orders4_.item_name like ? or badges3_.badge_type=?) and 1=1
23:22:49.765 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5b45bcae testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@77d252d6, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6cb862dc testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest
23:22:49.766 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.766 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1736262a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7252e063, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5edd0a7e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2c6f2bea, org.springframework.test.context.support.DirtiesContextTestExecutionListener@ace5f3b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6ffae7f9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@59428e82, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@c27de3b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@74e87f03, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4c159b48, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1ee3ad6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@338afad6]
23:22:49.767 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2de22551 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@4c59af34, testMethod = filtersAccordingToItemNameBadgeTypeFilter@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.768 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.768 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.769 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.774 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 )
23:22:49.774 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'badgeType'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'itemName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:49.775 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.775 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 )
23:22:49.775 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where badges1_.badge_type=? and orders2_.item_name=?
23:22:49.778 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2de22551 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@4c59af34, testMethod = filtersAccordingToItemNameBadgeTypeFilter@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.779 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2de22551 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@38980d25, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.780 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.780 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.781 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.788 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2de22551 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@38980d25, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.789 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2de22551 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@6522d28e, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.789 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.789 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.791 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.794 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 where generatedAlias1.badgeType=:param0
23:22:49.795 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'badgeType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.795 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@a486851}

23:22:49.795 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 where generatedAlias1.badgeType=:param0
23:22:49.795 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id where badges1_.badge_type=?
23:22:49.799 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2de22551 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@6522d28e, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.800 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2de22551 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@59ba2555, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.800 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.800 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.801 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.806 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2de22551 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@59ba2555, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.807 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2de22551 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@29a00cde, testMethod = filtersAccordingToAnnotatedJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.807 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.807 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.808 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.813 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2de22551 testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@29a00cde, testMethod = filtersAccordingToAnnotatedJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1eb84ea6 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec
Running net.kaczmarzyk.e2e.converter.DateE2eTest
23:22:49.814 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.815 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@78a724c3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@f51c595, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@41717985, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4ad1b8d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@45eda6e7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4411aea2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@e664af4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@627b59c6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4a0901f0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3a4d2ad, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3f2919c7, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a4c28d]
23:22:49.816 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c5aa9 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@5ec357e4, testMethod = findsByDateBeforeWithCustomDateFormat@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7b268b78 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.816 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.816 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.818 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.822 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c5aa9 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@5ec357e4, testMethod = findsByDateBeforeWithCustomDateFormat@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7b268b78 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.823 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c5aa9 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@6ff2d1d, testMethod = findsByDateBetween@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7b268b78 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.824 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.824 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.825 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.831 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c5aa9 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@6ff2d1d, testMethod = findsByDateBetween@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7b268b78 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.832 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4c5aa9 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@31861ef, testMethod = findsByDateAfter@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7b268b78 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.832 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.832 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.834 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.838 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4c5aa9 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@31861ef, testMethod = findsByDateAfter@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7b268b78 testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest
23:22:49.840 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.840 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@39df2130, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2a5eac38, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@ca97f0e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1084b6f7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5092d376, org.springframework.test.context.transaction.TransactionalTestExecutionListener@ff28a30, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@48e4d5cf, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7d62e12a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3bad9493, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@20953adc, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4eb1c9ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@24300ae1]
23:22:49.841 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@40724ccd, testMethod = findsByDateTimeAfterWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.842 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.842 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.843 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime>:param0
23:22:49.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@15a493c8}

23:22:49.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime>:param0
23:22:49.845 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time>?
23:22:49.853 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@40724ccd, testMethod = findsByDateTimeAfterWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.854 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@7d7337d0, testMethod = findsByDateTimeAfterWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.854 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.854 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.856 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.860 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@7d7337d0, testMethod = findsByDateTimeAfterWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.861 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@6fa9cf83, testMethod = findsByDateTimeBeforeWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.861 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.862 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.863 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.865 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime<:param0
23:22:49.865 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.865 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@15a493c8}

23:22:49.865 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime<:param0
23:22:49.865 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time<?
23:22:49.869 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@6fa9cf83, testMethod = findsByDateTimeBeforeWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.869 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@37d5d481, testMethod = findsByDateTimeBeforeWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.870 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.870 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.871 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.876 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@37d5d481, testMethod = findsByDateTimeBeforeWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.877 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@71accac1, testMethod = findsByDateTimeBetweenWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.877 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.877 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.879 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime between :param0 and :param1
23:22:49.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:49.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@15a493c8}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.LocalDateTimeType@15a493c8}

23:22:49.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime between :param0 and :param1
23:22:49.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time between ? and ?
23:22:49.884 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@71accac1, testMethod = findsByDateTimeBetweenWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.885 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@276decea, testMethod = findsByDateTimeBetweenWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.885 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.885 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.887 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.891 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@54118bbf testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@276decea, testMethod = findsByDateTimeBetweenWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@49ee30ca testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.051 sec
Running net.kaczmarzyk.e2e.converter.UUIDE2eTest
23:22:49.893 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.893 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@71d27cf4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@35a9e251, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7b17b5ba, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1d8cbdf, org.springframework.test.context.support.DirtiesContextTestExecutionListener@638f22cc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@19ceff86, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5fb23360, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@18f38d7a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@27045ea, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6caca8ed, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@224bbf2b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@26d76e45]
23:22:49.894 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@fb054f4 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@3957c807, testMethod = findsByUUIDEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f88de11 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.894 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.894 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.896 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.897 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode=:param0
23:22:49.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@1c9164f1}

23:22:49.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode=:param0
23:22:49.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code=?
23:22:49.902 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@fb054f4 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@3957c807, testMethod = findsByUUIDEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f88de11 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.903 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@fb054f4 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@7bbbb64c, testMethod = findByUUIDNotIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f88de11 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.904 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.904 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.905 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.907 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode not in (:param0, :param1)
23:22:49.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:49.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@1c9164f1}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.UUIDBinaryType@1c9164f1}

23:22:49.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode not in (:param0, :param1)
23:22:49.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code not in  (? , ?)
23:22:49.911 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@fb054f4 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@7bbbb64c, testMethod = findByUUIDNotIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f88de11 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.912 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@fb054f4 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@761b7425, testMethod = findsByUUIDNotEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f88de11 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.912 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.912 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.914 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.915 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode<>:param0
23:22:49.916 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.916 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@1c9164f1}

23:22:49.916 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode<>:param0
23:22:49.916 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code<>?
23:22:49.919 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@fb054f4 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@761b7425, testMethod = findsByUUIDNotEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f88de11 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.920 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@fb054f4 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@5b28c50b, testMethod = findByUUIDIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f88de11 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.921 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.921 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.923 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode in (:param0, :param1)
23:22:49.924 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:49.924 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@1c9164f1}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.UUIDBinaryType@1c9164f1}

23:22:49.924 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode in (:param0, :param1)
23:22:49.924 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code in (? , ?)
23:22:49.927 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@fb054f4 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@5b28c50b, testMethod = findByUUIDIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3f88de11 testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running net.kaczmarzyk.e2e.converter.LocalDateE2eTest
23:22:49.928 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.929 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33e159a5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8ecc81c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@876a3b3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@74be2d81, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4dab7ec2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@23e9f343, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1ebfb7b6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1be853c5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@da36314, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@613cfa08, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@25de39e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5b72fe6b]
23:22:49.930 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@4b6194b5, testMethod = findsByDateAfterWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.930 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.930 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.932 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.934 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>:param0
23:22:49.934 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.934 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@3c2654e}

23:22:49.934 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>:param0
23:22:49.934 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date>?
23:22:49.937 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@4b6194b5, testMethod = findsByDateAfterWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.938 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@3aa9fb3, testMethod = findsByDateBeforeWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.938 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.938 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.940 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.941 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate<:param0
23:22:49.942 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.942 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@3c2654e}

23:22:49.942 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate<:param0
23:22:49.942 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date<?
23:22:49.946 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@3aa9fb3, testMethod = findsByDateBeforeWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.947 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@60d7f351, testMethod = findsByDateBeforeWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.948 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.948 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.949 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.954 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@60d7f351, testMethod = findsByDateBeforeWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.955 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@185f9c7, testMethod = findsByDateAfterWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.955 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.955 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.957 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.961 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@185f9c7, testMethod = findsByDateAfterWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.962 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@103a0cf8, testMethod = findsByDateBetweenWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.963 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.963 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.964 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.966 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate between :param0 and :param1
23:22:49.966 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:49.966 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@3c2654e}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.LocalDateType@3c2654e}

23:22:49.967 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate between :param0 and :param1
23:22:49.967 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date between ? and ?
23:22:49.970 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@103a0cf8, testMethod = findsByDateBetweenWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.971 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@60c1370f, testMethod = findsByDateBetweenWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.971 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.971 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.977 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6494eb8e testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@60c1370f, testMethod = findsByDateBetweenWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5865251d testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.05 sec
Running net.kaczmarzyk.e2e.converter.InstantE2eTest
23:22:49.978 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:49.979 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1fa6f90f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4c47e5ec, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@40d67206, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7547fcc5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5d010de3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2e9afb2a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d2ffabd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@17449409, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@42ffed17, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b451dc9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@191df20e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2acad9f8]
23:22:49.980 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@5d76ccb3, testMethod = findsByInstantAfterWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.980 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.980 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.982 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:49.983 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant>:param0
23:22:49.984 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:49.984 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@55c7cbf2}

23:22:49.984 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant>:param0
23:22:49.984 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant>?
23:22:49.987 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@5d76ccb3, testMethod = findsByInstantAfterWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.988 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@6eea863f, testMethod = findsByInstantBetweenWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.989 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.989 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.990 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:49.992 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant between :param0 and :param1
23:22:49.992 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:49.992 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@55c7cbf2}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.InstantType@55c7cbf2}

23:22:49.992 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant between :param0 and :param1
23:22:49.992 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant between ? and ?
23:22:49.996 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@6eea863f, testMethod = findsByInstantBetweenWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:49.997 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@7c3ed6f1, testMethod = findsByInstantBetweenWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:49.997 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:49.997 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:49.998 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:50.003 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@7c3ed6f1, testMethod = findsByInstantBetweenWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.004 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@3d458cb8, testMethod = findsByInstantBeforeWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.004 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.004 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.006 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.007 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant<:param0
23:22:50.007 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:50.008 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@55c7cbf2}

23:22:50.008 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant<:param0
23:22:50.008 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant<?
23:22:50.012 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@3d458cb8, testMethod = findsByInstantBeforeWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.013 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@14aa3650, testMethod = findsByInstantBeforeWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.013 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.013 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.015 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.020 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@14aa3650, testMethod = findsByInstantBeforeWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.021 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@6ef57cba, testMethod = findsByInstantAfterWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.022 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.022 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.024 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.028 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@50929c4c testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@6ef57cba, testMethod = findsByInstantAfterWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5ff6744a testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.051 sec
Running net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest
23:22:50.030 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:50.030 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@192ac204, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4c5623b4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@39215bc9, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6034ef16, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2fc13bf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@52f7e639, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@613b10bd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@26b01fd3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@88e78, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6da3766e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@54242d9f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@72ccfe4f]
23:22:50.031 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@129d27b1, testMethod = findsByOffsetDateTimeAfterWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.032 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.032 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.033 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:50.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer>:param0
23:22:50.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:50.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@60617c46}

23:22:50.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer>:param0
23:22:50.035 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer>?
23:22:50.039 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@129d27b1, testMethod = findsByOffsetDateTimeAfterWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.039 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@76034fc0, testMethod = findsByOffsetDateTimeBeforeWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.040 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.040 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.041 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:50.043 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer<:param0
23:22:50.043 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:50.043 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@60617c46}

23:22:50.043 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer<:param0
23:22:50.043 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer<?
23:22:50.046 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@76034fc0, testMethod = findsByOffsetDateTimeBeforeWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.047 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@60bffecb, testMethod = findsByOffsetDateTimeBetweenWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.048 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.048 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.049 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:50.051 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer between :param0 and :param1
23:22:50.051 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:50.051 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@60617c46}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.OffsetDateTimeType@60617c46}

23:22:50.051 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer between :param0 and :param1
23:22:50.051 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer between ? and ?
23:22:50.055 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@60bffecb, testMethod = findsByOffsetDateTimeBetweenWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.055 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@12fd8c2d, testMethod = findsByOffsetDateTimeBetweenWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.056 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.056 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.057 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:50.062 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@12fd8c2d, testMethod = findsByOffsetDateTimeBetweenWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.063 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@6a9afc7f, testMethod = findsByOffsetDateTimeBeforeWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.063 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.063 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.065 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.069 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@6a9afc7f, testMethod = findsByOffsetDateTimeBeforeWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.070 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@4e94f258, testMethod = findsByOffsetDateTimeAfterWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.070 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.070 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.071 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:50.076 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7adea9d0 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@4e94f258, testMethod = findsByOffsetDateTimeAfterWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@933a839 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec
Running net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest
23:22:50.077 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:50.077 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7a8aa326, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6089c37c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@46c03fe4, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@37babe0e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1886b84c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@363a1a03, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@71422c3f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@13eab6d7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3e03283e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@588fd7ff, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@384c3b05, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7e566ed5]
23:22:50.186 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:22:50.200 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14ms. Found 3 repository interfaces.
23:22:50.234 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:50.260 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
23:22:50.261 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
23:22:50.272 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:22:50.286 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:22:50.335 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:22:50.335 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:22:50.437 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:22:50.441 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:22:50.496 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@36845587 testClass = ConverterWithConversionServiceE2eTest, testInstance = net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest@10c0cf8d, testMethod = findsByAddressUsing@ConverterWithConversionServiceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a238e5f testClass = ConverterWithConversionServiceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithConfiguredConversionService}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5ebc0bf5]; rollback [true]
23:22:50.497 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.497 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.499 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.501 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:22:50.501 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address=:param0
23:22:50.501 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'address'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:50.502 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.street' {propertyName=address,dereferenceType=COMPONENT,getPropertyPath=address,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'address' {originalText=address}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ComponentType@4063f07e}

23:22:50.502 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address=:param0
23:22:50.502 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street=?
23:22:50.508 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@36845587 testClass = ConverterWithConversionServiceE2eTest, testInstance = net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest@10c0cf8d, testMethod = findsByAddressUsing@ConverterWithConversionServiceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a238e5f testClass = ConverterWithConversionServiceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithConfiguredConversionService}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.438 sec
Running net.kaczmarzyk.AndE2eTest
23:22:50.509 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:50.509 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3b7bb63d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e5e2f13, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3b28cc2b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@502d9495, org.springframework.test.context.support.DirtiesContextTestExecutionListener@36010af3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@79688d97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4dc4f05, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3869fa37, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@681395b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b381829, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5d7adc2c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2ab53df6]
23:22:50.511 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7f72f7cb testClass = AndE2eTest, testInstance = net.kaczmarzyk.AndE2eTest@3838b2af, testMethod = findsByGoldenCusomersByLastName@AndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@758a41b0 testClass = AndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.511 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.511 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.513 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.514 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 )
23:22:50.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gold'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:50.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}

23:22:50.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 )
23:22:50.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (upper(customer0_.last_name) like ?)
23:22:50.519 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7f72f7cb testClass = AndE2eTest, testInstance = net.kaczmarzyk.AndE2eTest@3838b2af, testMethod = findsByGoldenCusomersByLastName@AndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@758a41b0 testClass = AndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running net.kaczmarzyk.utils.LoggedQueryTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.MultiLevelFetchJoinE2eTest
23:22:50.521 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:50.521 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@f927ead, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@f27e7d2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f832a1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@77ebd2ca, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6b90ad8c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5bb9ce5b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1f1092b7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@36447e1d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@58565994, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4d088fd3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@569639ef, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@43b701b6]
23:22:50.523 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@568c3513 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@5d3d0e88, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@510a6317 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.524 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.524 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.525 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:50.543 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 left join fetch generatedAlias1.note as generatedAlias3 where 1=1 order by generatedAlias0.id asc
23:22:50.543 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
    |  |  |  |  \-[IDENT] Node: 'tags'
    |  |  |  \-[ALIAS] Node: 'generatedAlias2'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias3'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:50.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ordernote4_.id as id1_6_3_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote4_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    |  \-[SQL_TOKEN] SqlFragment: 'ordernote4_.customer_id as customer3_6_3_, ordernote4_.title as title2_6_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=4, fromElements=4, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1, generatedAlias3], fromElementByTableAlias=[orders1_, ordernote4_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        +-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote4_ on orders1_.note_id=ordernote4_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote4_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:50.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 left join fetch generatedAlias1.note as generatedAlias3 where 1=1 order by generatedAlias0.id asc
23:22:50.544 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, ordernote4_.id as id1_6_3_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__, ordernote4_.customer_id as customer3_6_3_, ordernote4_.title as title2_6_3_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id left outer join order_note ordernote4_ on orders1_.note_id=ordernote4_.id where 1=1 order by customer0_.id asc
23:22:50.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.ItemTag as generatedAlias0
23:22:50.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'net'
       |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'ItemTag'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:22:50.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'itemtag0_.id as id1_2_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag0_}
    |  \-[SQL_TOKEN] SqlFragment: 'itemtag0_.name as name2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[itemtag0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'item_tags itemtag0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=item_tags,tableAlias=itemtag0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}

23:22:50.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.ItemTag as generatedAlias0
23:22:50.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select itemtag0_.id as id1_2_, itemtag0_.name as name2_2_ from item_tags itemtag0_
23:22:50.570 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@568c3513 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@5d3d0e88, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@510a6317 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.571 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@568c3513 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@180b2f0, testMethod = shouldFindCustomersUsingInnerFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@510a6317 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.571 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.571 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.573 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:50.576 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:50.577 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:50.577 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:50.577 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:22:50.591 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@568c3513 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@180b2f0, testMethod = shouldFindCustomersUsingInnerFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@510a6317 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.591 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@568c3513 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@326b9b05, testMethod = shouldFindCustomersUsingLeftFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@510a6317 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.592 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.592 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.593 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:50.611 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@568c3513 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@326b9b05, testMethod = shouldFindCustomersUsingLeftFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@510a6317 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.612 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@568c3513 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@45ce4734, testMethod = shouldFindAllCustomersWithoutUsingJoinFetches@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@510a6317 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.612 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.612 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.614 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.628 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@568c3513 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@45ce4734, testMethod = shouldFindAllCustomersWithoutUsingJoinFetches@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@510a6317 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.629 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@568c3513 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@4b4ff495, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes_withPagination@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@510a6317 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.629 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.629 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.631 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.633 [main] WARN  o.h.h.i.ast.QueryTranslatorImpl - HHH000104: firstResult/maxResults specified with collection fetch; applying in memory!
23:22:50.635 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 1=1
23:22:50.635 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:22:50.635 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:22:50.635 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 1=1
23:22:50.635 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ where 1=1
23:22:50.645 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@568c3513 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@4b4ff495, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes_withPagination@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@510a6317 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.125 sec
Running net.kaczmarzyk.DisjunctionE2eTest
23:22:50.646 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:50.647 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@79fce437, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@30a794c2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4f60df4a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3b839b10, org.springframework.test.context.support.DirtiesContextTestExecutionListener@25401d0b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@29cd9ce5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@601e9c19, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4762c011, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@62ef35b3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2700b7bf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@33ea1912, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@62593536]
23:22:50.648 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6c49862e testClass = DisjunctionE2eTest, testInstance = net.kaczmarzyk.DisjunctionE2eTest@4e296a27, testMethod = findsByLastNameOrGoldenByFirstName@DisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@261b4fa testClass = DisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.648 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.648 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.650 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.651 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 ) ) or ( upper(generatedAlias0.firstName) like :param2 )
23:22:50.652 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gold'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'upper'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[DOT] Node: '.'
          |     |        +-[IDENT] Node: 'generatedAlias0'
          |     |        \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:50.652 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@33a7a5ca}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@a486851}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@a486851}

23:22:50.652 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 ) ) or ( upper(generatedAlias0.firstName) like :param2 )
23:22:50.652 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (upper(customer0_.last_name) like ?) or upper(customer0_.first_name) like ?
23:22:50.656 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6c49862e testClass = DisjunctionE2eTest, testInstance = net.kaczmarzyk.DisjunctionE2eTest@4e296a27, testMethod = findsByLastNameOrGoldenByFirstName@DisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@261b4fa testClass = DisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.DateInclusiveE2eTest
23:22:50.660 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:50.660 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@9e1674a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a68ccf3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7ad1ece9, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@65e4088f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67bde84e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4b1eaf1e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3e5db430, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7bb87304, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@734f0ba5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4d972c8d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1e38ed3b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@26209dab]
23:22:50.662 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@22d97dc6 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@42477794, testMethod = findsByDateBeforeWithCustomDateFormat@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b0437f9 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.663 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.663 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.664 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:50.671 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@22d97dc6 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@42477794, testMethod = findsByDateBeforeWithCustomDateFormat@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b0437f9 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.672 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@22d97dc6 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@2493c3b0, testMethod = findsByDateBetween@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b0437f9 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.672 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.672 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.676 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:22:50.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate<=:param0 ) and ( generatedAlias0.registrationDate>=:param1 )
23:22:50.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LE] Node: '<='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'registrationDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:50.682 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LE] BinaryLogicOperatorNode: '<='
          |  +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@17da6e45}
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@17da6e45}

23:22:50.683 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate<=:param0 ) and ( generatedAlias0.registrationDate>=:param1 )
23:22:50.683 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<=? and customer0_.registration_date>=?
23:22:50.689 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@22d97dc6 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@2493c3b0, testMethod = findsByDateBetween@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b0437f9 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:50.690 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@22d97dc6 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@6f568b26, testMethod = findsByDateAfter@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b0437f9 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.690 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.690 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.692 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:50.696 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@22d97dc6 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@6f568b26, testMethod = findsByDateAfter@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b0437f9 testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 sec
Running net.kaczmarzyk.IsNullE2eTest
23:22:50.698 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:50.698 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@65dad7aa, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@bc4bb61, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1a00c980, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2b7cdc47, org.springframework.test.context.support.DirtiesContextTestExecutionListener@18a83905, org.springframework.test.context.transaction.TransactionalTestExecutionListener@361986c2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2ac90548, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@679a6ab2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3e231755, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@44f6b9c5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@26f71756, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@128c36c0]
23:22:50.700 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@28604874 testClass = IsNullE2eTest, testInstance = net.kaczmarzyk.IsNullE2eTest@46ca7c9, testMethod = findsEntitiesWithNullAttributeValue@IsNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@14ebd598 testClass = IsNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b697993]; rollback [true]
23:22:50.701 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:50.701 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:50.702 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:50.707 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@28604874 testClass = IsNullE2eTest, testInstance = net.kaczmarzyk.IsNullE2eTest@46ca7c9, testMethod = findsEntitiesWithNullAttributeValue@IsNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@14ebd598 testClass = IsNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
23:22:50.720 [Thread-3] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:22:50.724 [Thread-5] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:22:50.725 [Thread-1] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:22:50.725 [Thread-1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] as said MBean is not registered (perhaps already unregistered by an external process)
23:22:50.726 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:22:50.727 [Thread-5] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:22:50.728 [Thread-1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:22:50.728 [Thread-1] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:22:50.731 [Thread-3] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
javax.management.InstanceNotFoundException: com.zaxxer.hikari:name=dataSource,type=HikariDataSource
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1083)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:423)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:411)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.springframework.jmx.support.MBeanRegistrationSupport.doUnregister(MBeanRegistrationSupport.java:205)
	at org.springframework.jmx.support.MBeanRegistrationSupport.unregisterBeans(MBeanRegistrationSupport.java:187)
	at org.springframework.jmx.export.MBeanExporter.destroy(MBeanExporter.java:453)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1052)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1059)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1035)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1011)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:931)
23:22:50.733 [Thread-3] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:22:50.733 [Thread-3] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:22:50.752 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
23:22:50.752 [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
23:22:50.752 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
23:22:50.769 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
23:22:50.770 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
23:22:50.779 [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.

Results :

Tests run: 627, Failures: 0, Errors: 0, Skipped: 2

[INFO] 
[INFO] --- maven-license-plugin:1.10.b1:check (default) @ specification-arg-resolver ---
[INFO] Checking licenses...
[WARNING] Property 'strictCheck' is not enabled. Please consider adding <strictCheck>true</strictCheck> in your pom.xml file.
[WARNING] See http://code.google.com/p/maven-license-plugin/wiki/Configuration for more information.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  11.820 s
[INFO] Finished at: 2021-02-14T23:22:50Z
[INFO] ------------------------------------------------------------------------
