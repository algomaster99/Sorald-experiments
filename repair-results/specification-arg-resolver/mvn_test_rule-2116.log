[INFO] Scanning for projects...
[INFO] 
[INFO] -------------< net.kaczmarzyk:specification-arg-resolver >--------------
[INFO] Building specification-arg-resolver 2.6.3-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ specification-arg-resolver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /workdir/specification-arg-resolver/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ specification-arg-resolver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ specification-arg-resolver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ specification-arg-resolver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ specification-arg-resolver ---
[INFO] Surefire report directory: /workdir/specification-arg-resolver/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running net.kaczmarzyk.MultiLevelJoinE2eTest
23:21:51.505 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:51.527 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57a3e26a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75c56eb9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4bc222e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2dc9b0f5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6531a794, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b5fad2d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5e17553a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3eb91815, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@56dc1551, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@102cec62, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@74f6c5d8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@27912e3]
23:21:52.540 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:21:52.611 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65ms. Found 3 repository interfaces.
23:21:53.019 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:21:53.201 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
23:21:53.344 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
23:21:53.416 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:21:53.461 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.3.7.Final}
23:21:53.462 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
23:21:53.496 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
23:21:53.618 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:21:53.867 [main] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
23:21:54.218 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:21:54.220 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:21:55.162 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:21:55.201 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:21:55.435 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5481f204 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@171b0d3, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks_withPagination@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63d43a5 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:55.441 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:55.441 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:55.451 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 10 ms
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils (file:/home/maven/.m2/repository/org/springframework/spring-core/5.1.4.RELEASE/spring-core-5.1.4.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of org.springframework.cglib.core.ReflectUtils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
23:21:55.570 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:21:55.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 ) order by generatedAlias0.id asc
23:21:55.598 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[NE] Node: '<>'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias2'
    |        |  \-[IDENT] Node: 'name'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:55.632 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[NE] BinaryLogicOperatorNode: '<>'
    |        +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |        |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |        |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:55.637 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 ) order by generatedAlias0.id asc
23:21:55.637 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name<>? order by customer0_.id asc
23:21:55.685 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 )
23:21:55.686 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '1'
          |  \-[NUM_INT] Node: '1'
          \-[NE] Node: '<>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:55.688 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '1'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[NE] BinaryLogicOperatorNode: '<>'
             +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:55.689 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name<>:param0 )
23:21:55.689 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name<>?
23:21:55.781 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5481f204 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@171b0d3, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks_withPagination@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63d43a5 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:55.784 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5481f204 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@130a99fe, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63d43a5 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:55.785 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:55.785 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:55.787 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:55.814 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5481f204 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@130a99fe, testMethod = shouldFindCustomersWithOrderedItemTaggedDifferentlyThanSnacks@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63d43a5 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:55.816 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5481f204 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@3db48e6, testMethod = shouldFindCustomersUsingMultilevelJoin@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63d43a5 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:55.817 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:55.817 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:55.819 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:55.827 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name=:param0 ) order by generatedAlias0.id asc
23:21:55.828 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias2'
    |        |  \-[IDENT] Node: 'name'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:55.830 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |        |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |        |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:55.830 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias1.tags as generatedAlias2 where ( 1=1 ) and ( generatedAlias2.name=:param0 ) order by generatedAlias0.id asc
23:21:55.830 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 and itemtag3_.name=? order by customer0_.id asc
23:21:55.847 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5481f204 testClass = MultiLevelJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelJoinE2eTest@3db48e6, testMethod = shouldFindCustomersUsingMultilevelJoin@MultiLevelJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@63d43a5 testClass = MultiLevelJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.621 sec
Running net.kaczmarzyk.NotInE2eTest
23:21:55.850 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:55.850 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57e83608, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@57d8d8e2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f726cf4, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@514eefc4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4700db93, org.springframework.test.context.transaction.TransactionalTestExecutionListener@560e1459, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6aa7d7a0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4c3125ff, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@d2ca3a9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2b26d289, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7f680a9a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3a33d655]
23:21:55.854 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@6ccd3cf1, testMethod = findsByListOfNotAllowedEnumValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:55.854 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:55.855 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:55.857 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:55.866 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0)
23:21:55.867 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:55.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:55.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0)
23:21:55.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender not in  (?)
23:21:55.933 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@6ccd3cf1, testMethod = findsByListOfNotAllowedEnumValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:55.937 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@17c3e33, testMethod = findsByListOfNotAllowedLongValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:55.938 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:55.938 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:55.940 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:55.946 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (78L, 93L, 86L, 99L)
23:21:55.947 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '78L'
             +-[NUM_LONG] Node: '93L'
             +-[NUM_LONG] Node: '86L'
             \-[NUM_LONG] Node: '99L'

23:21:55.948 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '78'
             +-[NUM_LONG] LiteralNode: '93'
             +-[NUM_LONG] LiteralNode: '86'
             \-[NUM_LONG] LiteralNode: '99'

23:21:55.949 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (78L, 93L, 86L, 99L)
23:21:55.949 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (78 , 93 , 86 , 99)
23:21:55.963 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@17c3e33, testMethod = findsByListOfNotAllowedLongValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:55.965 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@326320bb, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:55.966 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:55.966 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:55.973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
23:21:55.985 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (101L)
23:21:55.986 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[NUM_LONG] Node: '101L'

23:21:55.988 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NUM_LONG] LiteralNode: '101'

23:21:55.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (101L)
23:21:55.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (101)
23:21:56.005 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@326320bb, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.014 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@35fea0cd, testMethod = findsByListOfNotAllowedStringValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:56.016 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.016 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.018 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.028 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not in (:param0, :param1)
23:21:56.028 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:56.029 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:21:56.029 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not in (:param0, :param1)
23:21:56.030 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name not in  (? , ?)
23:21:56.042 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@35fea0cd, testMethod = findsByListOfNotAllowedStringValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.045 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@53cdfb09, testMethod = findsByListOfNotAllowedStringValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:56.045 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.045 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.047 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:56.067 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@53cdfb09, testMethod = findsByListOfNotAllowedStringValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.074 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1227ea21, testMethod = findsByListOfNotAllowedEnumValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:56.075 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.075 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.077 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.094 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@1227ea21, testMethod = findsByListOfNotAllowedEnumValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.095 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@77035caa, testMethod = findsByListOfNotAllowedDateValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:56.096 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.096 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.098 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.105 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0, :param1)
23:21:56.105 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:56.106 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:56.107 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0, :param1)
23:21:56.107 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date not in  (? , ?)
23:21:56.119 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@77035caa, testMethod = findsByListOfNotAllowedDateValues@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.121 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@54bf2319, testMethod = findsByListOfNotAllowedDateValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:56.121 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.121 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.123 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.139 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@54bf2319, testMethod = findsByListOfNotAllowedDateValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.141 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@7b50e70a, testMethod = findsByListOfNotAllowedLongValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:56.141 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.141 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.143 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.148 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (239L, 254L, 247L, 260L)
23:21:56.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '239L'
             +-[NUM_LONG] Node: '254L'
             +-[NUM_LONG] Node: '247L'
             \-[NUM_LONG] Node: '260L'

23:21:56.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '239'
             +-[NUM_LONG] LiteralNode: '254'
             +-[NUM_LONG] LiteralNode: '247'
             \-[NUM_LONG] LiteralNode: '260'

23:21:56.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (239L, 254L, 247L, 260L)
23:21:56.150 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (239 , 254 , 247 , 260)
23:21:56.160 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1efa258e testClass = NotInE2eTest, testInstance = net.kaczmarzyk.NotInE2eTest@7b50e70a, testMethod = findsByListOfNotAllowedLongValuesUsingParamSeparator@NotInE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c9235c0 testClass = NotInE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.301 sec
Running net.kaczmarzyk.ConstSpELValE2eTest
23:21:56.164 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:56.165 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5fc82de5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@65208c91, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4d71476c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@125447a0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@cede70a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6dc8a602, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2a45c6f0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1a9cfd5f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@792a9cb1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@51fadd20, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@550ce3a9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@28878a52]
23:21:56.331 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:21:56.351 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 3 repository interfaces.
23:21:56.399 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:21:56.431 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
23:21:56.431 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
23:21:56.445 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:21:56.464 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:21:56.544 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:21:56.545 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:21:56.689 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:21:56.695 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:21:56.766 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@52ebacbf, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:56.767 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.768 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.770 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.797 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:21:56.797 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:56.798 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:56.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:56.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:56.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=?
23:21:56.810 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@52ebacbf, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.812 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@401b7109, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:56.812 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.812 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.814 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.837 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@401b7109, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.839 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@6212dc7d, testMethod = filtersBySingleSpecWithoutParamUsingRawStringConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:56.839 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.839 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.841 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.858 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@6212dc7d, testMethod = filtersBySingleSpecWithoutParamUsingRawStringConstValue@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.862 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@5ace5b0e, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithTemporalConstructor@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:56.867 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.867 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.870 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:21:56.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>=:param0
23:21:56.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:56.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@1ac32da1}

23:21:56.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>=:param0
23:21:56.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date>=?
23:21:56.888 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@5ace5b0e, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpELWithTemporalConstructor@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.889 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@79d31e24, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpEL@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:56.890 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.890 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.892 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.908 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@79d31e24, testMethod = filtersBySingleSpecWithoutParamUsingConstValInSpEL@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.909 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@16441c13, testMethod = filtersBySingleSpecWithoutParamUsingConstValWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:56.910 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.910 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.912 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.922 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3b256d50 testClass = ConstSpELValE2eTest, testInstance = net.kaczmarzyk.ConstSpELValE2eTest@16441c13, testMethod = filtersBySingleSpecWithoutParamUsingConstValWithPropertyPlaceholder@ConstSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@aad7ade testClass = ConstSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.761 sec
Running net.kaczmarzyk.DefaultValE2eTest
23:21:56.926 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:56.926 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c475547, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@36dab184, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@71b9b035, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7669d7a2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@724945, org.springframework.test.context.transaction.TransactionalTestExecutionListener@63c78e5e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5fc3b20b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@67afba96, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7505ef47, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2a6f3ac7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@68fe866b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@729feae8]
23:21:56.929 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cde3dac testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@4460edf, testMethod = filtersBySingleSpecWithSingleDefaultVal@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4a48fe63 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:56.929 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.930 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.931 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:56.939 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:56.939 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:56.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:56.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:56.940 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=?
23:21:56.949 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cde3dac testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@4460edf, testMethod = filtersBySingleSpecWithSingleDefaultVal@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4a48fe63 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.951 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cde3dac testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@1215982f, testMethod = filtersBySingleSpecWithoutParam@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4a48fe63 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:56.952 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.952 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.954 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:56.967 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cde3dac testClass = DefaultValE2eTest, testInstance = net.kaczmarzyk.DefaultValE2eTest@1215982f, testMethod = filtersBySingleSpecWithoutParam@DefaultValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4a48fe63 testClass = DefaultValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 sec
Running net.kaczmarzyk.InE2eTest
23:21:56.970 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:56.970 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@e182453, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2d7bfb13, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7ae736a8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7b3b763d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@34ceefb5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@461f295c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@50e0541, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@25a41143, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6654e105, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@59be715a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2cef4321, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@29c471f6]
23:21:56.973 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@19abe8f7, testMethod = findsByListOfAllowedLongValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:56.974 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.974 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.976 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:56.984 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (107L, 122L)
23:21:56.985 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '107L'
             \-[NUM_LONG] Node: '122L'

23:21:56.986 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '107'
             \-[NUM_LONG] LiteralNode: '122'

23:21:56.986 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (107L, 122L)
23:21:56.986 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (107 , 122)
23:21:56.995 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@19abe8f7, testMethod = findsByListOfAllowedLongValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:56.997 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@649a76c1, testMethod = findsByListOfAllowedDateValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:56.998 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:56.998 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:56.999 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:57.004 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0, :param1)
23:21:57.004 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:57.005 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:57.005 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0, :param1)
23:21:57.005 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date in (? , ?)
23:21:57.013 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@649a76c1, testMethod = findsByListOfAllowedDateValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.014 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@354d5692, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathNameWithoutUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.015 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.015 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.017 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.021 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2)
23:21:57.021 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param1'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:21:57.022 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}

23:21:57.022 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2)
23:21:57.022 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ? , ?)
23:21:57.030 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@354d5692, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathNameWithoutUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.031 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2769d577, testMethod = findsByListOfAllowedStringValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.032 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.032 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.034 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.038 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2, :param3, :param4)
23:21:57.038 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param1'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param2'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param3'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param4'

23:21:57.039 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}
             +-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@52539624}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@52539624}

23:21:57.040 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1, :param2, :param3, :param4)
23:21:57.040 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ? , ? , ? , ?)
23:21:57.048 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2769d577, testMethod = findsByListOfAllowedStringValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.050 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@359ae83a, testMethod = findsByListOfAllowedLongValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.050 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.050 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.052 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (199L, 214L)
23:21:57.056 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '199L'
             \-[NUM_LONG] Node: '214L'

23:21:57.057 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '199'
             \-[NUM_LONG] LiteralNode: '214'

23:21:57.057 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (199L, 214L)
23:21:57.057 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (199 , 214)
23:21:57.065 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@359ae83a, testMethod = findsByListOfAllowedLongValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.066 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@3c9e06d7, testMethod = findsByListOfAllowedDateValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.067 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.067 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.069 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.079 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@3c9e06d7, testMethod = findsByListOfAllowedDateValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.080 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@1e1c1634, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.081 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.081 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.082 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:57.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (245L)
23:21:57.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             \-[NUM_LONG] Node: '245L'

23:21:57.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NUM_LONG] LiteralNode: '245'

23:21:57.087 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (245L)
23:21:57.087 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (245)
23:21:57.093 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@1e1c1634, testMethod = ignoresUnparseableIntsWhenFilteringOnIntProperty@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.095 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@7a696a6b, testMethod = findsByListOfAllowedStringValuesUsingParamSeparatorAndWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.096 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.096 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.097 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:57.108 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@7a696a6b, testMethod = findsByListOfAllowedStringValuesUsingParamSeparatorAndWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.110 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@39482f2b, testMethod = findsByListOfAllowedStringValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.110 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.110 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.112 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.115 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1)
23:21:57.115 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:57.116 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:21:57.116 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName in (:param0, :param1)
23:21:57.116 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name in (? , ?)
23:21:57.123 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@39482f2b, testMethod = findsByListOfAllowedStringValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.125 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2d95c3ef, testMethod = findsByListOfAllowedEnumValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.125 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.126 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.127 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:57.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0, :param1)
23:21:57.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:57.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:57.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0, :param1)
23:21:57.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in (? , ?)
23:21:57.140 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2d95c3ef, testMethod = findsByListOfAllowedEnumValuesUsingParamSeparator@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.142 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2522bea6, testMethod = findsByListOfAllowedEnumValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.142 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.142 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.144 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.155 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@2522bea6, testMethod = findsByListOfAllowedEnumValues@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.157 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@16433d56, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.157 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.159 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.168 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@237e61ac testClass = InE2eTest, testInstance = net.kaczmarzyk.InE2eTest@16433d56, testMethod = findsByListOfAllowedStringValuesUsingWebParameterNameTheSameAsPathName@InE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6f36c42 testClass = InE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.201 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedRepeatedJoinSpecInterfaceArgumentResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running net.kaczmarzyk.spring.data.jpa.web.WebRequestProcessingContextTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedSpecInterfaceArgumentResolverTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
Running net.kaczmarzyk.spring.data.jpa.web.OrSpecificationResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinsSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedAndSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.RepeatedJoinResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedConjunctionSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.DisjunctionSpecificationResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running net.kaczmarzyk.spring.data.jpa.web.WebRequestProcessingContextPathVariableResolverTest
Tests run: 40, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverSpecConstructorTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest
23:21:57.356 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:57.356 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6472dd0c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a2c62ca, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1c247e5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2a87d40f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@586fe6ee, org.springframework.test.context.transaction.TransactionalTestExecutionListener@51dcf51b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6eb58fdd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7a0619a8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5df9d890, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6b3b9a19, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@29b23bc4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6333ac03]
23:21:57.359 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@5a8a50b8, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveDefaultValueWithInvalidSpELSyntax@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:57.360 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.360 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.362 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.368 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@5a8a50b8, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveDefaultValueWithInvalidSpELSyntax@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.369 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@66626c96, testMethod = returnsSpecificationWithRawDefaultValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:57.370 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.370 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.372 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.374 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@66626c96, testMethod = returnsSpecificationWithRawDefaultValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.375 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7d710482, testMethod = returnsSpecificationWithDefaultValueInSpEL@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:57.376 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.376 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.383 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
23:21:57.385 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@7d710482, testMethod = returnsSpecificationWithDefaultValueInSpEL@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.387 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@57e15f2d, testMethod = returnsSpecificationWithDefaultValue@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:57.388 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.388 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.390 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.391 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6e0d619b testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverDefaultValueIntegrationTest@57e15f2d, testMethod = returnsSpecificationWithDefaultValue@SimpleSpecificationResolverDefaultValueIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e7026b9 testClass = SimpleSpecificationResolverDefaultValueIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverPathVariablesTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest
23:21:57.395 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:57.396 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@24f3d208, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7531ba53, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@72da5f0e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f0170e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3829e6ca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@403230be, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@60b03599, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@627a06e6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1592a3d5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@44f4c619, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@25892fe3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@17765082]
23:21:57.397 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@32142479, testMethod = returnsSpecificationWithConstValue@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:57.398 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.398 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.400 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.402 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@32142479, testMethod = returnsSpecificationWithConstValue@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.403 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@351aa7f, testMethod = returnsSpecificationWithConstValueInSpEL@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:57.404 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.404 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.406 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.409 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@351aa7f, testMethod = returnsSpecificationWithConstValueInSpEL@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.410 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@1c419713, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveConstValueWithInvalidSpELSyntax@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:57.411 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.411 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.413 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.415 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@1c419713, testMethod = throwsIllegalArgumentExceptionWhenTryingToResolveConstValueWithInvalidSpELSyntax@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.416 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@1972346b, testMethod = returnsSpecificationWithRawConstValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:21:57.417 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.417 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.419 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.420 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7064ae69 testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testInstance = net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverConstValueSpELSupportIntegrationTest@1972346b, testMethod = returnsSpecificationWithRawConstValueIfValueInSpELAttributeIsSetToFalse@SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7aece85c testClass = SimpleSpecificationResolverConstValueSpELSupportIntegrationTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running net.kaczmarzyk.spring.data.jpa.web.SpecificationArgumentResolverTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverOnTypeMismatchTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.web.AndSpecificationResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running net.kaczmarzyk.spring.data.jpa.web.ConjunctionSpecificationResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.JoinSpecificationResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedDisjunctionSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedRepeatedJoinFetchSpecInterfaceArgumentResolverTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedJoinFetchSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedOrSpecInterfaceArgumentResolverTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running net.kaczmarzyk.spring.data.jpa.web.AnnotatedSpecInterfaceWithComplexInheritanceTreeTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running net.kaczmarzyk.spring.data.jpa.web.SimpleSpecificationResolverTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.spring.data.jpa.web.RepeatedJoinFetchResolverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.ConverterFallbackMechanismTest
Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.utils.TypeUtilTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.PathVariableResolverTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.ConverterTest
Tests run: 24, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToLocalDateConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToLocalDateTimeConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToInstantConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.utils.converter.StringToOffsetDateTimeConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running net.kaczmarzyk.spring.data.jpa.utils.JoinPathUtilsTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest
23:21:57.538 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:57.538 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5e5d41dc, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@87f4794, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@78a894fe, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@146b3bc7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@200cdb37, org.springframework.test.context.transaction.TransactionalTestExecutionListener@523d6b45, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6e8e1a98, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@23f6a18d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@65e503a7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5cbb2b1d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@42ffa0c8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54139bd3]
23:21:57.540 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@16c2c396, testMethod = rejectsInvalidNumberOfArguments@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.541 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.541 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.544 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:21:57.546 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@16c2c396, testMethod = rejectsInvalidNumberOfArguments@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.547 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@64d19dad, testMethod = rejectsMissingArgument@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.548 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.548 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.550 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.552 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@64d19dad, testMethod = rejectsMissingArgument@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.553 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@23595dd9, testMethod = filtersByNestedProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.554 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.554 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.556 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.557 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street not like :param0
23:21:57.558 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:57.558 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:57.559 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street not like :param0
23:21:57.559 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street not like ?
23:21:57.562 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@23595dd9, testMethod = filtersByNestedProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.563 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@d3f2b59, testMethod = filtersByFirstLevelProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.564 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.564 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.566 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.566 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not like :param0
23:21:57.567 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:57.567 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:57.567 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not like :param0
23:21:57.568 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not like ?
23:21:57.570 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not like :param0
23:21:57.570 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_LIKE] Node: 'not like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:57.570 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_LIKE] BinaryLogicOperatorNode: 'not like'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:57.571 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName not like :param0
23:21:57.571 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name not like ?
23:21:57.573 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3c50ba07 testClass = NotLikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotLikeTest@d3f2b59, testMethod = filtersByFirstLevelProperty@NotLikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@78cb1a92 testClass = NotLikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running net.kaczmarzyk.spring.data.jpa.domain.ConjunctionUnitTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.191 sec
Running net.kaczmarzyk.spring.data.jpa.domain.IsNullTest
23:21:57.768 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:57.768 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7abe70f7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@541b377d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7a343975, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@720f29f0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7b3fd68e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7612a64b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2db6d66d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@26fd2a82, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@23f31375, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@40b0c9be, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5bae7a7b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1448e2b6]
23:21:57.770 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@64898aa7 testClass = IsNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.IsNullTest@a53f879, testMethod = findsCustomersWithNullField@IsNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62cdff2b testClass = IsNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.771 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.771 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.772 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:57.774 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is null
23:21:57.774 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'nickName'

23:21:57.775 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'customer0_.nick_name' {propertyName=nickName,dereferenceType=PRIMITIVE,getPropertyPath=nickName,path=generatedAlias0.nickName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             \-[IDENT] IdentNode: 'nickName' {originalText=nickName}

23:21:57.775 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is null
23:21:57.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.nick_name is null
23:21:57.778 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@64898aa7 testClass = IsNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.IsNullTest@a53f879, testMethod = findsCustomersWithNullField@IsNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62cdff2b testClass = IsNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest
23:21:57.779 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:57.780 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@613b9bd9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6bddd4ce, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@108d88b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@16019c16, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2b59285c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2ea7e25d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@692cab82, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@73d76b9d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@11aeb673, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@a0b11, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@c76c029, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4435c9b9]
23:21:57.781 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@67091f3b, testMethod = rejectsInvalidNumberOfArguments@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.782 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.782 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.784 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.786 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@67091f3b, testMethod = rejectsInvalidNumberOfArguments@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.787 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@7a54fc29, testMethod = rejectsMissingArgument@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.787 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.787 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.789 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.790 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@7a54fc29, testMethod = rejectsMissingArgument@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.791 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@4bec8704, testMethod = filtersByNestedProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.792 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.792 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.794 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.795 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.address.street) like :param0
23:21:57.795 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'address'
          |        \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:57.796 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |        \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:57.797 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.address.street) like :param0
23:21:57.797 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.street) like ?
23:21:57.800 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@4bec8704, testMethod = filtersByNestedProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.801 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@26c0afdf, testMethod = filtersByFirstLevelProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.802 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.802 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.804 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.804 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName) like :param0
23:21:57.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:57.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:57.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName) like :param0
23:21:57.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name) like ?
23:21:57.807 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName) like :param0
23:21:57.807 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:57.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:57.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName) like :param0
23:21:57.808 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name) like ?
23:21:57.810 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2091b6b9 testClass = StartingWithIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithIgnoreCaseTest@26c0afdf, testMethod = filtersByFirstLevelProperty@StartingWithIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66f99dcc testClass = StartingWithIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest
23:21:57.812 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:57.812 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@298f8835, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60bd3a8b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5b5b5011, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@8d15c75, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5dcaa37a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@542aa32a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@55f0ba66, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@57c06659, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5f19dea8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5eab0592, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@ed8a7ab, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5afefa87]
23:21:57.814 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@51b4ab43, testMethod = performsMultilevelJoinFetchOfTypeInnerAndLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.815 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.815 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.817 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.820 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:57.820 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:21:57.822 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:21:57.822 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:57.822 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:21:57.836 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@51b4ab43, testMethod = performsMultilevelJoinFetchOfTypeInnerAndLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.838 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@16b5c059, testMethod = performsTwoFetchesUsingSingleInnerJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.838 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.838 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.840 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:21:57.843 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:57.844 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:57.844 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:21:57.844 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id order by customer0_.id asc
23:21:57.849 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@16b5c059, testMethod = performsTwoFetchesUsingSingleInnerJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.850 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@746169cd, testMethod = performsMultilevelFetchWithAttributeOfTypeList@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.850 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.852 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsList as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:57.856 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsList'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:57.858 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags_list,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tagslist2_.order_id as order_id1_10_1__, tagslist2_.tags_list_id as tags_lis2_10_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsList], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:57.858 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsList as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:57.858 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tagslist2_.order_id as order_id1_10_1__, tagslist2_.tags_list_id as tags_lis2_10_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:21:57.862 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@746169cd, testMethod = performsMultilevelFetchWithAttributeOfTypeList@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.863 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@15a806a2, testMethod = performsMultilevelFetchWithAttributeOfTypeCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.863 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.863 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.865 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.869 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsCollection as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:57.869 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsCollection'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:57.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders_tags_collection,item_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tagscollec2_.order_id as order_id1_9_1__, tagscollec2_.tags_collection_id as tags_col2_9_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsCollection], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:57.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tagsCollection as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:57.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tagscollec2_.order_id as order_id1_9_1__, tagscollec2_.tags_collection_id as tags_col2_9_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:21:57.875 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@15a806a2, testMethod = performsMultilevelFetchWithAttributeOfTypeCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.876 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@627ed93a, testMethod = performsDistinctFetchWhenDistinctParamIsSetToTrue@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.876 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.876 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.878 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.880 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:21:57.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |  |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  |  \-[IDENT] Node: 'data'
       |  |  |  |  \-[IDENT] Node: 'jpa'
       |  |  |  \-[IDENT] Node: 'Customer'
       |  |  \-[ALIAS] Node: 'generatedAlias0'
       |  \-[JOIN] Node: 'join'
       |     +-[LEFT] Node: 'left'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'generatedAlias0'
       |     |  \-[IDENT] Node: 'orders'
       |     \-[ALIAS] Node: 'generatedAlias1'
       \-[SELECT] Node: 'select'
          +-[DISTINCT] Node: 'distinct'
          \-[IDENT] Node: 'generatedAlias0'

23:21:57.881 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}

23:21:57.882 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:21:57.882 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id
23:21:57.885 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@627ed93a, testMethod = performsDistinctFetchWhenDistinctParamIsSetToTrue@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.886 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5ecc8114, testMethod = performsMultilevelJoinFetchOfTypeLeftAndInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.887 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.887 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.889 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.892 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:57.893 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:21:57.893 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:21:57.894 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:57.894 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:21:57.897 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5ecc8114, testMethod = performsMultilevelJoinFetchOfTypeLeftAndInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.898 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@35ef65e2, testMethod = performsMultilevelFetchWithAttributeOfTypeSet@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.899 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.899 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.901 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.903 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:57.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:57.905 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:57.905 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:57.905 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:21:57.908 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@35ef65e2, testMethod = performsMultilevelFetchWithAttributeOfTypeSet@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.910 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@64513b46, testMethod = throwsIllegalArgumentExceptionWhenAliasAndMultiplePathsWerePassedToConstructor@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.910 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.910 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.912 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.915 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@64513b46, testMethod = throwsIllegalArgumentExceptionWhenAliasAndMultiplePathsWerePassedToConstructor@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.917 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1f8d3539, testMethod = performsNotDistinctFetchWhenDistinctParamIsSetToFalse@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.917 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.917 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.919 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.921 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:21:57.921 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |  |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  |  \-[IDENT] Node: 'data'
       |  |  |  |  \-[IDENT] Node: 'jpa'
       |  |  |  \-[IDENT] Node: 'Customer'
       |  |  \-[ALIAS] Node: 'generatedAlias0'
       |  \-[JOIN] Node: 'join'
       |     +-[LEFT] Node: 'left'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'generatedAlias0'
       |     |  \-[IDENT] Node: 'orders'
       |     \-[ALIAS] Node: 'generatedAlias1'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:21:57.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}

23:21:57.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1
23:21:57.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id
23:21:57.925 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1f8d3539, testMethod = performsNotDistinctFetchWhenDistinctParamIsSetToFalse@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.927 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5ff7631f, testMethod = performsTwoFetchesUsingSingleLeftJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.927 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.927 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.929 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.931 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:21:57.932 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:57.933 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:57.933 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias0.orders2 as generatedAlias2 order by generatedAlias0.id asc
23:21:57.933 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id order by customer0_.id asc
23:21:57.936 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@5ff7631f, testMethod = performsTwoFetchesUsingSingleLeftJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.938 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@31fe5168, testMethod = performsMultilevelFetchWithSimpleEntityAttribute@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.938 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.938 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.940 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.944 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.note as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:57.944 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:57.945 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ordernote2_.id as id1_6_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'ordernote2_.customer_id as customer3_6_2_, ordernote2_.title as title2_6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[ordernote2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:57.945 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.note as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:57.945 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, ordernote2_.id as id1_6_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, ordernote2_.customer_id as customer3_6_2_, ordernote2_.title as title2_6_2_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id where 1=1 order by customer0_.id asc
23:21:57.949 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@31fe5168, testMethod = performsMultilevelFetchWithSimpleEntityAttribute@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.950 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@2b465287, testMethod = performsMultilevelJoinFetchOfTypeLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.950 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.950 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.952 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.958 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@2b465287, testMethod = performsMultilevelJoinFetchOfTypeLeft@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.959 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@6cacab23, testMethod = fetchesLazyCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.960 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.960 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.961 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:57.964 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 order by generatedAlias0.id asc
23:21:57.965 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:57.965 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:57.965 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 order by generatedAlias0.id asc
23:21:57.965 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id order by customer0_.id asc
23:21:57.969 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@6cacab23, testMethod = fetchesLazyCollection@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.970 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@269c07d, testMethod = performsMultilevelJoinFetchOfTypeInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.970 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.970 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.972 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:57.974 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:57.975 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:21:57.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:21:57.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1
23:21:57.976 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1
23:21:57.979 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@269c07d, testMethod = performsMultilevelJoinFetchOfTypeInner@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:57.980 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1d73ddb0, testMethod = throwsIllegalArgumentExceptionWhenFetchJoinsAreDefinedInInvalidOrder@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:57.981 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:57.981 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:57.983 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.000 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@1d73ddb0, testMethod = throwsIllegalArgumentExceptionWhenFetchJoinsAreDefinedInInvalidOrder@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.001 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@54f5457e, testMethod = performsTwoFetchesUsingTwoJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.002 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.002 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.003 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.009 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:58.009 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders2'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:58.010 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders2x2_.id as id1_7_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, orders2x2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.orders2], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders2,tableName=orders,tableAlias=orders2x2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:58.011 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias0.orders2 as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:21:58.011 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, orders2x2_.id as id1_7_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, orders2x2_.customer_id as customer3_7_2_, orders2x2_.customer2_id as customer4_7_2_, orders2x2_.item_name as item_nam2_7_2_, orders2x2_.note_id as note_id5_7_2_, orders2x2_.customer2_id as customer4_7_1__, orders2x2_.id as id1_7_1__ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2x2_ on customer0_.id=orders2x2_.customer2_id where 1=1 order by customer0_.id asc
23:21:58.015 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1bf64e55 testClass = JoinFetchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinFetchTest@54f5457e, testMethod = performsTwoFetchesUsingTwoJoinFetchDefinition@JoinFetchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50f95c8 testClass = JoinFetchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.205 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest
23:21:58.018 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.018 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6e25ae24, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@66b98075, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@20e27a41, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5f638200, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1cf44346, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3664d285, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5e7967a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@46577744, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7807e2bb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@68e7f7c4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@510af8e4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2c1a48d6]
23:21:58.020 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@2d908f18, testMethod = producesEmptyResultOnTypeMismatch_longPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.021 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.021 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.022 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.023 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 0=1
23:21:58.024 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '0'
          \-[NUM_INT] Node: '1'

23:21:58.024 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '0'
          \-[NUM_INT] LiteralNode: '1'

23:21:58.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 0=1
23:21:58.025 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where 0=1
23:21:58.027 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@2d908f18, testMethod = producesEmptyResultOnTypeMismatch_longPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.029 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@5b2728db, testMethod = usesWrappedSpecWhenTypeMatches@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.029 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.029 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.031 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.032 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=539L
23:21:58.032 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '539L'

23:21:58.032 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '539'

23:21:58.033 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=539L
23:21:58.033 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=539
23:21:58.035 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@5b2728db, testMethod = usesWrappedSpecWhenTypeMatches@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.036 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@1ecf20aa, testMethod = producesEmptyResultOnTypeMismatch_boolean@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.037 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.037 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.038 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.040 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@1ecf20aa, testMethod = producesEmptyResultOnTypeMismatch_boolean@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.042 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@3389c69d, testMethod = producesEmptyResultOnTypeMismatch_intPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.042 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.042 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.044 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.046 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@3389c69d, testMethod = producesEmptyResultOnTypeMismatch_intPrimitive@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.047 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@5a1b205, testMethod = producesEmptyResultOnTypeMismatch_date@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.048 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.048 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.049 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.052 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@5a1b205, testMethod = producesEmptyResultOnTypeMismatch_date@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.053 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@52a2c66, testMethod = producesEmptyResultOnTypeMismatch_enum@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.054 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.054 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.055 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.058 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@52a2c66, testMethod = producesEmptyResultOnTypeMismatch_enum@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.059 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@83d47a2, testMethod = producesEmptyResultOnTypeMismatch_long@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.059 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.059 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.061 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.063 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@46d52510 testClass = EmptyResultOnTypeMismatchTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EmptyResultOnTypeMismatchTest@83d47a2, testMethod = producesEmptyResultOnTypeMismatch_long@EmptyResultOnTypeMismatchTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369cadcf testClass = EmptyResultOnTypeMismatchTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec
Running net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest
23:21:58.065 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.065 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@453a699b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@73000a80, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6169c15d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4cf7f5d8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5a172b6c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@29307ea4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6fc31f6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@75d64dc4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@16795459, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3c16cd6c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5b022899, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1cfde650]
23:21:58.067 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@48b3ce9b, testMethod = filtersByPrimitiveBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.068 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.068 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.069 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.070 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>=:param0
23:21:58.071 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.071 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:58.071 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>=:param0
23:21:58.071 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold>=?
23:21:58.074 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@48b3ce9b, testMethod = filtersByPrimitiveBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.076 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@17e99817, testMethod = filtersByDoubleValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.076 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.076 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.078 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.079 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.21D
23:21:58.079 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:21:58.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:21:58.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.21D
23:21:58.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>=65.21
23:21:58.082 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.2D
23:21:58.082 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.2D'

23:21:58.083 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.2'

23:21:58.083 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>=65.2D
23:21:58.083 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>=65.2
23:21:58.085 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@17e99817, testMethod = filtersByDoubleValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.086 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1e418480, testMethod = filtersByPrimitiveLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.086 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.086 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.088 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.089 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>=56L
23:21:58.089 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '56L'

23:21:58.090 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '56'

23:21:58.090 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>=56L
23:21:58.090 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long>=56
23:21:58.092 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1e418480, testMethod = filtersByPrimitiveLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.093 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@713f5a17, testMethod = filtersByPrimitiveIntValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.094 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.094 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.096 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.096 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>=56
23:21:58.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '56'

23:21:58.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '56'

23:21:58.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>=56
23:21:58.097 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int>=56
23:21:58.099 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@713f5a17, testMethod = filtersByPrimitiveIntValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.101 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@31cced7, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.101 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.101 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.103 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>=:param0
23:21:58.104 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.104 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:58.104 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>=:param0
23:21:58.104 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>=?
23:21:58.107 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@31cced7, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.109 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@69fbc5f, testMethod = filtersByString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.109 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.109 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.111 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.111 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>=:param0
23:21:58.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>=:param0
23:21:58.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name>=?
23:21:58.116 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@69fbc5f, testMethod = filtersByString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.117 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@30a816b8, testMethod = filterByDateWithCustomDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.117 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.117 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.119 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.122 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@30a816b8, testMethod = filterByDateWithCustomDateFormat@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.123 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@d9c54e6, testMethod = filtersByPrimitiveFloatValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.124 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.124 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.125 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.126 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.21F
23:21:58.127 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:21:58.127 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:21:58.127 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.21F
23:21:58.127 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.21
23:21:58.129 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0F
23:21:58.129 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.0F'

23:21:58.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.0'

23:21:58.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0F
23:21:58.130 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.0
23:21:58.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.09F
23:21:58.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.09F'

23:21:58.131 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.09'

23:21:58.132 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.09F
23:21:58.132 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.09
23:21:58.133 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0999F
23:21:58.133 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.0999F'

23:21:58.134 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.0999'

23:21:58.134 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>=65.0999F
23:21:58.134 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>=65.0999
23:21:58.136 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@d9c54e6, testMethod = filtersByPrimitiveFloatValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.137 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@51fcecaa, testMethod = filtersByBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.137 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.139 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.140 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>=:param0
23:21:58.140 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.141 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:58.141 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>=:param0
23:21:58.141 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj>=?
23:21:58.144 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@51fcecaa, testMethod = filtersByBooleanValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.145 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1b36c5aa, testMethod = filtersByIntegerValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.146 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.146 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.148 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.148 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>=56
23:21:58.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '56'

23:21:58.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '56'

23:21:58.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>=56
23:21:58.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight>=56
23:21:58.152 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1b36c5aa, testMethod = filtersByIntegerValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.153 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1c84d89e, testMethod = filtersByLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.153 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.153 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.155 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.155 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>=593L
23:21:58.156 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '593L'

23:21:58.156 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '593'

23:21:58.156 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>=593L
23:21:58.156 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id>=593
23:21:58.159 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@1c84d89e, testMethod = filtersByLongValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.160 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7116f350, testMethod = filtersByEnumValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.160 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.160 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.162 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>=:param0
23:21:58.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:58.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>=:param0
23:21:58.163 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender>=?
23:21:58.167 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@7116f350, testMethod = filtersByEnumValue@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.168 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@79b24f79, testMethod = filtersByEnumString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.169 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.169 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.170 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.171 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>=:param0
23:21:58.171 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GE] Node: '>='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@1a44d89b}

23:21:58.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>=:param0
23:21:58.172 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string>=?
23:21:58.175 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@79b24f79, testMethod = filtersByEnumString@GreaterThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.177 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@604125bd, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.177 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.177 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.179 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.181 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@604125bd, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.182 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@76982efa, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.183 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.183 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.185 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.186 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@76982efa, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.187 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@440f434f, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.188 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.188 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.189 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.191 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@302d0419 testClass = GreaterThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanOrEqualTest@440f434f, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@6b7ff02a testClass = GreaterThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.13 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest
23:21:58.193 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.193 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1569e9d7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c53ce34, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@64ec804f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5008c5a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5ffdea7c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2dadadd9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2d43bedb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2ca08575, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1cbe3497, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5c3d91bc, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6cb84986, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@449be249]
23:21:58.195 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@1c32c581, testMethod = rejectsInvalidNumberOfArguments@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.195 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.195 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.197 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.199 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@1c32c581, testMethod = rejectsInvalidNumberOfArguments@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.200 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@1cc20796, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.200 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.200 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.202 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.202 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<=:param0
23:21:58.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:58.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<=:param0
23:21:58.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<=?
23:21:58.206 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@1cc20796, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.207 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@4bc01cab, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.207 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.207 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.209 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.211 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@4bc01cab, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.213 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@24c036b7, testMethod = rejectsMissingArgument@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.213 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.213 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.215 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.216 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a35f99a testClass = DateBeforeInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeInclusiveTest@24c036b7, testMethod = rejectsMissingArgument@DateBeforeInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10055e52 testClass = DateBeforeInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NullTest
23:21:58.217 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.217 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@75288f47, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4effab3b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5e584389, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@42491839, org.springframework.test.context.support.DirtiesContextTestExecutionListener@732af580, org.springframework.test.context.transaction.TransactionalTestExecutionListener@40bf2ead, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5ce76938, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@56653a4d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@72c743f4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4bb4c147, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2c7ddfa0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@53b52f30]
23:21:58.219 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d66a634 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@39008911, testMethod = findsCustomersWithNotNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2df92850 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.220 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.220 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.221 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.222 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is not null
23:21:58.222 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'nickName'

23:21:58.223 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'customer0_.nick_name' {propertyName=nickName,dereferenceType=PRIMITIVE,getPropertyPath=nickName,path=generatedAlias0.nickName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             \-[IDENT] IdentNode: 'nickName' {originalText=nickName}

23:21:58.223 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.nickName is not null
23:21:58.223 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.nick_name is not null
23:21:58.225 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d66a634 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@39008911, testMethod = findsCustomersWithNotNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2df92850 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.226 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d66a634 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@1e64ee13, testMethod = findsCustomersWithNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2df92850 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.226 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.226 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.228 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.230 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d66a634 testClass = NullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NullTest@1e64ee13, testMethod = findsCustomersWithNullField@NullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2df92850 testClass = NullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LikeTest
23:21:58.234 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.236 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33d95295, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5e1fd72a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c173587, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3212ff1b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4ba64e36, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6ba076ef, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3ececd11, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b8117f4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@62af3d4c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@ad038f8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@42becaf6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@51934be2]
23:21:58.238 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@4670caf6, testMethod = rejectsInvalidNumberOfArguments@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.238 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.238 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.240 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.241 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@4670caf6, testMethod = rejectsInvalidNumberOfArguments@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.242 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@4945b25f, testMethod = rejectsMissingArgument@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.242 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.242 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.244 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.246 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@4945b25f, testMethod = rejectsMissingArgument@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.247 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@32561cd5, testMethod = filtersByNestedProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.247 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.247 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.249 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.250 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street like :param0
23:21:58.250 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'street'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.250 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'street' {originalText=street}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.250 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address.street like :param0
23:21:58.250 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street like ?
23:21:58.253 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@32561cd5, testMethod = filtersByNestedProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.254 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@241e03cc, testMethod = filtersByFirstLevelProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.254 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.254 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.256 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.257 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName like :param0
23:21:58.257 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.257 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName like :param0
23:21:58.258 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name like ?
23:21:58.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName like :param0
23:21:58.259 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName like :param0
23:21:58.260 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name like ?
23:21:58.262 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5249b9c5 testClass = LikeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeTest@241e03cc, testMethod = filtersByFirstLevelProperty@LikeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@25712d03 testClass = LikeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest
23:21:58.263 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.263 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@35fe64ca, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@74d6d08a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3217aada, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@34f14035, org.springframework.test.context.support.DirtiesContextTestExecutionListener@72efba55, org.springframework.test.context.transaction.TransactionalTestExecutionListener@307f6602, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f314bad, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1ff4496, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ecd7bee, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@45c95343, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@70900474, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@b303504]
23:21:58.265 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@24c28909, testMethod = rejectsTooManyArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.266 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.266 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.267 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.268 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@24c28909, testMethod = rejectsTooManyArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.269 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@4c336d66, testMethod = rejectsTooFewArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.270 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.270 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.272 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.273 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@4c336d66, testMethod = rejectsTooFewArguments@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.274 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@3b477ce8, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.274 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.274 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.276 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.277 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate between :param0 and :param1
23:21:58.277 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:21:58.278 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:58.278 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate between :param0 and :param1
23:21:58.278 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date between ? and ?
23:21:58.281 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@3b477ce8, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.282 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@c5ed57e, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.282 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.282 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.284 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.286 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@74575124 testClass = DateBetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBetweenTest@c5ed57e, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6aa2ffd3 testClass = DateBetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest
23:21:58.287 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.287 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@51038633, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@46c09751, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@76da91cf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4cd78959, org.springframework.test.context.support.DirtiesContextTestExecutionListener@128acee, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4310d985, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@61e67cc1, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@118bace5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@55002de6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@10990a32, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@42cb7c94, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@eeb1cac]
23:21:58.289 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@145baec6, testMethod = rejectsInvalidNumberOfArguments@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.289 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.289 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.291 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.292 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@145baec6, testMethod = rejectsInvalidNumberOfArguments@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.293 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@246b2469, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.294 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.294 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.295 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.296 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<:param0
23:21:58.296 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:58.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<:param0
23:21:58.297 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<?
23:21:58.299 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@246b2469, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.300 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@12837172, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.301 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.301 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.303 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.305 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@12837172, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.306 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@45188301, testMethod = rejectsMissingArgument@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.307 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.307 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.308 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.310 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4d2eb4c6 testClass = DateBeforeTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateBeforeTest@45188301, testMethod = rejectsMissingArgument@DateBeforeTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@172b39c3 testClass = DateBeforeTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest
23:21:58.311 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.311 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@35a7c477, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@591e1df7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@697b105e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6c54bc3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@dcaa310, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2492f6fb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@155afbd7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@396d21ec, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@61e7d7f2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@52f1d01b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@10371dd1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@40053c7a]
23:21:58.313 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@c030d36, testMethod = rejectsInvalidNumberOfArguments@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.313 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.313 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.315 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.317 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@c030d36, testMethod = rejectsInvalidNumberOfArguments@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.318 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@7d0bca3d, testMethod = rejectsMissingArgument@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.318 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.318 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.320 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.321 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@7d0bca3d, testMethod = rejectsMissingArgument@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.322 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@6ce9a671, testMethod = filtersByNestedProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.323 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.323 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.324 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.328 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@6ce9a671, testMethod = filtersByNestedProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.329 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@5aa943c5, testMethod = filtersByFirstLevelProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.329 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.329 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.331 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.334 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@25102e0 testClass = EndingWithIgnoreCaseWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithIgnoreCaseWithTest@5aa943c5, testMethod = filtersByFirstLevelProperty@EndingWithIgnoreCaseWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@359c9b3b testClass = EndingWithIgnoreCaseWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest
23:21:58.335 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.336 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@385dae6a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4d923ffc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4ed70448, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1eb08757, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4bcb5415, org.springframework.test.context.transaction.TransactionalTestExecutionListener@177aef4f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@61f94cac, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7be9e5fb, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6a937d6f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2ad3e7e5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@164523f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3596a9d5]
23:21:58.337 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@687d4471, testMethod = rejectsInvalidNumberOfArguments@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.338 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.338 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.339 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.341 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@687d4471, testMethod = rejectsInvalidNumberOfArguments@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.342 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@3cab74d2, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.343 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.343 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.344 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.345 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>:param0
23:21:58.345 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:58.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate>:param0
23:21:58.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>?
23:21:58.349 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@3cab74d2, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.350 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@1062f767, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.350 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.350 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.352 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.354 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@1062f767, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.355 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@2ac50ab0, testMethod = rejectsMissingArgument@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.355 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.355 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.357 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.358 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@52c86b9f testClass = DateAfterTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterTest@2ac50ab0, testMethod = rejectsMissingArgument@DateAfterTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e309b13 testClass = DateAfterTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.BetweenTest
23:21:58.360 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.360 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3002acf9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@34668a96, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@686d5284, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@43542dd7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@66143420, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6626204e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@645db77c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@60514b5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41f79561, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1604e941, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f6b4aaa, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@31e5554e]
23:21:58.361 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@6b981dea, testMethod = filtersByIntRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.362 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.362 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.363 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 70L and 100L
23:21:58.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          +-[NUM_LONG] Node: '70L'
          \-[NUM_LONG] Node: '100L'

23:21:58.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          +-[NUM_LONG] LiteralNode: '70'
          \-[NUM_LONG] LiteralNode: '100'

23:21:58.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 70L and 100L
23:21:58.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int between 70 and 100
23:21:58.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 85L and 400L
23:21:58.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          +-[NUM_LONG] Node: '85L'
          \-[NUM_LONG] Node: '400L'

23:21:58.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          +-[NUM_LONG] LiteralNode: '85'
          \-[NUM_LONG] LiteralNode: '400'

23:21:58.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt between 85L and 400L
23:21:58.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int between 85 and 400
23:21:58.369 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@6b981dea, testMethod = filtersByIntRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.370 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@76ed5e7e, testMethod = rejectsTooManyArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.371 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.371 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.372 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.373 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@76ed5e7e, testMethod = rejectsTooManyArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.375 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@339852ab, testMethod = filtersByFloatRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.375 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.375 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.377 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.377 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 70.0F and 100.0F
23:21:58.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          +-[NUM_FLOAT] Node: '70.0F'
          \-[NUM_FLOAT] Node: '100.0F'

23:21:58.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          +-[NUM_FLOAT] LiteralNode: '70.0'
          \-[NUM_FLOAT] LiteralNode: '100.0'

23:21:58.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 70.0F and 100.0F
23:21:58.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float between 70.0 and 100.0
23:21:58.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 85.0F and 300.2F
23:21:58.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          +-[NUM_FLOAT] Node: '85.0F'
          \-[NUM_FLOAT] Node: '300.2F'

23:21:58.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          +-[NUM_FLOAT] LiteralNode: '85.0'
          \-[NUM_FLOAT] LiteralNode: '300.2'

23:21:58.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat between 85.0F and 300.2F
23:21:58.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float between 85.0 and 300.2
23:21:58.382 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@339852ab, testMethod = filtersByFloatRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.383 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@4608a871, testMethod = filtersByEnumRange_string@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.384 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.384 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.385 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.386 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString between :param0 and :param1
23:21:58.386 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:21:58.387 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@1a44d89b}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@1a44d89b}

23:21:58.387 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString between :param0 and :param1
23:21:58.387 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string between ? and ?
23:21:58.389 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@4608a871, testMethod = filtersByEnumRange_string@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.390 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3b7bc23a, testMethod = filtersByDoubleRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.390 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.390 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.392 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.392 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 70.0D and 100.0D
23:21:58.393 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          +-[NUM_DOUBLE] Node: '70.0D'
          \-[NUM_DOUBLE] Node: '100.0D'

23:21:58.393 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          +-[NUM_DOUBLE] LiteralNode: '70.0'
          \-[NUM_DOUBLE] LiteralNode: '100.0'

23:21:58.393 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 70.0D and 100.0D
23:21:58.393 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double between 70.0 and 100.0
23:21:58.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 85.0D and 300.2D
23:21:58.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          +-[NUM_DOUBLE] Node: '85.0D'
          \-[NUM_DOUBLE] Node: '300.2D'

23:21:58.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          +-[NUM_DOUBLE] LiteralNode: '85.0'
          \-[NUM_DOUBLE] LiteralNode: '300.2'

23:21:58.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble between 85.0D and 300.2D
23:21:58.395 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double between 85.0 and 300.2
23:21:58.397 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@3b7bc23a, testMethod = filtersByDoubleRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.398 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7e4257e3, testMethod = filtersByEnumRange_ordinal@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.399 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.399 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.400 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender between :param0 and :param1
23:21:58.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:21:58.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:58.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender between :param0 and :param1
23:21:58.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender between ? and ?
23:21:58.404 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@7e4257e3, testMethod = filtersByEnumRange_ordinal@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.405 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@15bb7acd, testMethod = filtersByBigDecimalRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.406 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.406 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.407 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.432 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 70BD and 100BD
23:21:58.432 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightBigDecimal'
          +-[NUM_BIG_DECIMAL] Node: '70BD'
          \-[NUM_BIG_DECIMAL] Node: '100BD'

23:21:58.433 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_big_decimal' {propertyName=weightBigDecimal,dereferenceType=PRIMITIVE,getPropertyPath=weightBigDecimal,path=generatedAlias0.weightBigDecimal,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightBigDecimal' {originalText=weightBigDecimal}
          +-[NUM_BIG_DECIMAL] LiteralNode: '70'
          \-[NUM_BIG_DECIMAL] LiteralNode: '100'

23:21:58.433 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 70BD and 100BD
23:21:58.433 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_big_decimal between 70 and 100
23:21:58.434 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 85BD and 300.31BD
23:21:58.434 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightBigDecimal'
          +-[NUM_BIG_DECIMAL] Node: '85BD'
          \-[NUM_BIG_DECIMAL] Node: '300.31BD'

23:21:58.435 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.weight_big_decimal' {propertyName=weightBigDecimal,dereferenceType=PRIMITIVE,getPropertyPath=weightBigDecimal,path=generatedAlias0.weightBigDecimal,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightBigDecimal' {originalText=weightBigDecimal}
          +-[NUM_BIG_DECIMAL] LiteralNode: '85'
          \-[NUM_BIG_DECIMAL] LiteralNode: '300.31'

23:21:58.435 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightBigDecimal between 85BD and 300.31BD
23:21:58.435 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_big_decimal between 85 and 300.31
23:21:58.437 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@15bb7acd, testMethod = filtersByBigDecimalRange@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.438 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@199efc58, testMethod = rejectsTooFewArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.438 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.438 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.440 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.441 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@199efc58, testMethod = rejectsTooFewArguments@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.442 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@4c25906b, testMethod = filtersByRegistrationDateWithDefaultDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.442 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.442 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.444 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.448 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@4c25906b, testMethod = filtersByRegistrationDateWithDefaultDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.449 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@5f58ff4f, testMethod = filtersByRegistrationDateWithCustomDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.449 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.449 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.451 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.453 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@27c510c5 testClass = BetweenTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.BetweenTest@5f58ff4f, testMethod = filtersByRegistrationDateWithCustomDateFormat@BetweenTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3482b7e6 testClass = BetweenTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.094 sec
Running net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest
23:21:58.454 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.455 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@637ca94b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4fd1458d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5d6850f7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3b8bbfab, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3dbb7f60, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7803a877, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@67f3a068, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1e33dda, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@674502f9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2604e76, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@786a4eb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@607fa188]
23:21:58.456 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@265b52b7, testMethod = rejectsInvalidNumberOfArguments@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.457 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.457 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.458 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.460 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@265b52b7, testMethod = rejectsInvalidNumberOfArguments@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.461 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@1f1d7c52, testMethod = rejectsMissingArgument@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.461 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.461 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.462 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.464 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@1f1d7c52, testMethod = rejectsMissingArgument@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.467 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@134a27c1, testMethod = filtersByNestedProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.468 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.468 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.469 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.473 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@134a27c1, testMethod = filtersByNestedProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.474 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@402ceac2, testMethod = filtersByFirstLevelProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.474 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.474 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.476 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.479 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@18aa9b83 testClass = StartingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.StartingWithTest@402ceac2, testMethod = filtersByFirstLevelProperty@StartingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7e58471 testClass = StartingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running net.kaczmarzyk.spring.data.jpa.domain.JoinTest
23:21:58.481 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.481 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2a59034e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2360414f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@76eabed6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@773faae8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@159e8432, org.springframework.test.context.transaction.TransactionalTestExecutionListener@34d5d5f7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@17eac1b5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1d88414a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7cd6e9dd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6636e1dd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@279063c7, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@784df46e]
23:21:58.483 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@5a33ba9b, testMethod = performsMultilevelJoinWithAttributeOfTypeList@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.483 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.483 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.485 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsList as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:58.487 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsList'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:58.488 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags_list,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsList], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsList,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:58.488 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsList as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:58.488 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_list tagslist2_ on orders1_.id=tagslist2_.order_id left outer join item_tags itemtag3_ on tagslist2_.tags_list_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:21:58.491 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@5a33ba9b, testMethod = performsMultilevelJoinWithAttributeOfTypeList@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.492 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@27ae4c06, testMethod = joinsCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.492 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.492 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.494 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName=:param0 order by generatedAlias0.id asc
23:21:58.496 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias1'
    |     |  \-[IDENT] Node: 'itemName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:58.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:58.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName=:param0 order by generatedAlias0.id asc
23:21:58.497 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id where orders1_.item_name=? order by customer0_.id asc
23:21:58.499 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@27ae4c06, testMethod = joinsCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.500 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@4a83736a, testMethod = performsMultilevelJoinWithAttributeOfTypeCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.501 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.501 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.502 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.504 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsCollection as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:58.505 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tagsCollection'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:58.506 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders_tags_collection,item_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tagsCollection], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tagsCollection,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:58.506 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tagsCollection as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:58.506 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags_collection tagscollec2_ on orders1_.id=tagscollec2_.order_id left outer join item_tags itemtag3_ on tagscollec2_.tags_collection_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:21:58.508 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@4a83736a, testMethod = performsMultilevelJoinWithAttributeOfTypeCollection@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.510 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@6816b13d, testMethod = performsMultilevelJoinWithAttributeOfTypeSet@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.510 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.510 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.511 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.513 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tags as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:58.514 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:58.514 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'itemtag3_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=itemtag3_,className=net.kaczmarzyk.spring.data.jpa.ItemTag,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'itemtag3_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag3_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:58.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.tags as generatedAlias2 where generatedAlias2.name=:param0 order by generatedAlias0.id asc
23:21:58.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where itemtag3_.name=? order by customer0_.id asc
23:21:58.517 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@6816b13d, testMethod = performsMultilevelJoinWithAttributeOfTypeSet@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.518 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@56510bb2, testMethod = performsMultilevelJoinWithSimpleEntityAttribute@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.519 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.519 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.520 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.note as generatedAlias2 where generatedAlias2.title=:param0 order by generatedAlias0.id asc
23:21:58.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias2'
    |     |  \-[IDENT] Node: 'title'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:58.524 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[ordernote2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote2_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'ordernote2_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias2.title,tableAlias=ordernote2_,className=net.kaczmarzyk.spring.data.jpa.OrderNote,classAlias=generatedAlias2}
    |     |  +-[ALIAS_REF] IdentNode: 'ordernote2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.OrderNote, tableAlias=ordernote2_}
    |     |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:58.524 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.orders as generatedAlias1 left join generatedAlias1.note as generatedAlias2 where generatedAlias2.title=:param0 order by generatedAlias0.id asc
23:21:58.524 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join order_note ordernote2_ on orders1_.note_id=ordernote2_.id where ordernote2_.title=? order by customer0_.id asc
23:21:58.527 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@56510bb2, testMethod = performsMultilevelJoinWithSimpleEntityAttribute@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.528 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@708a0150, testMethod = throwsIllegalArgumentExceptionWhenJoinsAreDefinedInInvalidOrder@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.529 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.529 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.530 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.534 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@767cacee testClass = JoinTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.JoinTest@708a0150, testMethod = throwsIllegalArgumentExceptionWhenJoinsAreDefinedInInvalidOrder@JoinTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ec9bd88 testClass = JoinTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.054 sec
Running net.kaczmarzyk.spring.data.jpa.domain.InTest
23:21:58.535 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.535 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1e0ccdd6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5f849a79, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6304ff53, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2cad213d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@54372b03, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2f9b24ae, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6b21a869, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e40d8f9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@43c28101, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@350a7383, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@538ee7ab, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7b217a33]
23:21:58.537 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@f014ff3, testMethod = filtersWithTwoEnumValues@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.537 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.537 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.539 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.541 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@f014ff3, testMethod = filtersWithTwoEnumValues@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.542 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1acf0703, testMethod = filtersByLongValue_withAdditionalNonExistingValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.543 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.543 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.544 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.545 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (12345L, 807L, 808L)
23:21:58.545 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '12345L'
             +-[NUM_LONG] Node: '807L'
             \-[NUM_LONG] Node: '808L'

23:21:58.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '12345'
             +-[NUM_LONG] LiteralNode: '807'
             \-[NUM_LONG] LiteralNode: '808'

23:21:58.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (12345L, 807L, 808L)
23:21:58.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (12345 , 807 , 808)
23:21:58.548 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1acf0703, testMethod = filtersByLongValue_withAdditionalNonExistingValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.549 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@18809db8, testMethod = filtersByDateWithDefaultDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.550 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.550 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.551 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0)
23:21:58.552 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:58.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:58.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate in (:param0)
23:21:58.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date in (?)
23:21:58.556 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@18809db8, testMethod = filtersByDateWithDefaultDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.557 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@e80fc9d, testMethod = filtersByString@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.557 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.557 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.559 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.559 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0, :param1)
23:21:58.560 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:58.560 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.560 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0, :param1)
23:21:58.560 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name in (? , ?)
23:21:58.561 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0)
23:21:58.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:58.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName in (:param0)
23:21:58.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name in (?)
23:21:58.564 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@e80fc9d, testMethod = filtersByString@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.565 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1f7e6c3a, testMethod = filterByDateWithCustomDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.565 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.565 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.567 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.570 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1f7e6c3a, testMethod = filterByDateWithCustomDateFormat@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.571 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1714fe69, testMethod = filtersByEnumValue_singleValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.572 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.572 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.573 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.574 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0)
23:21:58.574 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:58.574 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:58.574 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in (:param0)
23:21:58.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in (?)
23:21:58.577 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@1714fe69, testMethod = filtersByEnumValue_singleValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.578 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@7b054614, testMethod = filtersByBooleanValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.579 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.579 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.580 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.581 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold in (:param0)
23:21:58.581 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:58.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:58.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold in (:param0)
23:21:58.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold in (?)
23:21:58.584 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@7b054614, testMethod = filtersByBooleanValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.585 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@64356fe1, testMethod = filtersByIntegerValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.585 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.585 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.587 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.587 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight in (121, 65)
23:21:58.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_INT] Node: '121'
             \-[NUM_INT] Node: '65'

23:21:58.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_INT] LiteralNode: '121'
             \-[NUM_INT] LiteralNode: '65'

23:21:58.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight in (121, 65)
23:21:58.588 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight in (121 , 65)
23:21:58.590 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@64356fe1, testMethod = filtersByIntegerValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.591 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@10dad714, testMethod = filtersByLongValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.592 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.592 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.593 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (835L, 836L)
23:21:58.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '835L'
             \-[NUM_LONG] Node: '836L'

23:21:58.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '835'
             \-[NUM_LONG] LiteralNode: '836'

23:21:58.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id in (835L, 836L)
23:21:58.594 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id in (835 , 836)
23:21:58.596 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4fbdd61f testClass = InTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.InTest@10dad714, testMethod = filtersByLongValue@InTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3833a045 testClass = InTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest
23:21:58.598 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.598 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@49ffcd07, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4fc6dcb7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4512085c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7e41619d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@49e11ca7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@30bb4248, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@65beeceb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@10063448, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@51c316cb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b00a7b9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@29cbdd86, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@84e1883]
23:21:58.600 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@206100aa testClass = DisjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest@54236211, testMethod = shouldIncludeResultsOfBothSpecs@DisjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@516c8f5a testClass = DisjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.600 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.600 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.602 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.604 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:21:58.604 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:58.605 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.605 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:21:58.605 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name like ? or customer0_.last_name like ?
23:21:58.607 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@206100aa testClass = DisjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DisjunctionTest@54236211, testMethod = shouldIncludeResultsOfBothSpecs@DisjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@516c8f5a testClass = DisjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EqualTest
23:21:58.609 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.609 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4da86d09, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5a21746a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@474c8dec, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3d8c55ff, org.springframework.test.context.support.DirtiesContextTestExecutionListener@33c2a762, org.springframework.test.context.transaction.TransactionalTestExecutionListener@62110754, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4111c517, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1eed4367, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@38321e6f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@52f3859a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1d05cbae, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@69075512]
23:21:58.611 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@35590f53, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.611 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.611 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.613 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.613 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold=:param0
23:21:58.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:58.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold=:param0
23:21:58.614 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=?
23:21:58.616 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@35590f53, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.617 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3bf572e0, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.618 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.618 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.619 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.621 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3bf572e0, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.622 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@198b4fb6, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.622 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.622 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.624 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.624 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong=121L
23:21:58.624 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '121L'

23:21:58.625 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '121'

23:21:58.625 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong=121L
23:21:58.625 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long=121
23:21:58.627 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@198b4fb6, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.628 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3860542a, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.628 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.628 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.630 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.630 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt=121
23:21:58.630 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '121'

23:21:58.631 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '121'

23:21:58.631 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt=121
23:21:58.631 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int=121
23:21:58.633 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@3860542a, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.634 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@64b05928, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.635 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.635 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.636 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.637 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble=121.2D
23:21:58.637 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '121.2D'

23:21:58.637 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '121.2'

23:21:58.637 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble=121.2D
23:21:58.637 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double=121.2
23:21:58.639 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@64b05928, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.640 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@ec7c39b, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.641 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.641 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.642 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.643 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate=:param0
23:21:58.643 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.644 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:58.644 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate=:param0
23:21:58.644 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date=?
23:21:58.647 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@ec7c39b, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.647 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@7e36c60b, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.648 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.648 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.649 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.652 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@7e36c60b, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.654 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1f0b2ffb, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.654 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.654 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.655 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.657 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1f0b2ffb, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.658 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1a958d2a, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.659 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.659 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.660 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.661 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj=:param0
23:21:58.661 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.661 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:58.661 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj=:param0
23:21:58.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj=?
23:21:58.664 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1a958d2a, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.665 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1e60dce7, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.665 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.665 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.667 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.667 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight=121
23:21:58.668 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '121'

23:21:58.668 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '121'

23:21:58.668 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight=121
23:21:58.668 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight=121
23:21:58.670 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@1e60dce7, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.671 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@2f930be7, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.672 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.672 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.673 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.674 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=884L
23:21:58.674 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '884L'

23:21:58.675 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '884'

23:21:58.675 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=884L
23:21:58.675 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=884
23:21:58.677 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@2f930be7, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.678 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@26f6fbbd, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.678 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.678 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.679 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.680 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender=:param0
23:21:58.680 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:58.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender=:param0
23:21:58.681 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=?
23:21:58.683 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2dacf052 testClass = EqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualTest@26f6fbbd, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ab0dc testClass = EqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 13, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.076 sec
Running net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest
23:21:58.685 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.685 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3693deae, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6f3af541, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@723493f2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@21e40707, org.springframework.test.context.support.DirtiesContextTestExecutionListener@92adb3b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3182b7a2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@677f1963, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6622f6b4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@398e1a48, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d95957c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2be33ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@73d8f219]
23:21:58.687 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@19a5d711, testMethod = rejectsInvalidNumberOfArguments@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.687 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.687 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.689 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.690 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@19a5d711, testMethod = rejectsInvalidNumberOfArguments@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.691 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@1529406e, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.692 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.692 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.693 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.697 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@1529406e, testMethod = filtersByRegistrationDateWithDefaultDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.698 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@7da7a932, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.698 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.698 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.700 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.702 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@7da7a932, testMethod = filtersByRegistrationDateWithCustomDateFormat@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.703 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@1f600254, testMethod = rejectsMissingArgument@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.703 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.703 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.705 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.706 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4ceeba96 testClass = DateAfterInclusiveTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.DateAfterInclusiveTest@1f600254, testMethod = rejectsMissingArgument@DateAfterInclusiveTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7c89133 testClass = DateAfterInclusiveTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest
23:21:58.708 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.708 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@663e2cfd, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@76cb6d16, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@764b7ff7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1962f55, org.springframework.test.context.support.DirtiesContextTestExecutionListener@16d8a25e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3bd6ce4e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@164fba04, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2693d31f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@750a4fc1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@78235b90, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13d7410a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2b647344]
23:21:58.710 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@66716c60, testMethod = filtersByStringCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.710 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.710 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.712 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.712 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)<>:param0
23:21:58.713 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.713 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.713 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)<>:param0
23:21:58.713 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name)<>?
23:21:58.714 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)<>:param0
23:21:58.715 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.715 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.715 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)<>:param0
23:21:58.715 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name)<>?
23:21:58.717 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@66716c60, testMethod = filtersByStringCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.718 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1a23e131, testMethod = filtersByEnumCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.719 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.719 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.720 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<>:param0
23:21:58.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:58.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<>:param0
23:21:58.721 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<>?
23:21:58.724 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1a23e131, testMethod = filtersByEnumCaseInsensitive@NotEqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.725 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@72b1ee4b, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.725 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.725 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.727 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.727 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<>:param0
23:21:58.728 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.728 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:58.728 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<>:param0
23:21:58.728 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<>?
23:21:58.730 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@72b1ee4b, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.731 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@46eaf531, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.731 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.731 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.733 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.734 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@46eaf531, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.735 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@778c5658, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.735 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.735 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.737 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.737 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<>121L
23:21:58.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '121L'

23:21:58.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '121'

23:21:58.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<>121L
23:21:58.738 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<>121
23:21:58.740 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@778c5658, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.741 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2375fe4a, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.742 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.742 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.743 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.744 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<>121
23:21:58.744 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '121'

23:21:58.744 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '121'

23:21:58.744 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<>121
23:21:58.744 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<>121
23:21:58.746 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2375fe4a, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.747 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2a67ed1f, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.748 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.748 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.749 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<>121.2D
23:21:58.750 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '121.2D'

23:21:58.751 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '121.2'

23:21:58.751 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<>121.2D
23:21:58.751 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<>121.2
23:21:58.752 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2a67ed1f, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.753 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@50a65fb9, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.754 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.754 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.755 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.756 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<>:param0
23:21:58.757 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.760 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:58.761 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate<>:param0
23:21:58.761 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<>?
23:21:58.763 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@50a65fb9, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.764 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@15d67d0f, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.764 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.764 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.765 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.766 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<>:param0
23:21:58.766 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<>:param0
23:21:58.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<>?
23:21:58.769 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@15d67d0f, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.770 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1d2fd73c, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.770 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.770 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.772 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.774 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1d2fd73c, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.775 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@10e25b2a, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.775 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.775 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.777 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.777 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<>:param0
23:21:58.778 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.778 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:58.778 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<>:param0
23:21:58.778 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<>?
23:21:58.780 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@10e25b2a, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.781 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3f1e530c, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.781 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.781 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.783 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.784 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<>121
23:21:58.784 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '121'

23:21:58.784 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '121'

23:21:58.784 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<>121
23:21:58.784 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<>121
23:21:58.786 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@3f1e530c, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.787 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1fb5eda7, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.788 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.788 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.789 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.790 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>940L
23:21:58.790 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '940L'

23:21:58.791 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '940'

23:21:58.791 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>940L
23:21:58.791 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>940
23:21:58.793 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@1fb5eda7, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.794 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2be9dfb0, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.794 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.794 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.797 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:21:58.800 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@44126e04 testClass = NotEqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualIgnoreCaseTest@2be9dfb0, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@79f6e671 testClass = NotEqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.094 sec
Running net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest
23:21:58.802 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.802 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@54dd6160, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@24f89b6b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@307f4223, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3730fb2f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@8d95ac8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@689aab7b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@22be8211, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1267fcea, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@502afb74, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6dd65379, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b2eead8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1603d1fb]
23:21:58.803 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@30d016c9 testClass = ConjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest@43aae476, testMethod = shouldFilterWithBothSpecs@ConjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e535e23 testClass = ConjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.804 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.804 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.805 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.address.street like :param0 ) and ( generatedAlias0.registrationDate<:param1 )
23:21:58.806 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'address'
          |  |  \-[IDENT] Node: 'street'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LT] Node: '<'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:58.807 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  |  \-[IDENT] IdentNode: 'street' {originalText=street}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[LT] BinaryLogicOperatorNode: '<'
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:58.807 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.address.street like :param0 ) and ( generatedAlias0.registrationDate<:param1 )
23:21:58.807 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.street like ?) and customer0_.registration_date<?
23:21:58.809 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@30d016c9 testClass = ConjunctionTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.ConjunctionTest@43aae476, testMethod = shouldFilterWithBothSpecs@ConjunctionTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e535e23 testClass = ConjunctionTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest
23:21:58.811 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.811 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4e9d3925, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@685a8158, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5ae9ea0a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4080ea09, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67f3b72d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5b9fbaca, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4e33a209, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@924c964, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@73145db2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@557bf0f0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@60b33bc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@294bb5f0]
23:21:58.813 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@286bd902, testMethod = rejectsInvalidNumberOfArguments@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.813 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.813 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.815 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.816 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@286bd902, testMethod = rejectsInvalidNumberOfArguments@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.817 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@5e4c74ec, testMethod = filtersFirstLevelPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.817 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.817 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.819 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.822 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@5e4c74ec, testMethod = filtersFirstLevelPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.823 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@5db9952b, testMethod = filtersByNestedPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.823 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.823 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.825 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.827 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@5db9952b, testMethod = filtersByNestedPropertyIgnoringCase@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.828 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@1c66272b, testMethod = rejectsMissingArgument@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.829 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.829 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.830 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.831 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@67988d92 testClass = LikeIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LikeIgnoreCaseTest@1c66272b, testMethod = rejectsMissingArgument@LikeIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15598336 testClass = LikeIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotNullTest
23:21:58.834 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.834 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4dbae8f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2ffa8ce5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f17140d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@30749de8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6902e2bf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@12e4c6de, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@75b41ff3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@61bb5770, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1f5246e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2b34a1e0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7eaa78f2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4591a080]
23:21:58.835 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2351ad5a testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@27f0a71d, testMethod = findsCustomersWithNotNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1dc7173 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.836 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.836 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.837 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.839 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2351ad5a testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@27f0a71d, testMethod = findsCustomersWithNotNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1dc7173 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.840 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2351ad5a testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@2667d4fe, testMethod = findsCustomersWithNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1dc7173 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.841 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.841 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.842 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.845 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2351ad5a testClass = NotNullTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotNullTest@2667d4fe, testMethod = findsCustomersWithNullField@NotNullTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1dc7173 testClass = NotNullTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LessThanTest
23:21:58.846 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.846 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3aaed411, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5580356d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@61267fa2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@54dd2962, org.springframework.test.context.support.DirtiesContextTestExecutionListener@181f61b4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4c601487, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1e69a9c6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@23c21550, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4033d25d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@cbb32f0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5f4f8d38, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6c946b14]
23:21:58.848 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@667dfd42, testMethod = filtersByPrimitiveBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.848 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.848 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.851 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<:param0
23:21:58.851 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.852 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:58.852 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<:param0
23:21:58.852 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<?
23:21:58.854 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@667dfd42, testMethod = filtersByPrimitiveBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.855 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@1c6912db, testMethod = filtersByDoubleValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.856 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.856 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.858 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.858 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.200100000000006D
23:21:58.858 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.200100000000006D'

23:21:58.859 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.200100000000006'

23:21:58.859 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.200100000000006D
23:21:58.859 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<55.200100000000006
23:21:58.860 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.2D
23:21:58.860 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.2D'

23:21:58.861 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.2'

23:21:58.861 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<55.2D
23:21:58.861 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<55.2
23:21:58.862 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@1c6912db, testMethod = filtersByDoubleValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.864 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3861f2c9, testMethod = filtersByPrimitiveLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.864 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.864 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.866 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.866 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<55L
23:21:58.867 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '55L'

23:21:58.867 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '55'

23:21:58.867 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<55L
23:21:58.867 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<55
23:21:58.869 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3861f2c9, testMethod = filtersByPrimitiveLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.870 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6281f945, testMethod = filtersByPrimitiveIntValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.870 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.870 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.872 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<55
23:21:58.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '55'

23:21:58.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '55'

23:21:58.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<55
23:21:58.873 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<55
23:21:58.875 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@6281f945, testMethod = filtersByPrimitiveIntValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.876 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@155ae856, testMethod = filtersByDateWithDefaultDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.877 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.877 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.878 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.881 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@155ae856, testMethod = filtersByDateWithDefaultDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.882 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@400b4dd5, testMethod = filtersByString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.882 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.882 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.884 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<:param0
23:21:58.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:58.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<:param0
23:21:58.885 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<?
23:21:58.888 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@400b4dd5, testMethod = filtersByString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.889 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@731a1399, testMethod = filterByDateWithCustomDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.889 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.889 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.891 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.893 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@731a1399, testMethod = filterByDateWithCustomDateFormat@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.894 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5aa786fc, testMethod = filtersByPrimitiveFloatValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.896 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.896 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.898 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<65.21F
23:21:58.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:21:58.899 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:21:58.899 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<65.21F
23:21:58.899 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<65.21
23:21:58.900 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<55.0F
23:21:58.900 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '55.0F'

23:21:58.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '55.0'

23:21:58.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<55.0F
23:21:58.901 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<55.0
23:21:58.903 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5aa786fc, testMethod = filtersByPrimitiveFloatValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.904 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@27b8adeb, testMethod = filtersByBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.904 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.904 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.906 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.907 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<:param0
23:21:58.907 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.907 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:58.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<:param0
23:21:58.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<?
23:21:58.910 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@27b8adeb, testMethod = filtersByBooleanValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.911 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@191a8997, testMethod = filtersByIntegerValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.911 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.911 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.913 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.913 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<55
23:21:58.914 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '55'

23:21:58.914 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '55'

23:21:58.914 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<55
23:21:58.914 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<55
23:21:58.916 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@191a8997, testMethod = filtersByIntegerValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.923 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5b218570, testMethod = filtersByLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.923 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.923 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.925 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.927 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1007L
23:21:58.927 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1007L'

23:21:58.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1007'

23:21:58.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1007L
23:21:58.929 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<1007
23:21:58.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1009L
23:21:58.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1009L'

23:21:58.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1009'

23:21:58.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<1009L
23:21:58.935 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<1009
23:21:58.937 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5b218570, testMethod = filtersByLongValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.940 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@2a806a8d, testMethod = filtersByEnumValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.941 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.941 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.942 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<:param0
23:21:58.943 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.946 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:58.947 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<:param0
23:21:58.947 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<?
23:21:58.951 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@2a806a8d, testMethod = filtersByEnumValue@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.952 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5af69032, testMethod = filtersByEnumString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.953 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.953 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.954 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.955 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<:param0
23:21:58.955 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.956 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@1a44d89b}

23:21:58.956 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<:param0
23:21:58.957 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string<?
23:21:58.962 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@5af69032, testMethod = filtersByEnumString@LessThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.963 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@17319443, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.964 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.964 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.965 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:58.966 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@17319443, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.968 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@50a80d6b, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.968 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.968 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.970 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.971 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@50a80d6b, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.975 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3fb75c24, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.975 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.975 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.977 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.978 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@b940d24 testClass = LessThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanTest@3fb75c24, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@1234d9f6 testClass = LessThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.133 sec
Running net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest
23:21:58.984 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:58.984 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3ba34018, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71139676, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@83b55dc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@78ac66e2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@59ae4a6f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3463d70a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@66a4e1ef, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7d2410af, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5672c056, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7c039615, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3d69bbe3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@60157589]
23:21:58.986 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@702189aa, testMethod = filtersByPrimitiveBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.986 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.986 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.988 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.988 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>:param0
23:21:58.989 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:58.991 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:58.992 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold>:param0
23:21:58.992 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold>?
23:21:58.994 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@702189aa, testMethod = filtersByPrimitiveBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:58.996 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@188496fd, testMethod = filtersByDoubleValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:58.996 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:58.996 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:58.998 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:58.999 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.21D
23:21:59.000 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:21:59.004 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:21:59.005 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.21D
23:21:59.005 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>65.21
23:21:59.009 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.2D
23:21:59.009 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.2D'

23:21:59.010 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.2'

23:21:59.010 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble>65.2D
23:21:59.010 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double>65.2
23:21:59.012 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@188496fd, testMethod = filtersByDoubleValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.013 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5e583af4, testMethod = filtersByPrimitiveLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.013 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.013 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.015 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.016 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>56L
23:21:59.016 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '56L'

23:21:59.016 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '56'

23:21:59.016 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong>56L
23:21:59.016 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long>56
23:21:59.020 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5e583af4, testMethod = filtersByPrimitiveLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.021 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5d63295e, testMethod = filtersByPrimitiveIntValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.022 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.022 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.023 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.024 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>65
23:21:59.029 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '65'

23:21:59.030 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '65'

23:21:59.030 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt>65
23:21:59.030 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int>65
23:21:59.032 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@5d63295e, testMethod = filtersByPrimitiveIntValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.033 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@768cfd06, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.034 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.034 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.035 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.040 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@768cfd06, testMethod = filtersByDateWithDefaultDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.041 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@10bcceb5, testMethod = filtersByString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.041 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.041 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.043 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.044 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>:param0
23:21:59.044 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.044 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.044 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName>:param0
23:21:59.044 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name>?
23:21:59.047 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@10bcceb5, testMethod = filtersByString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.048 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@37d4b676, testMethod = filterByDateWithCustomDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.048 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.048 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.050 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.053 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@37d4b676, testMethod = filterByDateWithCustomDateFormat@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.066 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4d1f1b98, testMethod = filtersByPrimitiveFloatValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.066 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.066 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.068 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.068 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.21F
23:21:59.069 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.21F'

23:21:59.070 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.21'

23:21:59.070 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.21F
23:21:59.070 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>65.21
23:21:59.071 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.1F
23:21:59.071 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.1F'

23:21:59.072 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.1'

23:21:59.072 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat>65.1F
23:21:59.072 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float>65.1
23:21:59.075 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4d1f1b98, testMethod = filtersByPrimitiveFloatValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.076 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4740e12f, testMethod = filtersByBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.076 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.076 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.078 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.078 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>:param0
23:21:59.079 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:59.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj>:param0
23:21:59.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj>?
23:21:59.082 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4740e12f, testMethod = filtersByBooleanValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.083 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7df7cc64, testMethod = filtersByIntegerValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.084 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.084 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.085 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>65
23:21:59.086 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '65'

23:21:59.087 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '65'

23:21:59.087 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight>65
23:21:59.087 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight>65
23:21:59.090 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@7df7cc64, testMethod = filtersByIntegerValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.091 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1e9cc446, testMethod = filtersByLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.091 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.091 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.093 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.094 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>1073L
23:21:59.094 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1073L'

23:21:59.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1073'

23:21:59.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id>1073L
23:21:59.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id>1073
23:21:59.097 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1e9cc446, testMethod = filtersByLongValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.098 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@46f77687, testMethod = filtersByEnumValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.099 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.099 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.100 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.101 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>:param0
23:21:59.101 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:59.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender>:param0
23:21:59.103 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender>?
23:21:59.108 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@46f77687, testMethod = filtersByEnumValue@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.109 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1ddf5237, testMethod = filtersByEnumString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.109 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.109 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.111 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>:param0
23:21:59.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@1a44d89b}

23:21:59.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString>:param0
23:21:59.112 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string>?
23:21:59.117 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@1ddf5237, testMethod = filtersByEnumString@GreaterThanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.118 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@40904969, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.118 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.118 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.120 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.122 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@40904969, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.123 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4d17ce84, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.124 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.124 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.125 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.127 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@4d17ce84, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.129 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@6948460f, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.129 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.129 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.131 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.135 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7bc27f7e testClass = GreaterThanTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.GreaterThanTest@6948460f, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@7a4154c testClass = GreaterThanTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.157 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotInTest
23:21:59.137 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.137 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@23ebd596, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2f8b373f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2e1bbf2a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3a0f0552, org.springframework.test.context.support.DirtiesContextTestExecutionListener@47b530e0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3171c5e6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4260de0d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@876686, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6e5b7446, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@513ad29e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@15eefe02, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2ee6196f]
23:21:59.139 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@2e259c54, testMethod = filtersWithTwoEnumValues@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.139 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.139 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.140 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.141 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0, :param1)
23:21:59.141 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:59.142 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:59.142 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender not in (:param0, :param1)
23:21:59.142 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender not in  (? , ?)
23:21:59.144 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@2e259c54, testMethod = filtersWithTwoEnumValues@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.145 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@6f3b07ed, testMethod = filtersByLongValue_withAdditionalNonExistingValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.145 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.145 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.147 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.147 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (12345L, 1099L, 1100L)
23:21:59.147 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '12345L'
             +-[NUM_LONG] Node: '1099L'
             \-[NUM_LONG] Node: '1100L'

23:21:59.148 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '12345'
             +-[NUM_LONG] LiteralNode: '1099'
             \-[NUM_LONG] LiteralNode: '1100'

23:21:59.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (12345L, 1099L, 1100L)
23:21:59.149 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (12345 , 1099 , 1100)
23:21:59.151 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@6f3b07ed, testMethod = filtersByLongValue_withAdditionalNonExistingValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.152 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@7896b4d0, testMethod = filtersByDateWithDefaultDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.153 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.153 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.154 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.157 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0)
23:21:59.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'registrationDate'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:59.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:59.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.registrationDate not in (:param0)
23:21:59.158 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date not in  (?)
23:21:59.168 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@7896b4d0, testMethod = filtersByDateWithDefaultDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.169 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@4b5e664f, testMethod = filtersByString@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.169 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.169 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.172 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
23:21:59.173 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0, :param1)
23:21:59.174 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:59.174 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.174 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0, :param1)
23:21:59.174 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not in  (? , ?)
23:21:59.176 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0)
23:21:59.176 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:59.177 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.177 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName not in (:param0)
23:21:59.177 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name not in  (?)
23:21:59.179 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@4b5e664f, testMethod = filtersByString@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.180 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5f18ed13, testMethod = filterByDateWithCustomDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.180 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.180 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.182 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.185 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@5f18ed13, testMethod = filterByDateWithCustomDateFormat@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.186 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@4d4630e, testMethod = filtersByEnumValue_singleValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.186 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.186 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.188 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.192 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@4d4630e, testMethod = filtersByEnumValue_singleValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.193 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@30012b46, testMethod = filtersByBooleanValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.194 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.194 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.195 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.196 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold not in (:param0)
23:21:59.196 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:59.197 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:59.197 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold not in (:param0)
23:21:59.197 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold not in  (?)
23:21:59.199 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@30012b46, testMethod = filtersByBooleanValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.200 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@1d9f9c9d, testMethod = filtersByIntegerValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.200 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.200 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.202 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.202 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight not in (121, 65)
23:21:59.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_INT] Node: '121'
             \-[NUM_INT] Node: '65'

23:21:59.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_INT] LiteralNode: '121'
             \-[NUM_INT] LiteralNode: '65'

23:21:59.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight not in (121, 65)
23:21:59.203 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight not in  (121 , 65)
23:21:59.208 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@1d9f9c9d, testMethod = filtersByIntegerValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.209 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@34538dde, testMethod = filtersByLongValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.210 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.210 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.211 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.212 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (1127L, 1128L)
23:21:59.212 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[IN_LIST] Node: 'inList'
             +-[NUM_LONG] Node: '1127L'
             \-[NUM_LONG] Node: '1128L'

23:21:59.215 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NUM_LONG] LiteralNode: '1127'
             \-[NUM_LONG] LiteralNode: '1128'

23:21:59.215 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id not in (1127L, 1128L)
23:21:59.215 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id not in  (1127 , 1128)
23:21:59.217 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@604c8ed5 testClass = NotInTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotInTest@34538dde, testMethod = filtersByLongValue@NotInTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd01716 testClass = NotInTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest
23:21:59.219 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.220 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7cf6ea5b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@ff8df3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@617e67f1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6e14a376, org.springframework.test.context.support.DirtiesContextTestExecutionListener@25fb28dd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5917b984, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4bc40cb8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@8019a5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7c4164a8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@18fe293d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@73344756, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@737935a4]
23:21:59.222 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@5162ccc9, testMethod = rejectsInvalidNumberOfArguments@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.222 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.222 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.224 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.227 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@5162ccc9, testMethod = rejectsInvalidNumberOfArguments@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.228 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@77a3c614, testMethod = rejectsMissingArgument@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.228 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.228 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.230 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.231 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@77a3c614, testMethod = rejectsMissingArgument@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.232 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@3c02b068, testMethod = filtersByNestedProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.232 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.232 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.234 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.236 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@3c02b068, testMethod = filtersByNestedProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.237 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@2efb1871, testMethod = filtersByFirstLevelProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.238 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.238 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.239 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.242 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6852f1d testClass = EndingWithTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EndingWithTest@2efb1871, testMethod = filtersByFirstLevelProperty@EndingWithTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1c72366e testClass = EndingWithTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest
23:21:59.248 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.248 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4b8d9b97, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5284d7f2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@52ce11b5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7522ea53, org.springframework.test.context.support.DirtiesContextTestExecutionListener@52d48643, org.springframework.test.context.transaction.TransactionalTestExecutionListener@269bf0ac, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@47a0e73, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@66e81cdd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@10f868dd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@691ff4fe, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3d426638, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1b6a9bb9]
23:21:59.250 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@4aca6d5a, testMethod = filtersByPrimitiveBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.251 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.251 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.253 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.253 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<=:param0
23:21:59.254 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gold'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:59.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gold<=:param0
23:21:59.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold<=?
23:21:59.259 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@4aca6d5a, testMethod = filtersByPrimitiveBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.260 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@4db5663b, testMethod = filtersByDoubleValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.261 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.261 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.263 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.264 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=65.21D
23:21:59.266 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '65.21D'

23:21:59.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '65.21'

23:21:59.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=65.21D
23:21:59.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<=65.21
23:21:59.269 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=55.2D
23:21:59.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightDouble'
          \-[NUM_DOUBLE] Node: '55.2D'

23:21:59.271 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_double' {propertyName=weightDouble,dereferenceType=PRIMITIVE,getPropertyPath=weightDouble,path=generatedAlias0.weightDouble,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightDouble' {originalText=weightDouble}
          \-[NUM_DOUBLE] LiteralNode: '55.2'

23:21:59.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightDouble<=55.2D
23:21:59.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_double<=55.2
23:21:59.274 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@4db5663b, testMethod = filtersByDoubleValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.276 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@471e3e69, testMethod = filtersByPrimitiveLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.276 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.277 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.278 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.279 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<=55L
23:21:59.282 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightLong'
          \-[NUM_LONG] Node: '55L'

23:21:59.283 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_long' {propertyName=weightLong,dereferenceType=PRIMITIVE,getPropertyPath=weightLong,path=generatedAlias0.weightLong,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightLong' {originalText=weightLong}
          \-[NUM_LONG] LiteralNode: '55'

23:21:59.283 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightLong<=55L
23:21:59.283 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_long<=55
23:21:59.286 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@471e3e69, testMethod = filtersByPrimitiveLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.288 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1a5cb2b3, testMethod = filtersByPrimitiveIntValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.289 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.289 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.303 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 14 ms
23:21:59.304 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<=55
23:21:59.304 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightInt'
          \-[NUM_INT] Node: '55'

23:21:59.305 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_int' {propertyName=weightInt,dereferenceType=PRIMITIVE,getPropertyPath=weightInt,path=generatedAlias0.weightInt,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightInt' {originalText=weightInt}
          \-[NUM_INT] LiteralNode: '55'

23:21:59.305 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightInt<=55
23:21:59.305 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_int<=55
23:21:59.308 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1a5cb2b3, testMethod = filtersByPrimitiveIntValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.310 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@c1add62, testMethod = filtersByDateWithDefaultDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.311 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.311 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.313 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.317 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@c1add62, testMethod = filtersByDateWithDefaultDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.318 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7c269f21, testMethod = filtersByString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.319 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.319 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.320 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<=:param0
23:21:59.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName<=:param0
23:21:59.321 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name<=?
23:21:59.334 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7c269f21, testMethod = filtersByString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.336 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7b6cb223, testMethod = filterByDateWithCustomDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.336 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.336 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.338 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.341 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@7b6cb223, testMethod = filterByDateWithCustomDateFormat@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.342 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2541c84, testMethod = filtersByPrimitiveFloatValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.342 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.342 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.344 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.345 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=65.1F
23:21:59.345 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '65.1F'

23:21:59.345 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '65.1'

23:21:59.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=65.1F
23:21:59.346 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<=65.1
23:21:59.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=55.1F
23:21:59.347 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weightFloat'
          \-[NUM_FLOAT] Node: '55.1F'

23:21:59.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight_float' {propertyName=weightFloat,dereferenceType=PRIMITIVE,getPropertyPath=weightFloat,path=generatedAlias0.weightFloat,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weightFloat' {originalText=weightFloat}
          \-[NUM_FLOAT] LiteralNode: '55.1'

23:21:59.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weightFloat<=55.1F
23:21:59.348 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight_float<=55.1
23:21:59.349 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@2541c84, testMethod = filtersByPrimitiveFloatValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.350 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@37df3dee, testMethod = filtersByBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.351 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.351 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.352 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<=:param0
23:21:59.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'goldObj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gold_obj' {propertyName=goldObj,dereferenceType=PRIMITIVE,getPropertyPath=goldObj,path=generatedAlias0.goldObj,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'goldObj' {originalText=goldObj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}

23:21:59.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.goldObj<=:param0
23:21:59.353 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold_obj<=?
23:21:59.356 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@37df3dee, testMethod = filtersByBooleanValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.357 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6a056d13, testMethod = filtersByIntegerValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.357 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.357 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.359 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.359 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<=55
23:21:59.359 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'weight'
          \-[NUM_INT] Node: '55'

23:21:59.360 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          \-[NUM_INT] LiteralNode: '55'

23:21:59.360 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.weight<=55
23:21:59.360 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.weight<=55
23:21:59.361 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6a056d13, testMethod = filtersByIntegerValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.362 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1e35e4d9, testMethod = filtersByLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.363 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.363 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.364 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<=1185L
23:21:59.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1185L'

23:21:59.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1185'

23:21:59.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<=1185L
23:21:59.366 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<=1185
23:21:59.367 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@1e35e4d9, testMethod = filtersByLongValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.368 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@3a8f9d53, testMethod = filtersByEnumValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.369 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.369 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.370 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.371 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<=:param0
23:21:59.371 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.372 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:59.372 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender<=:param0
23:21:59.372 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender<=?
23:21:59.374 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@3a8f9d53, testMethod = filtersByEnumValue@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.375 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@44a65503, testMethod = filtersByEnumString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.376 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.376 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.377 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.377 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<=:param0
23:21:59.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LE] Node: '<='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genderAsString'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'customer0_.gender_as_string' {propertyName=genderAsString,dereferenceType=PRIMITIVE,getPropertyPath=genderAsString,path=generatedAlias0.genderAsString,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'genderAsString' {originalText=genderAsString}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@1a44d89b}

23:21:59.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.genderAsString<=:param0
23:21:59.378 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender_as_string<=?
23:21:59.381 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@44a65503, testMethod = filtersByEnumString@LessThanOrEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.382 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@774e5726, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.382 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.382 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.383 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.385 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@774e5726, testMethod = rejectsNotExistingEnumConstantName@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.386 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@648be86e, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.386 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.387 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.389 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@648be86e, testMethod = rejectsNonIntegerArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.390 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6cee59d6, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.390 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.390 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.392 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.393 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f0c27dc testClass = LessThanOrEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.LessThanOrEqualTest@6cee59d6, testMethod = rejectsNonNumericArguments@ComparableTestBase, testException = org.springframework.dao.InvalidDataAccessApiUsageException: number format exception; nested exception is ValueRejectedException: number format exception, mergedContextConfiguration = [WebMergedContextConfiguration@5c6e4d6b testClass = LessThanOrEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.16 sec
Running net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest
23:21:59.394 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.395 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5710fcdf, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@50c903e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7b95469, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@63782ad0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@33ded464, org.springframework.test.context.transaction.TransactionalTestExecutionListener@52b23f41, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1f652362, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3de9a4f4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@78513ad9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b5a4aa5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@d12009f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7d2ccbcd]
23:21:59.396 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3a571436, testMethod = filtersByStringCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.397 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.397 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.398 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.399 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)=:param0
23:21:59.399 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.399 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.399 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.lastName)=:param0
23:21:59.399 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.last_name)=?
23:21:59.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)=:param0
23:21:59.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias0'
          |        \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.401 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where upper(generatedAlias0.firstName)=:param0
23:21:59.402 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name)=?
23:21:59.403 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3a571436, testMethod = filtersByStringCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.404 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@4e260e04, testMethod = filtersByEnumCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.405 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.405 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.406 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.409 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@4e260e04, testMethod = filtersByEnumCaseInsensitive@EqualIgnoreCaseTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.410 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@65747311, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.410 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.410 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.411 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.414 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@65747311, testMethod = filtersByPrimitiveBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.415 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2f539c9b, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.415 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.415 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.417 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.418 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2f539c9b, testMethod = rejectsNotExistingEnumConstantName@EqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.419 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@1e7a20d5, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.420 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.420 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.421 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.423 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@1e7a20d5, testMethod = filtersByPrimitiveLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.424 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@4ba97a4, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.425 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.425 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.426 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.428 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@4ba97a4, testMethod = filtersByPrimitiveIntValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.429 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7fb7be26, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.429 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.429 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.431 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.433 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@7fb7be26, testMethod = filtersByDouble@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.434 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@39122753, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.434 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.434 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.436 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.438 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@39122753, testMethod = filtersByDateWithDefaultDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.439 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@d72ec1b, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.440 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.440 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.441 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.444 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@d72ec1b, testMethod = filtersByString@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.448 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3f608bde, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.449 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.449 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.450 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.452 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@3f608bde, testMethod = filterByDateWithCustomDateFormat@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.454 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2b48931b, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.454 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.454 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.456 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.458 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@2b48931b, testMethod = filtersByBooleanValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.460 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@152d019b, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.461 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.461 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.463 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.465 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@152d019b, testMethod = filtersByIntegerValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.466 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@51713b0f, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.467 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.467 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.468 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1255L
23:21:59.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1255L'

23:21:59.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1255'

23:21:59.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1255L
23:21:59.469 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1255
23:21:59.471 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@51713b0f, testMethod = filtersByLongValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.472 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@40f923da, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.472 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.472 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.474 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.477 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@63dee1b7 testClass = EqualIgnoreCaseTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.EqualIgnoreCaseTest@40f923da, testMethod = filtersByEnumValue@EqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@398072c6 testClass = EqualIgnoreCaseTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 15, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.075 sec
Running net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest
23:21:59.478 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.479 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@245b080c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@33650388, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5a575e30, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@d1a17cc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@71fd650b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6a9f41ff, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ad92442, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@57a0f6a2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4d6f0460, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5def348b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1ed7e040, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4e1210de]
23:21:59.480 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@17b59bc, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.480 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.480 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.482 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.484 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@17b59bc, testMethod = filtersByPrimitiveBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.485 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@2e7d71d9, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.485 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.485 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.487 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.488 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@2e7d71d9, testMethod = rejectsNotExistingEnumConstantName@NotEqualTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: could not find value ROBOT for enum class Gender; nested exception is ValueRejectedException: could not find value ROBOT for enum class Gender, mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.489 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@6170aa63, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.490 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.490 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.491 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.493 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@6170aa63, testMethod = filtersByPrimitiveLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.494 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4a3ebba6, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.494 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.494 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.496 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.498 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@4a3ebba6, testMethod = filtersByPrimitiveIntValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.499 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@58ba1195, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.499 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.499 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.501 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.503 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@58ba1195, testMethod = filtersByDouble@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.504 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@41e5664e, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.504 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.504 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.506 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.508 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@41e5664e, testMethod = filtersByDateWithDefaultDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.509 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7787fce1, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.509 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.509 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.511 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.513 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7787fce1, testMethod = filtersByString@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.514 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@29063116, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.514 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.514 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.516 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.518 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@29063116, testMethod = filterByDateWithCustomDateFormat@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.519 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@355ea7fc, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.519 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.519 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.521 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.523 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@355ea7fc, testMethod = filtersByBooleanValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.524 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@67ee3b1, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.524 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.524 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.526 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.528 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@67ee3b1, testMethod = filtersByIntegerValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.529 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7f888518, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.529 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.529 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.531 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.531 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>1293L
23:21:59.531 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1293L'

23:21:59.532 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1293'

23:21:59.532 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>1293L
23:21:59.532 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>1293
23:21:59.533 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@7f888518, testMethod = filtersByLongValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.534 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@53722f45, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.535 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.535 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.536 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.539 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20ba3c52 testClass = NotEqualTest, testInstance = net.kaczmarzyk.spring.data.jpa.domain.NotEqualTest@53722f45, testMethod = filtersByEnumValue@NotEqualTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7dcc6b08 testClass = NotEqualTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 sec
Running net.kaczmarzyk.EqualIgnoreCaseE2eTest
23:21:59.540 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.540 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@12c2135e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@235b8132, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@30f94b64, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2fc3d28, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2686ca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7f0bd5ed, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d30303, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@66257bec, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5281b134, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7384b234, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6e526c5c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@23e58061]
23:21:59.541 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20f7197f testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@521090f1, testMethod = findsByStringValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54db2ab9 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.542 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.542 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.543 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.543 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.543 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.545 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.548 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20f7197f testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@521090f1, testMethod = findsByStringValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54db2ab9 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.549 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@20f7197f testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@189faf12, testMethod = findsByEnumValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54db2ab9 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.549 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.549 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.551 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.551 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.551 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.553 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.556 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@20f7197f testClass = EqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.EqualIgnoreCaseE2eTest@189faf12, testMethod = findsByEnumValueIgnoringCase@EqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54db2ab9 testClass = EqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running net.kaczmarzyk.ParamSeparatorE2eTest
23:21:59.557 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.557 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2f499565, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7a2256bb, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2ee18aca, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1300bc97, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7001e12f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@187ee61a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3a6b8805, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2c997fdb, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@536efbfe, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3ccf89bf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5a021583, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3d02debf]
23:21:59.559 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1ac74499 testClass = ParamSeparatorE2eTest, testInstance = net.kaczmarzyk.ParamSeparatorE2eTest@6fff29f4, testMethod = doesNoFilteringIfParameterUsingParamSeparatorIsMissing@ParamSeparatorE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@75897392 testClass = ParamSeparatorE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.559 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.559 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.561 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.562 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0
23:21:59.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'net'
       |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'Customer'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:21:59.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}

23:21:59.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0
23:21:59.563 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_
23:21:59.570 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1ac74499 testClass = ParamSeparatorE2eTest, testInstance = net.kaczmarzyk.ParamSeparatorE2eTest@6fff29f4, testMethod = doesNoFilteringIfParameterUsingParamSeparatorIsMissing@ParamSeparatorE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@75897392 testClass = ParamSeparatorE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running net.kaczmarzyk.LikeE2eTest
23:21:59.571 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.572 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@381a4407, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6169de0c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4e06d526, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7d707e72, org.springframework.test.context.support.DirtiesContextTestExecutionListener@17a027a7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@381602e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@40c14f20, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3e3c2aa4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@28b7afdb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@203ea126, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6acc424e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@357a3cb9]
23:21:59.573 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@dfee4f1 testClass = LikeE2eTest, testInstance = net.kaczmarzyk.LikeE2eTest@59de6f39, testMethod = filtersByFirstName@LikeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@32016cf3 testClass = LikeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.573 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.573 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.575 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.582 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@dfee4f1 testClass = LikeE2eTest, testInstance = net.kaczmarzyk.LikeE2eTest@59de6f39, testMethod = filtersByFirstName@LikeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@32016cf3 testClass = LikeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.NullE2eTest
23:21:59.584 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.584 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1f122485, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7fd9d86, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@413d2d3e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@9addea4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@715e518, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6c6f49d1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4493ddbf, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@23ac7377, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@bb96f3f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d0e8e58, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@47aac663, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7dd322a]
23:21:59.586 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@6ef0e08f, testMethod = findsEntitiesWithNoFiltering@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.586 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.586 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.588 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.600 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@6ef0e08f, testMethod = findsEntitiesWithNoFiltering@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.601 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@4ef6a2fd, testMethod = findsEntitiesWithNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.602 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.602 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.603 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.610 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@4ef6a2fd, testMethod = findsEntitiesWithNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.611 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@6f37fb78, testMethod = findsEntitiesWithNotNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.611 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.611 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.613 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.619 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e7011b5 testClass = NullE2eTest, testInstance = net.kaczmarzyk.NullE2eTest@6f37fb78, testMethod = findsEntitiesWithNotNullAttributeValue@NullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@505b5ddc testClass = NullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 sec
Running net.kaczmarzyk.TypeMismatchE2eTest
23:21:59.621 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.621 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3a87c694, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ddb3312, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1d8f923f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@534b0af3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@57fcc568, org.springframework.test.context.transaction.TransactionalTestExecutionListener@43ab3f26, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@22d45306, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2943c93d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@18a59ef8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@26dc0c5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@221ffed, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@351cc4b5]
23:21:59.623 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@5f8b60f3, testMethod = returnsEmptyResultIfStringProvidedInsteadOfNumericalId@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.623 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.623 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.625 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.630 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@5f8b60f3, testMethod = returnsEmptyResultIfStringProvidedInsteadOfNumericalId@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.631 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@1050f49, testMethod = returnsEmptyResultIfNoneOfTheValuesAreValidEnums@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.631 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.631 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.633 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.634 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in ()
23:21:59.634 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'gender'
          \-[IN_LIST] Node: 'inList'

23:21:59.635 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          \-[IN_LIST] SqlNode: 'inList'

23:21:59.635 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.gender in ()
23:21:59.635 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender in ()
23:21:59.638 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@1050f49, testMethod = returnsEmptyResultIfNoneOfTheValuesAreValidEnums@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.639 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@1ad66c9d, testMethod = throwsExceptionIfOneOfSpecifiedEnumValuesIsInvalid@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.640 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.640 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.641 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.646 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@1ad66c9d, testMethod = throwsExceptionIfOneOfSpecifiedEnumValuesIsInvalid@TypeMismatchE2eTest, testException = org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: invalid values present in the HTTP param; nested exception is class net.kaczmarzyk.spring.data.jpa.utils.Converter$ValuesRejectedException: invalid values present in the HTTP param, mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.647 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@7766f1c1, testMethod = filtersOnlyByValidEnumValuesIfEmptyResultOnTypeMismatchBehaviourSpecified@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.647 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.647 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.648 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.654 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@7766f1c1, testMethod = filtersOnlyByValidEnumValuesIfEmptyResultOnTypeMismatchBehaviourSpecified@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.655 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@3f5a8ea5, testMethod = findsByEitherIdOrNameEvenThoughTheirTypesAreDifferent@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.656 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.656 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.657 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.659 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( 0=1 ) or ( upper(generatedAlias0.firstName) like :param0 )
23:21:59.659 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '0'
          |  \-[NUM_INT] Node: '1'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:59.660 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '0'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.660 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( 0=1 ) or ( upper(generatedAlias0.firstName) like :param0 )
23:21:59.660 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where 0=1 or upper(customer0_.first_name) like ?
23:21:59.664 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.id=1516L ) or ( upper(generatedAlias0.firstName) like :param0 )
23:21:59.664 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'id'
          |  \-[NUM_LONG] Node: '1516L'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

23:21:59.665 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NUM_LONG] LiteralNode: '1516'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.665 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.id=1516L ) or ( upper(generatedAlias0.firstName) like :param0 )
23:21:59.665 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1516 or upper(customer0_.first_name) like ?
23:21:59.668 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@620b0fad testClass = TypeMismatchE2eTest, testInstance = net.kaczmarzyk.TypeMismatchE2eTest@3f5a8ea5, testMethod = findsByEitherIdOrNameEvenThoughTheirTypesAreDifferent@TypeMismatchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5881d8da testClass = TypeMismatchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec
Running net.kaczmarzyk.OrE2eTest
23:21:59.669 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.669 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@42a1c3ba, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4c1ea0ab, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@33299272, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6bafbab8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@27df0864, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1efdefcc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@61b85463, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@77544896, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2817f230, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5965eb71, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7a5db772, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2f985057]
23:21:59.671 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4134db1e testClass = OrE2eTest, testInstance = net.kaczmarzyk.OrE2eTest@6b0e9e, testMethod = findsByFullName@OrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58984698 testClass = OrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.671 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.671 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.673 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.674 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( upper(generatedAlias0.firstName) like :param0 ) or ( upper(generatedAlias0.lastName) like :param1 )
23:21:59.675 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'upper'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'generatedAlias0'
          |  |        \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:59.675 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.675 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( upper(generatedAlias0.firstName) like :param0 ) or ( upper(generatedAlias0.lastName) like :param1 )
23:21:59.675 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where upper(customer0_.first_name) like ? or upper(customer0_.last_name) like ?
23:21:59.680 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4134db1e testClass = OrE2eTest, testInstance = net.kaczmarzyk.OrE2eTest@6b0e9e, testMethod = findsByFullName@OrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@58984698 testClass = OrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running net.kaczmarzyk.NotNullE2eTest
23:21:59.681 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.681 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6ba68981, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3f64099c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1c08cd61, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@253646c2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7a832964, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6534e741, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f8d5d43, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@281a0c26, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4bb1d848, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@9fd2090, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5ccf13a9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@24cc4f2a]
23:21:59.683 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@12a148d0, testMethod = findsEntitiesWithNoNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.683 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.683 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.685 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.691 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@12a148d0, testMethod = findsEntitiesWithNoNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.692 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@7ef2f14e, testMethod = findsEntitiesWithNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.692 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.692 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.694 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.700 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@7ef2f14e, testMethod = findsEntitiesWithNickname@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.700 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@52f93a84, testMethod = findsAllEntities@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.701 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.701 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.702 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.709 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@43874d7f testClass = NotNullE2eTest, testInstance = net.kaczmarzyk.NotNullE2eTest@52f93a84, testMethod = findsAllEntities@NotNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@19fd0299 testClass = NotNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec
Running net.kaczmarzyk.ComparableE2eTest
23:21:59.711 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.711 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@69f4fa56, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5a31d662, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@356be87, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6513699d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2bfb0923, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fad58f8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4939730c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3798a437, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@445911f6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5126fb1d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@53055326, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@21cefc6d]
23:21:59.712 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@4e637cdf, testMethod = filtersByRegistrationDateRange_customDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.713 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.713 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.714 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate>=:param0 ) and ( generatedAlias0.registrationDate<=:param1 )
23:21:59.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'registrationDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:59.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:21:59.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate>=:param0 ) and ( generatedAlias0.registrationDate<=:param1 )
23:21:59.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date>=? and customer0_.registration_date<=?
23:21:59.721 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@4e637cdf, testMethod = filtersByRegistrationDateRange_customDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.722 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@7b1c2bf7, testMethod = findsByNameRange@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.722 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.722 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.724 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.725 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName>=:param0 ) and ( generatedAlias0.firstName<=:param1 )
23:21:59.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GE] Node: '>='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:59.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GE] BinaryLogicOperatorNode: '>='
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName>=:param0 ) and ( generatedAlias0.firstName<=:param1 )
23:21:59.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name>=? and customer0_.first_name<=?
23:21:59.730 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@7b1c2bf7, testMethod = findsByNameRange@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.731 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@7f6f4644, testMethod = filtersByRegistrationDateRange_defaultDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.731 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.732 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.733 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.738 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bf5ced8 testClass = ComparableE2eTest, testInstance = net.kaczmarzyk.ComparableE2eTest@7f6f4644, testMethod = filtersByRegistrationDateRange_defaultDateFormat@ComparableE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8ecabb testClass = ComparableE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec
Running net.kaczmarzyk.JoinFetchE2eTest
23:21:59.740 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.740 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@46329e85, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@e840be5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@58f036de, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@72ef3f9b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@207b41f5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@e8ebd3c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@57913cf5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5c89c27b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@260754f6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5d1b7a57, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b38395, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@113b0382]
23:21:59.741 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@1b904438, testMethod = createsNotDistinctQueryIfDistinctAttributeIsSetToFalse@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.742 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.742 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.743 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.745 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:21:59.745 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.746 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.746 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:21:59.746 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.first_name=?
23:21:59.750 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@1b904438, testMethod = createsNotDistinctQueryIfDistinctAttributeIsSetToFalse@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.751 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@38f0bba, testMethod = createsDistinctQueryByDefault@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.752 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.752 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.753 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.755 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:21:59.755 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.756 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.756 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.firstName=:param0
23:21:59.756 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.first_name=?
23:21:59.759 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@38f0bba, testMethod = createsDistinctQueryByDefault@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.760 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@159c804c, testMethod = findsByLastNameWithPagination@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.761 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.761 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.762 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.764 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.lastName=:param0 order by generatedAlias0.id asc
23:21:59.764 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'lastName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:59.765 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'badges1_.id as id1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:59.765 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.badges as generatedAlias1 where generatedAlias0.lastName=:param0 order by generatedAlias0.id asc
23:21:59.765 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, badges1_.id as id1_0_1_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, badges1_.badge_type as badge_ty2_0_1_, badges1_.customer_id as customer3_0_1_, badges1_.customer_id as customer3_0_0__, badges1_.id as id1_0_0__ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id where customer0_.last_name=? order by customer0_.id asc
23:21:59.767 [main] WARN  o.h.h.i.ast.QueryTranslatorImpl - HHH000104: firstResult/maxResults specified with collection fetch; applying in memory!
23:21:59.767 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:59.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastName=:param0
23:21:59.768 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ where customer0_.last_name=?
23:21:59.773 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@710e1af6 testClass = JoinFetchE2eTest, testInstance = net.kaczmarzyk.JoinFetchE2eTest@159c804c, testMethod = findsByLastNameWithPagination@JoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@28ad61c1 testClass = JoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
Running net.kaczmarzyk.AvoidingRedundantJoinE2eTest
23:21:59.775 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.775 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@73226368, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@501f21fe, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@78aa11f2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7c57c200, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1c0ed7c1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@35b7156f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1dbaa7aa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5f3f31df, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@35e55526, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@38f42298, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@703b55db, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@562c23ca]
23:21:59.776 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@7b32e17b, testMethod = performsJoinOnlyIfUsedInFiltering@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.777 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.777 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.778 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.785 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 where ( generatedAlias1.name like :param0 ) and ( 1=1 )
23:21:59.785 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Movie'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'stars'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'name'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:21:59.786 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie,person,movie_stars)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[person2_, movie0_], fromElementsByPath=[generatedAlias0.stars], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Movie.stars,tableName=person,tableAlias=person2_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'person2_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=person2_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'person2_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person2_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:21:59.786 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 where ( generatedAlias1.name like :param0 ) and ( 1=1 )
23:21:59.786 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id where (person2_.name like ?) and 1=1
23:21:59.793 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@7b32e17b, testMethod = performsJoinOnlyIfUsedInFiltering@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.794 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@25b4304c, testMethod = performsEachJoinOnlyOnce@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.794 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.794 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.796 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.798 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 inner join generatedAlias0.directors as generatedAlias2 where ( ( generatedAlias1.name like :param0 ) and ( generatedAlias2.name like :param1 ) ) and ( 1=1 )
23:21:59.798 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Movie'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'stars'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'directors'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  \-[IDENT] Node: 'name'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'name'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:21:59.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie,person,movie_stars,movie_directors)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[person2_, person4_, movie0_], fromElementsByPath=[generatedAlias0.directors, generatedAlias0.stars], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Movie.stars,tableName=person,tableAlias=person2_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join movie_directors directors3_ on movie0_.id=directors3_.movie_id inner join person person4_ on directors3_.directors_id=person4_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Movie.directors,tableName=person,tableAlias=person4_,origin=movie movie0_,columns={movie0_.id ,className=net.kaczmarzyk.spring.data.jpa.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'person2_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=person2_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias1}
          |  |  |  +-[ALIAS_REF] IdentNode: 'person2_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person2_}
          |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'person4_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias2.name,tableAlias=person4_,className=net.kaczmarzyk.spring.data.jpa.Person,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'person4_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Person, tableAlias=person4_}
          |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:21:59.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 inner join generatedAlias0.stars as generatedAlias1 inner join generatedAlias0.directors as generatedAlias2 where ( ( generatedAlias1.name like :param0 ) and ( generatedAlias2.name like :param1 ) ) and ( 1=1 )
23:21:59.799 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ inner join movie_stars stars1_ on movie0_.id=stars1_.movie_id inner join person person2_ on stars1_.stars_id=person2_.id inner join movie_directors directors3_ on movie0_.id=directors3_.movie_id inner join person person4_ on directors3_.directors_id=person4_.id where (person2_.name like ?) and (person4_.name like ?) and 1=1
23:21:59.806 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@25b4304c, testMethod = performsEachJoinOnlyOnce@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.807 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@617f817a, testMethod = doesNotJoinAtAllIfFilteringNotAppliedOnJoinPaths@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.808 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.808 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.809 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.811 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 where 1=1
23:21:59.811 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Movie'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:21:59.812 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_3_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.name as name2_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Movie}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:21:59.812 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Movie as generatedAlias0 where 1=1
23:21:59.812 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct movie0_.id as id1_3_, movie0_.name as name2_3_ from movie movie0_ where 1=1
23:21:59.816 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1a18b66 testClass = AvoidingRedundantJoinE2eTest, testInstance = net.kaczmarzyk.AvoidingRedundantJoinE2eTest@617f817a, testMethod = doesNotJoinAtAllIfFilteringNotAppliedOnJoinPaths@AvoidingRedundantJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15990a52 testClass = AvoidingRedundantJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
Running net.kaczmarzyk.EqualE2eTest
23:21:59.817 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.817 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1ddf7d19, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@a809e74, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5bcc10fa, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1a8b3791, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7cdab66c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7227f4bd, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@49d761c3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@aa3e0d7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@23635e39, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6e2cd4f4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1c07798b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@9b79784]
23:21:59.818 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@2d06acfd, testMethod = findsByExactStringValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.819 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.819 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.820 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.822 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName=:param0
23:21:59.822 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.823 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.823 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName=:param0
23:21:59.823 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name=?
23:21:59.826 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@2d06acfd, testMethod = findsByExactStringValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.827 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@6d6cd631, testMethod = findsByExactDateValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.828 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.828 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.829 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.834 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@6d6cd631, testMethod = findsByExactDateValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.835 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@3bbed4fa, testMethod = findsByExactLongValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.836 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.836 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.837 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.839 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1920L
23:21:59.839 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '1920L'

23:21:59.839 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '1920'

23:21:59.839 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=1920L
23:21:59.839 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=1920
23:21:59.843 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@3bbed4fa, testMethod = findsByExactLongValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.844 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@347a171e, testMethod = findsByExactEnumValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.844 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.844 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.846 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.851 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7d950a61 testClass = EqualE2eTest, testInstance = net.kaczmarzyk.EqualE2eTest@347a171e, testMethod = findsByExactEnumValue@EqualE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@386ad5cb testClass = EqualE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
Running net.kaczmarzyk.NotEqualE2ETest
23:21:59.852 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.852 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2bae60e8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75321ba4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@746be7ac, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1f6b8c1f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@471a163a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2290ca46, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@9ed1f3f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4a256169, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5d1915d1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@797f26ce, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@180aca39, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@79c5de78]
23:21:59.854 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@26b63bbb, testMethod = findsByExactStringValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.854 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.854 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.856 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.857 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName<>:param0
23:21:59.857 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.858 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.858 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.firstName<>:param0
23:21:59.858 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name<>?
23:21:59.864 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@26b63bbb, testMethod = findsByExactStringValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.865 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@28a17e1, testMethod = findsByExactDateValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.865 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.865 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.867 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.872 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@28a17e1, testMethod = findsByExactDateValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.873 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@7a9f9364, testMethod = findsByExactLongValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.874 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.874 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.875 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.877 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>2012L
23:21:59.877 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2012L'

23:21:59.877 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2012'

23:21:59.878 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id<>2012L
23:21:59.878 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id<>2012
23:21:59.882 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@7a9f9364, testMethod = findsByExactLongValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.882 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@1f4fc447, testMethod = findsByExactEnumValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.883 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.883 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.884 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.890 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@755a9187 testClass = NotEqualE2ETest, testInstance = net.kaczmarzyk.NotEqualE2ETest@1f4fc447, testMethod = findsByExactEnumValue@NotEqualE2ETest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d4bf0dc testClass = NotEqualE2ETest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 sec
Running net.kaczmarzyk.PathVariableHandlingE2eTest
23:21:59.892 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.892 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@389a070e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@27241127, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5631baf5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5f546133, org.springframework.test.context.support.DirtiesContextTestExecutionListener@379ebfa0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@30b43d5d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6b89dfac, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@17287617, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5589b8ed, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@44c639d4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6197fa5f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@35dba0b4]
23:21:59.894 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@2eb37eee, testMethod = findsByIdProviedInPathVariableAndByRegularSpec@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.894 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.894 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.895 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.899 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 )
23:21:59.899 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:59.899 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@794b139b}

23:21:59.899 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 )
23:21:59.899 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=?
23:21:59.908 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@2eb37eee, testMethod = findsByIdProviedInPathVariableAndByRegularSpec@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.909 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@6a8ea39d, testMethod = findsByIdProvidedInPathVariableWithRegex@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.909 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.909 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.910 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.912 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2081L
23:21:59.913 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2081L'

23:21:59.913 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2081'

23:21:59.913 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2081L
23:21:59.913 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2081
23:21:59.917 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@6a8ea39d, testMethod = findsByIdProvidedInPathVariableWithRegex@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.917 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@16869348, testMethod = findsByIdProvidedInPathVariableWithRegexpWithRequestMappingAtClassLevel@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.918 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.918 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.919 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.921 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2104L
23:21:59.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2104L'

23:21:59.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2104'

23:21:59.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2104L
23:21:59.922 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2104
23:21:59.925 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@16869348, testMethod = findsByIdProvidedInPathVariableWithRegexpWithRequestMappingAtClassLevel@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.926 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@25847567, testMethod = findsByIdProvidedInPathVariable@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.927 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.927 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.928 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2127L
23:21:59.930 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_LONG] Node: '2127L'

23:21:59.931 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_LONG] LiteralNode: '2127'

23:21:59.931 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.id=2127L
23:21:59.931 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.id=2127
23:21:59.934 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@25847567, testMethod = findsByIdProvidedInPathVariable@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.935 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@76140476, testMethod = returnsHttp404WhenSentRequestContainsPathVarInInvalidFormat@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.935 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.935 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.937 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.941 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@29ed425e testClass = PathVariableHandlingE2eTest, testInstance = net.kaczmarzyk.PathVariableHandlingE2eTest@76140476, testMethod = returnsHttp404WhenSentRequestContainsPathVarInInvalidFormat@PathVariableHandlingE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@43fe629a testClass = PathVariableHandlingE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.05 sec
Running net.kaczmarzyk.ConjunctionE2eTest
23:21:59.942 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.942 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2e86dfc5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3b88b5f8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@bc8921c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@57336465, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4f53f1b1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@310abad6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7e1d8699, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3241c573, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@62cf74f3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6f7be76, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@14ccd97f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@281aecc8]
23:21:59.944 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6d4d4108 testClass = ConjunctionE2eTest, testInstance = net.kaczmarzyk.ConjunctionE2eTest@44bc7dc9, testMethod = findsByStreetAndFullName@ConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@365b1eb5 testClass = ConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.944 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.944 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.946 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.947 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.address.street like :param2 )
23:21:59.948 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'firstName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'address'
             |  \-[IDENT] Node: 'street'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:21:59.948 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
             |  \-[IDENT] IdentNode: 'street' {originalText=street}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.948 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.address.street like :param2 )
23:21:59.948 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.last_name like ?) and (customer0_.street like ?)
23:21:59.952 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:21:59.952 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'firstName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:21:59.953 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.953 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 )
23:21:59.953 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.first_name like ? or customer0_.last_name like ?
23:21:59.959 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6d4d4108 testClass = ConjunctionE2eTest, testInstance = net.kaczmarzyk.ConjunctionE2eTest@44bc7dc9, testMethod = findsByStreetAndFullName@ConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@365b1eb5 testClass = ConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running net.kaczmarzyk.NotEqualIgnoreCaseE2eTest
23:21:59.960 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.960 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3c929623, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@67b2ea33, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3891f024, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@667333f0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4ef88293, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3e6b1a0d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@9ccdd34, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@765f934e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7c397b0c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1ae4bdf4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@752ee6e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7fe1dee9]
23:21:59.962 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@28685f4f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@5677182f, testMethod = findsByEnumValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd00fce testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.962 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.962 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.964 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.964 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.964 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.965 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.968 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@28685f4f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@5677182f, testMethod = findsByEnumValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd00fce testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.969 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@28685f4f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@5196c8c0, testMethod = findsByStringValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd00fce testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.970 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.970 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.971 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.971 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.971 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:21:59.976 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@28685f4f testClass = NotEqualIgnoreCaseE2eTest, testInstance = net.kaczmarzyk.NotEqualIgnoreCaseE2eTest@5196c8c0, testMethod = findsByStringValueNotEqualIgnoringCase@NotEqualIgnoreCaseE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd00fce testClass = NotEqualIgnoreCaseE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running net.kaczmarzyk.JoinE2eTest
23:21:59.977 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:21:59.977 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@617b1e76, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4d0f96ac, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4f880f30, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7c9055e6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@45a16cac, org.springframework.test.context.transaction.TransactionalTestExecutionListener@74aa2842, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7bd44868, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5951d91, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4b1fd583, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6e520c9a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@371c8e30, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1ac864d7]
23:21:59.979 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@7931048d, testMethod = findsByOrders@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.979 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.979 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.980 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.982 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0 order by generatedAlias0.id asc
23:21:59.982 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[LIKE] Node: 'like'
    |     +-[METHOD_CALL] Node: '('
    |     |  +-[IDENT] Node: 'upper'
    |     |  \-[EXPR_LIST] Node: 'exprList'
    |     |     \-[DOT] Node: '.'
    |     |        +-[IDENT] Node: 'generatedAlias1'
    |     |        \-[IDENT] Node: 'itemName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:21:59.983 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[LIKE] BinaryLogicOperatorNode: 'like'
    |     +-[METHOD_CALL] MethodNode: '('
    |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |     |  \-[EXPR_LIST] SqlNode: 'exprList'
    |     |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:21:59.983 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0 order by generatedAlias0.id asc
23:21:59.983 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where upper(orders1_.item_name) like ? order by customer0_.id asc
23:21:59.987 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@7931048d, testMethod = findsByOrders@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.988 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@45cdfb42, testMethod = findsByOrdersWithPagination@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.989 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.989 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:21:59.990 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:21:59.994 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0
23:21:59.994 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'upper'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'generatedAlias1'
          |        \-[IDENT] Node: 'itemName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:21:59.994 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:21:59.995 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where upper(generatedAlias1.itemName) like :param0
23:21:59.995 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where upper(orders1_.item_name) like ?
23:21:59.998 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@45cdfb42, testMethod = findsByOrdersWithPagination@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:21:59.998 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1b5b5ac9, testMethod = resolvesJoinProperlyFromAnnotatedCustomInterface@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:21:59.999 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:21:59.999 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.007 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 8 ms
23:22:00.012 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName in (:param0) order by generatedAlias0.id asc
23:22:00.012 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias1'
    |     |  \-[IDENT] Node: 'itemName'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:00.013 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |     |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:00.013 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where generatedAlias1.itemName in (:param0) order by generatedAlias0.id asc
23:22:00.013 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where orders1_.item_name in (?) order by customer0_.id asc
23:22:00.016 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1b5b5ac9, testMethod = resolvesJoinProperlyFromAnnotatedCustomInterface@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.017 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@448dcc13, testMethod = createsDistinctQueryByDefault@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.018 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.018 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.019 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.021 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.itemName=:param1 ) order by generatedAlias0.id asc
23:22:00.021 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[OR] Node: 'or'
    |     +-[LIKE] Node: 'like'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'generatedAlias2'
    |     |  |  \-[IDENT] Node: 'itemName'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'param0'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'generatedAlias1'
    |        |  \-[IDENT] Node: 'itemName'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:00.022 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[OR] SqlNode: 'or'
    |     +-[LIKE] BinaryLogicOperatorNode: 'like'
    |     |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
    |     |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
    |     |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |        |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |        |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:00.022 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.itemName=:param1 ) order by generatedAlias0.id asc
23:22:00.022 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where orders2_.item_name like ? or orders1_.item_name=? order by customer0_.id asc
23:22:00.026 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@448dcc13, testMethod = createsDistinctQueryByDefault@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.027 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@47e4126a, testMethod = findsByOrdersAndName@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.027 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.027 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.029 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.030 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where ( generatedAlias0.firstName=:param0 ) and ( upper(generatedAlias1.itemName) like :param1 ) order by generatedAlias0.id asc
23:22:00.030 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'generatedAlias0'
    |     |  |  \-[IDENT] Node: 'firstName'
    |     |  \-[COLON] Node: ':'
    |     |     \-[IDENT] Node: 'param0'
    |     \-[LIKE] Node: 'like'
    |        +-[METHOD_CALL] Node: '('
    |        |  +-[IDENT] Node: 'upper'
    |        |  \-[EXPR_LIST] Node: 'exprList'
    |        |     \-[DOT] Node: '.'
    |        |        +-[IDENT] Node: 'generatedAlias1'
    |        |        \-[IDENT] Node: 'itemName'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:00.031 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_], fromElementsByPath=[generatedAlias0.orders], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
    |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |     |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
    |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    |     \-[LIKE] BinaryLogicOperatorNode: 'like'
    |        +-[METHOD_CALL] MethodNode: '('
    |        |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
    |        |  \-[EXPR_LIST] SqlNode: 'exprList'
    |        |     \-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
    |        |        +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
    |        |        \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:00.031 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 where ( generatedAlias0.firstName=:param0 ) and ( upper(generatedAlias1.itemName) like :param1 ) order by generatedAlias0.id asc
23:22:00.031 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id where customer0_.first_name=? and (upper(orders1_.item_name) like ?) order by customer0_.id asc
23:22:00.035 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@47e4126a, testMethod = findsByOrdersAndName@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.036 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1006d396, testMethod = filtersByAttributesOfMultipleJoins@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.036 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.036 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.038 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.040 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) order by generatedAlias0.id asc
23:22:00.041 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[NUM_INT] Node: '1'
    |     |  \-[NUM_INT] Node: '1'
    |     \-[OR] Node: 'or'
    |        +-[LIKE] Node: 'like'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'generatedAlias2'
    |        |  |  \-[IDENT] Node: 'itemName'
    |        |  \-[COLON] Node: ':'
    |        |     \-[IDENT] Node: 'param0'
    |        \-[EQ] Node: '='
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'generatedAlias1'
    |           |  \-[IDENT] Node: 'badgeType'
    |           \-[COLON] Node: ':'
    |              \-[IDENT] Node: 'param1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:00.041 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    +-[WHERE] SqlNode: 'where'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[NUM_INT] LiteralNode: '1'
    |     |  \-[NUM_INT] LiteralNode: '1'
    |     \-[OR] SqlNode: 'or'
    |        +-[LIKE] BinaryLogicOperatorNode: 'like'
    |        |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
    |        |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
    |        |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
    |        |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
    |        \-[EQ] BinaryLogicOperatorNode: '='
    |           +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
    |           |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
    |           |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
    |           \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:00.041 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) order by generatedAlias0.id asc
23:22:00.041 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where 1=1 and (orders2_.item_name like ? or badges1_.badge_type=?) order by customer0_.id asc
23:22:00.046 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@76fc0fa testClass = JoinE2eTest, testInstance = net.kaczmarzyk.JoinE2eTest@1006d396, testMethod = filtersByAttributesOfMultipleJoins@JoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6b4773ff testClass = JoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.069 sec
Running net.kaczmarzyk.ConstValsE2eTest
23:22:00.047 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.047 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3a09c65, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@38b6b4fb, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6e5d2207, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5f6ef272, org.springframework.test.context.support.DirtiesContextTestExecutionListener@582a1e4e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@55b678dc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@52fc2577, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7aa9b038, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@72f9194d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@146fff56, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@270ba731, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1094fb98]
23:22:00.048 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@5d589727, testMethod = filtersBySingleSpecWithMultipleConstVals@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.049 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.049 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.050 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.056 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@5d589727, testMethod = filtersBySingleSpecWithMultipleConstVals@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.056 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@36a2bc42, testMethod = filtersByConjunctionSpecWithConstValues@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.057 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.057 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.058 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.060 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.address.street=:param1 )
23:22:00.060 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'address'
             |  \-[IDENT] Node: 'street'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:00.061 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=PRIMITIVE,getPropertyPath=address.street,path=generatedAlias0.address.street,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'customer0_.street' {propertyName=street,dereferenceType=COMPONENT,getPropertyPath=address.street,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
             |  \-[IDENT] IdentNode: 'street' {originalText=street}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.061 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.address.street=:param1 )
23:22:00.061 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and customer0_.street=?
23:22:00.065 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@36a2bc42, testMethod = filtersByConjunctionSpecWithConstValues@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.065 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@63cbd058, testMethod = filtersBySingleSpecWithSingleConstVal@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.066 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.066 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.067 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.076 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7188b0db testClass = ConstValsE2eTest, testInstance = net.kaczmarzyk.ConstValsE2eTest@63cbd058, testMethod = filtersBySingleSpecWithSingleConstVal@ConstValsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@ca31114 testClass = ConstValsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running net.kaczmarzyk.DefaultSpELValE2eTest
23:22:00.078 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.078 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@169043e3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2a428e3b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@69faebc2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@12bbf99e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6203f71, org.springframework.test.context.transaction.TransactionalTestExecutionListener@382d4ad8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@63702e4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4b0d7cb5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4c511912, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1ef8f1ca, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2066f0d3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@aed8be]
23:22:00.080 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@4407b019, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:22:00.080 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.080 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.082 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.088 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@4407b019, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.089 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3c2fdd04, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:22:00.090 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.090 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.092 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.098 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3c2fdd04, testMethod = filtersBySingleSpecWithoutParamUsingRawSpELDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.098 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@66d358cc, testMethod = filtersBySingleSpecWithoutParamUsingRawStringDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:22:00.099 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.099 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.100 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.106 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@66d358cc, testMethod = filtersBySingleSpecWithoutParamUsingRawStringDefaultValue@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.107 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@349cde1a, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:22:00.107 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.107 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.109 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.115 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@349cde1a, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValWithPropertyPlaceholder@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.116 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3f7fbfba, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithTemporalConstructor@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:22:00.117 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.117 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.118 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.125 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@3f7fbfba, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpELWithTemporalConstructor@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.126 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@6c84fdaa, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpEL@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@9d10078]; rollback [true]
23:22:00.126 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.126 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.128 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.134 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1000dbea testClass = DefaultSpELValE2eTest, testInstance = net.kaczmarzyk.DefaultSpELValE2eTest@6c84fdaa, testMethod = filtersBySingleSpecWithoutParamUsingDefaultValInSpEL@DefaultSpELValE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d8264c9 testClass = DefaultSpELValE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithSARConfiguredWithApplicationContext}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:application.properties}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.058 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest
23:22:00.135 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.135 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7cdf5eed, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@15764a15, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@19d4057, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@647407b4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@625a05e1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@455bdd5d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2eafa259, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6aa2599f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@58e53c27, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@434fa353, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@10216c09, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@68b7a133]
23:22:00.137 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@50e43637, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.137 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.139 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 )
23:22:00.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:00.144 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@794b139b}

23:22:00.144 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) or ( generatedAlias0.firstName=:param1 ) ) and ( generatedAlias0.gender=:param2 )
23:22:00.144 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name=? or customer0_.first_name=?) and customer0_.gender=?
23:22:00.148 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@50e43637, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.149 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@c5ae854, testMethod = filtersAccordingToEmptyFilterExtendedByConjunctionSpecParam@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.149 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.149 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.151 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.158 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@c5ae854, testMethod = filtersAccordingToEmptyFilterExtendedByConjunctionSpecParam@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.159 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@231b1ae0, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.159 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.159 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.161 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.165 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.firstName like :param2 ) ) and ( ( ( generatedAlias0.lastName=:param3 ) or ( generatedAlias0.firstName=:param4 ) ) and ( generatedAlias0.gender=:param5 ) )
23:22:00.165 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[OR] Node: 'or'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'firstName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[AND] Node: 'and'
             +-[OR] Node: 'or'
             |  +-[EQ] Node: '='
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  |  \-[IDENT] Node: 'lastName'
             |  |  \-[COLON] Node: ':'
             |  |     \-[IDENT] Node: 'param3'
             |  \-[EQ] Node: '='
             |     +-[DOT] Node: '.'
             |     |  +-[IDENT] Node: 'generatedAlias0'
             |     |  \-[IDENT] Node: 'firstName'
             |     \-[COLON] Node: ':'
             |        \-[IDENT] Node: 'param4'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'gender'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param5'

23:22:00.166 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}
          \-[AND] SqlNode: 'and'
             +-[OR] SqlNode: 'or'
             |  +-[EQ] BinaryLogicOperatorNode: '='
             |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@52539624}
             |  \-[EQ] BinaryLogicOperatorNode: '='
             |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             |     \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@52539624}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param5, expectedType=org.hibernate.type.CustomType@794b139b}

23:22:00.166 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.firstName like :param2 ) ) and ( ( ( generatedAlias0.lastName=:param3 ) or ( generatedAlias0.firstName=:param4 ) ) and ( generatedAlias0.gender=:param5 ) )
23:22:00.166 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.first_name like ?) and (customer0_.first_name like ?) and (customer0_.last_name=? or customer0_.first_name=?) and customer0_.gender=?
23:22:00.170 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@231b1ae0, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.171 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@6271e058, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.171 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.171 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.173 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.181 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@51a862c testClass = AnnotatedSpecInterfaceConjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceConjunctionE2eTest@6271e058, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceConjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3a9fe0d4 testClass = AnnotatedSpecInterfaceConjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest
23:22:00.182 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.182 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@16987824, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3f3cacde, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7f1d809e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7991877f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2c9d9931, org.springframework.test.context.transaction.TransactionalTestExecutionListener@761d8a20, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6517ed0d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@10c834af, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@50dc7396, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4a0abf27, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@10af5cee, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@41937f18]
23:22:00.183 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@28a9f772 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest@21580cf2, testMethod = filtersAccordingToAnnotatedSpec@AnnotatedSpecInterfaceJoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@51b9ee5e testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.184 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.184 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.185 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.193 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@28a9f772 testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinFetchE2eTest@21580cf2, testMethod = filtersAccordingToAnnotatedSpec@AnnotatedSpecInterfaceJoinFetchE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@51b9ee5e testClass = AnnotatedSpecInterfaceJoinFetchE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest
23:22:00.194 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.194 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7e236f5f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7589fc89, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2977084e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@111698ac, org.springframework.test.context.support.DirtiesContextTestExecutionListener@74aa4446, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4efd93ee, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5f59d707, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7aafe7b8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5c0104df, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7ec19e52, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6f319f62, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6a26271b]
23:22:00.195 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@23fbc6b2, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.196 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.196 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.197 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.201 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 )
23:22:00.202 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gender'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:00.202 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.202 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 )
23:22:00.202 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? or customer0_.first_name like ?
23:22:00.206 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@23fbc6b2, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.207 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6bf552d2, testMethod = filtersAccordingToInterfaceWithOrSpecExtendedBySpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.208 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.208 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.209 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.211 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:22:00.211 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gender'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:00.211 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.212 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:22:00.212 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.gender=? or customer0_.first_name like ?) and customer0_.last_name=?
23:22:00.216 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6bf552d2, testMethod = filtersAccordingToInterfaceWithOrSpecExtendedBySpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.217 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6b2b46cf, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.218 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.218 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.219 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.227 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@6b2b46cf, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.228 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@7c90e595, testMethod = filtersAccordingToInterfaceWithOrSpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.228 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.228 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.230 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.235 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@7c90e595, testMethod = filtersAccordingToInterfaceWithOrSpecExtendingInterfaceWithOrSpec@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.236 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@4821b5f9, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.237 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.237 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.238 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.246 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b07ef24 testClass = AnnotatedSpecInterfaceOrE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceOrE2eTest@4821b5f9, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceOrE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1ba44388 testClass = AnnotatedSpecInterfaceOrE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest
23:22:00.247 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.247 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@63822d44, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@12d89095, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7f3f5a67, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@731a83bd, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1007897, org.springframework.test.context.transaction.TransactionalTestExecutionListener@578a1c1a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@526388ee, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7543fe74, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7785e48b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@70685cad, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3e828eb6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54d8774c]
23:22:00.249 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@3e65c397, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.249 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.249 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.250 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.weight in (50) ) and ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) )
23:22:00.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[IN] Node: 'in'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'weight'
          |  |  |  \-[IN_LIST] Node: 'inList'
          |  |  |     \-[NUM_INT] Node: '50'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[AND] Node: 'and'
             +-[EQ] Node: '='
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'gender'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param2'
             \-[LIKE] Node: 'like'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param3'

23:22:00.255 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[IN] InLogicOperatorNode: 'in'
          |  |  |  +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          |  |  |  \-[IN_LIST] SqlNode: 'inList'
          |  |  |     \-[NUM_INT] LiteralNode: '50'
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[AND] SqlNode: 'and'
             +-[EQ] BinaryLogicOperatorNode: '='
             |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@794b139b}
             \-[LIKE] BinaryLogicOperatorNode: 'like'
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.weight in (50) ) and ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) )
23:22:00.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.weight in (50)) and (customer0_.first_name like ?) and customer0_.last_name=? and customer0_.gender=? and (customer0_.first_name like ?)
23:22:00.259 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@3e65c397, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.260 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@7c5810e4, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.260 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.260 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.262 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.266 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 ) and ( upper(generatedAlias0.firstName) like :param3 )
23:22:00.266 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'gender'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'firstName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param3'

23:22:00.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 ) and ( upper(generatedAlias0.firstName) like :param3 )
23:22:00.267 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? and (customer0_.first_name like ?) and customer0_.last_name=? and (upper(customer0_.first_name) like ?)
23:22:00.270 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@7c5810e4, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.271 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@28f95943, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.272 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.272 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.273 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.275 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.weight in (50) ) and ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) ) and ( generatedAlias0.occupation like :param4 )
23:22:00.275 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[AND] Node: 'and'
          |  |  |  +-[IN] Node: 'in'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  |  \-[IDENT] Node: 'weight'
          |  |  |  |  \-[IN_LIST] Node: 'inList'
          |  |  |  |     \-[NUM_INT] Node: '50'
          |  |  |  \-[LIKE] Node: 'like'
          |  |  |     +-[DOT] Node: '.'
          |  |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |     |  \-[IDENT] Node: 'firstName'
          |  |  |     \-[COLON] Node: ':'
          |  |  |        \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'lastName'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[AND] Node: 'and'
          |     +-[EQ] Node: '='
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias0'
          |     |  |  \-[IDENT] Node: 'gender'
          |     |  \-[COLON] Node: ':'
          |     |     \-[IDENT] Node: 'param2'
          |     \-[LIKE] Node: 'like'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'firstName'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'param3'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'occupation'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param4'

23:22:00.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[AND] SqlNode: 'and'
          |  |  |  +-[IN] InLogicOperatorNode: 'in'
          |  |  |  |  +-[DOT] DotNode: 'customer0_.weight' {propertyName=weight,dereferenceType=PRIMITIVE,getPropertyPath=weight,path=generatedAlias0.weight,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  |  |  \-[IDENT] IdentNode: 'weight' {originalText=weight}
          |  |  |  |  \-[IN_LIST] SqlNode: 'inList'
          |  |  |  |     \-[NUM_INT] LiteralNode: '50'
          |  |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[AND] SqlNode: 'and'
          |     +-[EQ] BinaryLogicOperatorNode: '='
          |     |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.CustomType@794b139b}
          |     \-[LIKE] BinaryLogicOperatorNode: 'like'
          |        +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@52539624}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.occupation' {propertyName=occupation,dereferenceType=PRIMITIVE,getPropertyPath=occupation,path=generatedAlias0.occupation,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'occupation' {originalText=occupation}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.weight in (50) ) and ( generatedAlias0.firstName like :param0 ) and ( generatedAlias0.lastName=:param1 ) and ( ( generatedAlias0.gender=:param2 ) and ( generatedAlias0.firstName like :param3 ) ) and ( generatedAlias0.occupation like :param4 )
23:22:00.276 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.weight in (50)) and (customer0_.first_name like ?) and customer0_.last_name=? and customer0_.gender=? and (customer0_.first_name like ?) and (customer0_.occupation like ?)
23:22:00.279 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@28f95943, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpecAndExtendingInterfaceWithAndSpecExtendingAnotherInterfaceWithAndSpecAndExtendingParamSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.280 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@3daab09, testMethod = filtersAccordingToInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.280 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.280 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.282 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.290 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@3daab09, testMethod = filtersAccordingToInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.290 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@75b76c78, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.291 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.291 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.292 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:22:00.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gender'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:00.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.CustomType@794b139b}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gender=:param0 ) and ( generatedAlias0.firstName like :param1 ) ) and ( generatedAlias0.lastName=:param2 )
23:22:00.294 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gender=? and (customer0_.first_name like ?) and customer0_.last_name=?
23:22:00.298 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@75b76c78, testMethod = filtersAccordingToInterfaceWithAndSpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.299 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@445df038, testMethod = filtersAccordingToInterfaceWithoutAnySpecAndBySpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.299 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.299 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.301 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.309 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@445df038, testMethod = filtersAccordingToInterfaceWithoutAnySpecAndBySpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.310 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@64b6a7fb, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.310 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.310 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.311 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.319 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@64b6a7fb, testMethod = filtersAccordingToInterfaceWithoutAnySpecExtendingInterfaceWithAndSpec@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.320 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@4f80d322, testMethod = filtersAccordingToInterfaceWithAndSpecAndSpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.321 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.321 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.322 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.327 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6cdabac8 testClass = AnnotatedSpecInterfaceAndE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceAndE2eTest@4f80d322, testMethod = filtersAccordingToInterfaceWithAndSpecAndSpecParam@AnnotatedSpecInterfaceAndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@406287f2 testClass = AnnotatedSpecInterfaceAndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.081 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest
23:22:00.328 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.328 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6782d76e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@23466a0f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3e1e7aa2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@65ed2da6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@14a5bfd2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4a3b95b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@49251807, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@45a98c98, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ccbf0d0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@65bbf773, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@43f3ee3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@dfbbfb0]
23:22:00.330 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@5049c718, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.330 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.330 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.332 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.335 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 )
23:22:00.336 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'lastName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'gender'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:00.336 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@794b139b}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.336 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.lastName=:param0 ) and ( generatedAlias0.gender=:param1 ) ) or ( generatedAlias0.firstName=:param2 )
23:22:00.336 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_name=? and customer0_.gender=? or customer0_.first_name=?
23:22:00.370 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@5049c718, testMethod = filtersAccordingToInterfaceWithOrSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.371 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@6b569a0f, testMethod = filtersAccordingToEmptyFilterExtendedByDisjunctionSpecParam@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.371 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.371 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.373 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.381 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@6b569a0f, testMethod = filtersAccordingToEmptyFilterExtendedByDisjunctionSpecParam@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.382 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@6fc471a8, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.382 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.382 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.383 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( ( ( generatedAlias0.lastName=:param2 ) and ( generatedAlias0.gender=:param3 ) ) or ( generatedAlias0.firstName=:param4 ) )
23:22:00.388 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'firstName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'firstName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[OR] Node: 'or'
             +-[AND] Node: 'and'
             |  +-[EQ] Node: '='
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  |  \-[IDENT] Node: 'lastName'
             |  |  \-[COLON] Node: ':'
             |  |     \-[IDENT] Node: 'param2'
             |  \-[EQ] Node: '='
             |     +-[DOT] Node: '.'
             |     |  +-[IDENT] Node: 'generatedAlias0'
             |     |  \-[IDENT] Node: 'gender'
             |     \-[COLON] Node: ':'
             |        \-[IDENT] Node: 'param3'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias0'
                |  \-[IDENT] Node: 'firstName'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param4'

23:22:00.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[OR] SqlNode: 'or'
             +-[AND] SqlNode: 'and'
             |  +-[EQ] BinaryLogicOperatorNode: '='
             |  |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}
             |  \-[EQ] BinaryLogicOperatorNode: '='
             |     +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |     |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             |     \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.CustomType@794b139b}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
                |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
                |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param4, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.firstName like :param1 ) ) and ( ( ( generatedAlias0.lastName=:param2 ) and ( generatedAlias0.gender=:param3 ) ) or ( generatedAlias0.firstName=:param4 ) )
23:22:00.389 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.first_name like ?) and (customer0_.last_name=? and customer0_.gender=? or customer0_.first_name=?)
23:22:00.393 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@6fc471a8, testMethod = filtersAccordingToDisjunctionFilterExtendedByOtherDisjunctionFilter@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.394 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@1bdfa51f, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.394 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.394 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.395 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.404 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3bc645e0 testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceDisjunctionE2eTest@1bdfa51f, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithDisjunctionSpec@AnnotatedSpecInterfaceDisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6943732d testClass = AnnotatedSpecInterfaceDisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.078 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest
23:22:00.408 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.409 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@399daaa9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@68be0478, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c3fc2b0, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5cb13543, org.springframework.test.context.support.DirtiesContextTestExecutionListener@82d149e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@10a84c27, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@128026c0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@474e12fe, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@27a7676d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@753cceca, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6699408b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@51f76744]
23:22:00.410 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4c810e2c, testMethod = filtersAccordingToFiltersInWholeInheritanceTree@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.411 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.411 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.412 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.416 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName=:param0 ) and ( ( generatedAlias0.gender in (:param1) ) and ( generatedAlias0.firstName in (:param2) ) ) and ( generatedAlias2.badgeType=:param3 )
23:22:00.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  \-[IDENT] Node: 'itemName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[AND] Node: 'and'
          |     +-[IN] Node: 'in'
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias0'
          |     |  |  \-[IDENT] Node: 'gender'
          |     |  \-[IN_LIST] Node: 'inList'
          |     |     \-[COLON] Node: ':'
          |     |        \-[IDENT] Node: 'param1'
          |     \-[IN] Node: 'in'
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias0'
          |        |  \-[IDENT] Node: 'firstName'
          |        \-[IN_LIST] Node: 'inList'
          |           \-[COLON] Node: ':'
          |              \-[IDENT] Node: 'param2'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'badgeType'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param3'

23:22:00.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, badges2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join badges badges2_ on customer0_.id=badges2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |  |  |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[AND] SqlNode: 'and'
          |     +-[IN] InLogicOperatorNode: 'in'
          |     |  +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
          |     |  \-[IN_LIST] SqlNode: 'inList'
          |     |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@794b139b}
          |     \-[IN] InLogicOperatorNode: 'in'
          |        +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |        |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |        |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |        \-[IN_LIST] SqlNode: 'inList'
          |           \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'badges2_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias2.badgeType,tableAlias=badges2_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'badges2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges2_}
             |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName=:param0 ) and ( ( generatedAlias0.gender in (:param1) ) and ( generatedAlias0.firstName in (:param2) ) ) and ( generatedAlias2.badgeType=:param3 )
23:22:00.417 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join badges badges2_ on customer0_.id=badges2_.customer_id where orders1_.item_name=? and (customer0_.gender in (?)) and (customer0_.first_name in (?)) and badges2_.badge_type=?
23:22:00.421 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@4c810e2c, testMethod = filtersAccordingToFiltersInWholeInheritanceTree@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.422 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1690283c, testMethod = doesNoFilteringIfParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.422 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.422 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.424 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.429 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1690283c, testMethod = doesNoFilteringIfParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.430 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@45fc10ea, testMethod = filtersAccordingToAnnotatedSimpleSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.431 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.431 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.432 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.439 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@45fc10ea, testMethod = filtersAccordingToAnnotatedSimpleSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.440 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1bd3701a, testMethod = filtersAccordingToAnnotatedSimpleSpecInterfaceExtendedWithParamSpecificSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.441 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.441 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.442 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.firstName like :param1 )
23:22:00.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:00.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.firstName like :param1 )
23:22:00.444 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and (customer0_.first_name like ?)
23:22:00.448 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1bd3701a, testMethod = filtersAccordingToAnnotatedSimpleSpecInterfaceExtendedWithParamSpecificSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.449 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@40c6afcf, testMethod = filtersAccordingToAnnotatedAndSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.449 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.449 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.451 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.gender=:param1 )
23:22:00.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gender'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:00.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gender' {propertyName=gender,dereferenceType=PRIMITIVE,getPropertyPath=gender,path=generatedAlias0.gender,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gender' {originalText=gender}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.CustomType@794b139b}

23:22:00.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.lastName like :param0 ) and ( generatedAlias0.gender=:param1 )
23:22:00.455 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.last_name like ?) and customer0_.gender=?
23:22:00.459 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@40c6afcf, testMethod = filtersAccordingToAnnotatedAndSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.460 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@5a3ae48, testMethod = filtersAccordingToAnnotatedOrSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.461 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.461 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.462 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.470 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@5a3ae48, testMethod = filtersAccordingToAnnotatedOrSpecInterface@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.471 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1c6d4f34, testMethod = filtersAccordingInterfaceSpecIfParamSpecParameterIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.471 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.471 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.473 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.477 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@1c6d4f34, testMethod = filtersAccordingInterfaceSpecIfParamSpecParameterIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.478 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@bceee99, testMethod = doesNotFilterAtAllIfBothIfaceAndParamParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.479 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.479 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.480 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.486 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@bceee99, testMethod = doesNotFilterAtAllIfBothIfaceAndParamParametersAreMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.486 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@51e74653, testMethod = filtersByConjunctionOfAnnotatedInterfaceAndItsParentClass@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.487 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.487 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.488 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.492 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.gold=:param2 )
23:22:00.493 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'firstName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'gold'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:00.493 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.BooleanType@670132b9}

23:22:00.493 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.firstName like :param0 ) or ( generatedAlias0.lastName like :param1 ) ) and ( generatedAlias0.gold=:param2 )
23:22:00.493 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where (customer0_.first_name like ? or customer0_.last_name like ?) and customer0_.gold=?
23:22:00.497 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@51e74653, testMethod = filtersByConjunctionOfAnnotatedInterfaceAndItsParentClass@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.497 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@fab9c32, testMethod = filtersAccordingToParamSpecificSpecIfInterfaceSpecParamIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.498 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.498 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.499 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.504 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@fab9c32, testMethod = filtersAccordingToParamSpecificSpecIfInterfaceSpecParamIsMissing@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.505 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@3cd0df14, testMethod = filtersAccordingToAnnotatedOrSpecInterfaceExtendedWithParamSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.505 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.505 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.506 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.511 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@2af16755 testClass = AnnotatedSpecInterfaceE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceE2eTest@3cd0df14, testMethod = filtersAccordingToAnnotatedOrSpecInterfaceExtendedWithParamSpec@AnnotatedSpecInterfaceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5611dbb9 testClass = AnnotatedSpecInterfaceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.105 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest
23:22:00.512 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.513 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1de0963a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4110a187, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4226618c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@57ba1828, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e7215a3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@aaa9973, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7b71a3ab, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c0d8fb5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@220c529a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7cb326a9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@a29be6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1a49f8b8]
23:22:00.514 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@5b45bcae, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.514 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.514 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.516 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.520 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( generatedAlias0.lastName=:param2 )
23:22:00.520 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[OR] Node: 'or'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias1'
          |  |     |  \-[IDENT] Node: 'badgeType'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[NUM_INT] Node: '1'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:00.521 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[NUM_INT] LiteralNode: '1'
          |     \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.521 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( generatedAlias0.lastName=:param2 )
23:22:00.521 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1 and customer0_.last_name=?
23:22:00.527 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@5b45bcae, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.528 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@1cebff9f, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.528 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.528 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.530 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.534 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) )
23:22:00.534 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[NUM_INT] Node: '1'
          |  \-[NUM_INT] Node: '1'
          \-[OR] Node: 'or'
             +-[LIKE] Node: 'like'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias2'
             |  |  \-[IDENT] Node: 'itemName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'param0'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'generatedAlias1'
                |  \-[IDENT] Node: 'badgeType'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'param1'

23:22:00.535 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[NUM_INT] LiteralNode: '1'
          |  \-[NUM_INT] LiteralNode: '1'
          \-[OR] SqlNode: 'or'
             +-[LIKE] BinaryLogicOperatorNode: 'like'
             |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
                |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
                |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
                \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.535 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( 1=1 ) and ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) )
23:22:00.535 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where 1=1 and (orders2_.item_name like ? or badges1_.badge_type=?)
23:22:00.539 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@1cebff9f, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.539 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@53a0331a, testMethod = filtersAccordingToCustomJoinsFilterExtendingOtherJoinsFilter@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.540 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.540 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.541 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( 1=1 ) and ( generatedAlias2.itemName like :param1 ) and ( 1=1 )
23:22:00.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  |  \-[IDENT] Node: 'badgeType'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[NUM_INT] Node: '1'
          |  |     \-[NUM_INT] Node: '1'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'itemName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:22:00.546 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  |  |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[NUM_INT] LiteralNode: '1'
          |  |     \-[NUM_INT] LiteralNode: '1'
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |     |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:22:00.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( 1=1 ) and ( generatedAlias2.itemName like :param1 ) and ( 1=1 )
23:22:00.547 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where badges1_.badge_type=? and 1=1 and (orders2_.item_name like ?) and 1=1
23:22:00.550 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@53a0331a, testMethod = filtersAccordingToCustomJoinsFilterExtendingOtherJoinsFilter@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.551 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@2b2cf103, testMethod = filtersAccordingToAnnotatedJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.552 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.552 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.553 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.554 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 )
23:22:00.555 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[LIKE] Node: 'like'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  \-[IDENT] Node: 'itemName'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias1'
          |     |  \-[IDENT] Node: 'badgeType'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:22:00.555 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:22:00.556 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 )
23:22:00.556 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1
23:22:00.559 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@2b2cf103, testMethod = filtersAccordingToAnnotatedJoinsSpec@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.560 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@4f0e977a, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.561 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.561 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.562 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.566 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 left join generatedAlias0.badges as generatedAlias3 left join generatedAlias0.orders as generatedAlias4 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( ( generatedAlias4.itemName like :param2 ) or ( generatedAlias3.badgeType=:param3 ) ) and ( 1=1 )
23:22:00.567 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias2'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias3'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias4'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[OR] Node: 'or'
          |  |  |  +-[LIKE] Node: 'like'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  |  |  |  \-[IDENT] Node: 'itemName'
          |  |  |  |  \-[COLON] Node: ':'
          |  |  |  |     \-[IDENT] Node: 'param0'
          |  |  |  \-[EQ] Node: '='
          |  |  |     +-[DOT] Node: '.'
          |  |  |     |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |     |  \-[IDENT] Node: 'badgeType'
          |  |  |     \-[COLON] Node: ':'
          |  |  |        \-[IDENT] Node: 'param1'
          |  |  \-[EQ] Node: '='
          |  |     +-[NUM_INT] Node: '1'
          |  |     \-[NUM_INT] Node: '1'
          |  \-[OR] Node: 'or'
          |     +-[LIKE] Node: 'like'
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[IDENT] Node: 'generatedAlias4'
          |     |  |  \-[IDENT] Node: 'itemName'
          |     |  \-[COLON] Node: ':'
          |     |     \-[IDENT] Node: 'param2'
          |     \-[EQ] Node: '='
          |        +-[DOT] Node: '.'
          |        |  +-[IDENT] Node: 'generatedAlias3'
          |        |  \-[IDENT] Node: 'badgeType'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'param3'
          \-[EQ] Node: '='
             +-[NUM_INT] Node: '1'
             \-[NUM_INT] Node: '1'

23:22:00.567 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=5, fromElements=5, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1, generatedAlias4, generatedAlias3], fromElementByTableAlias=[orders2_, badges1_, orders4_, badges3_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     +-[JOIN_FRAGMENT] FromElement: 'left outer join badges badges3_ on customer0_.id=badges3_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges3_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders4_ on customer0_.id=orders4_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias4,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders4_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[OR] SqlNode: 'or'
          |  |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  |  +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
          |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
          |  |  |  |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          |  |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |  |     +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  |     |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[NUM_INT] LiteralNode: '1'
          |  |     \-[NUM_INT] LiteralNode: '1'
          |  \-[OR] SqlNode: 'or'
          |     +-[LIKE] BinaryLogicOperatorNode: 'like'
          |     |  +-[DOT] DotNode: 'orders4_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias4.itemName,tableAlias=orders4_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias4}
          |     |  |  +-[ALIAS_REF] IdentNode: 'orders4_.id' {alias=generatedAlias4, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders4_}
          |     |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |     |  \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}
          |     \-[EQ] BinaryLogicOperatorNode: '='
          |        +-[DOT] DotNode: 'badges3_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias3.badgeType,tableAlias=badges3_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias3}
          |        |  +-[ALIAS_REF] IdentNode: 'badges3_.id' {alias=generatedAlias3, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges3_}
          |        |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=param3, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[NUM_INT] LiteralNode: '1'
             \-[NUM_INT] LiteralNode: '1'

23:22:00.567 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join generatedAlias0.badges as generatedAlias1 left join generatedAlias0.orders as generatedAlias2 left join generatedAlias0.badges as generatedAlias3 left join generatedAlias0.orders as generatedAlias4 where ( ( generatedAlias2.itemName like :param0 ) or ( generatedAlias1.badgeType=:param1 ) ) and ( 1=1 ) and ( ( generatedAlias4.itemName like :param2 ) or ( generatedAlias3.badgeType=:param3 ) ) and ( 1=1 )
23:22:00.567 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ left outer join badges badges1_ on customer0_.id=badges1_.customer_id left outer join orders orders2_ on customer0_.id=orders2_.customer_id left outer join badges badges3_ on customer0_.id=badges3_.customer_id left outer join orders orders4_ on customer0_.id=orders4_.customer_id where (orders2_.item_name like ? or badges1_.badge_type=?) and 1=1 and (orders4_.item_name like ? or badges3_.badge_type=?) and 1=1
23:22:00.572 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4f2e5a0b testClass = AnnotatedSpecInterfaceJoinsE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinsE2eTest@4f0e977a, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinsE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@145b7283 testClass = AnnotatedSpecInterfaceJoinsE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 sec
Running net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest
23:22:00.573 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.574 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7cd1d235, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1736262a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7252e063, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5edd0a7e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2c6f2bea, org.springframework.test.context.transaction.TransactionalTestExecutionListener@ace5f3b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ffae7f9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@59428e82, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@c27de3b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@74e87f03, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4c159b48, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1ee3ad6]
23:22:00.575 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@2de22551, testMethod = filtersAccordingToItemNameBadgeTypeFilter@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.575 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.575 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.577 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.581 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName=:param0 ) and ( generatedAlias2.badgeType=:param1 )
23:22:00.581 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'itemName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'badgeType'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:00.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, badges2_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join badges badges2_ on customer0_.id=badges2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'orders1_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias1.itemName,tableAlias=orders1_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'orders1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders1_}
          |  |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'badges2_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias2.badgeType,tableAlias=badges2_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'badges2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges2_}
             |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.orders as generatedAlias1 inner join generatedAlias0.badges as generatedAlias2 where ( generatedAlias1.itemName=:param0 ) and ( generatedAlias2.badgeType=:param1 )
23:22:00.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join badges badges2_ on customer0_.id=badges2_.customer_id where orders1_.item_name=? and badges2_.badge_type=?
23:22:00.586 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@2de22551, testMethod = filtersAccordingToItemNameBadgeTypeFilter@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.587 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@71b8c7c5, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.587 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.587 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.589 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.592 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 )
23:22:00.593 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'badges'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'orders'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'badgeType'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'itemName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:00.593 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders2_, badges1_, customer0_], fromElementsByPath=[generatedAlias0.orders, generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders2_ on customer0_.id=orders2_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders2_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'orders2_.item_name' {propertyName=itemName,dereferenceType=PRIMITIVE,getPropertyPath=itemName,path=generatedAlias2.itemName,tableAlias=orders2_,className=net.kaczmarzyk.spring.data.jpa.Order,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'orders2_.id' {alias=generatedAlias2, className=net.kaczmarzyk.spring.data.jpa.Order, tableAlias=orders2_}
             |  \-[IDENT] IdentNode: 'itemName' {originalText=itemName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.593 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 inner join generatedAlias0.orders as generatedAlias2 where ( generatedAlias1.badgeType=:param0 ) and ( generatedAlias2.itemName=:param1 )
23:22:00.593 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id inner join orders orders2_ on customer0_.id=orders2_.customer_id where badges1_.badge_type=? and orders2_.item_name=?
23:22:00.597 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@71b8c7c5, testMethod = filtersAccordingToInterfaceWithJoinSpecExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.598 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@2007a050, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.598 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.598 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.600 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.610 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 where generatedAlias1.badgeType=:param0
23:22:00.610 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'badges'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'badgeType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.611 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (badges,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[badges1_, customer0_], fromElementsByPath=[generatedAlias0.badges], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join badges badges1_ on customer0_.id=badges1_.customer_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.badges,tableName=badges,tableAlias=badges1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Badge}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'badges1_.badge_type' {propertyName=badgeType,dereferenceType=PRIMITIVE,getPropertyPath=badgeType,path=generatedAlias1.badgeType,tableAlias=badges1_,className=net.kaczmarzyk.spring.data.jpa.Badge,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'badges1_.id' {alias=generatedAlias1, className=net.kaczmarzyk.spring.data.jpa.Badge, tableAlias=badges1_}
          |  \-[IDENT] IdentNode: 'badgeType' {originalText=badgeType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52539624}

23:22:00.611 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join generatedAlias0.badges as generatedAlias1 where generatedAlias1.badgeType=:param0
23:22:00.611 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ inner join badges badges1_ on customer0_.id=badges1_.customer_id where badges1_.badge_type=?
23:22:00.615 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@2007a050, testMethod = filtersAccordingToEmptyFilterExtendingInterfaceWithJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.616 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@65209097, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.616 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.616 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.617 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.622 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@65209097, testMethod = filtersAccordingToEmptyFilterExtendingSpecParam@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.623 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@75d1477a, testMethod = filtersAccordingToAnnotatedJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.623 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.623 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.625 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.629 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@6865832d testClass = AnnotatedSpecInterfaceJoinE2eTest, testInstance = net.kaczmarzyk.e2e.annotated.AnnotatedSpecInterfaceJoinE2eTest@75d1477a, testMethod = filtersAccordingToAnnotatedJoinSpec@AnnotatedSpecInterfaceJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4c59af34 testClass = AnnotatedSpecInterfaceJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.056 sec
Running net.kaczmarzyk.e2e.converter.DateE2eTest
23:22:00.630 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.630 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@41717985, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ad1b8d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@45eda6e7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4411aea2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@e664af4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@627b59c6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4a0901f0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3a4d2ad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3f2919c7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7a4c28d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5a04508, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2034ceab]
23:22:00.632 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@66f4c5cb, testMethod = findsByDateBeforeWithCustomDateFormat@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.632 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.632 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.634 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.638 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@66f4c5cb, testMethod = findsByDateBeforeWithCustomDateFormat@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.639 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@53b9d387, testMethod = findsByDateBetween@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.639 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.639 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.641 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.647 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@53b9d387, testMethod = findsByDateBetween@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.648 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@6c2b5639, testMethod = findsByDateAfter@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.648 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.648 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.650 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.654 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7b268b78 testClass = DateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.DateE2eTest@6c2b5639, testMethod = findsByDateAfter@DateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@40f42ae testClass = DateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest
23:22:00.657 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.658 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@ca97f0e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1084b6f7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5092d376, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ff28a30, org.springframework.test.context.support.DirtiesContextTestExecutionListener@48e4d5cf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d62e12a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3bad9493, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@20953adc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4eb1c9ac, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@24300ae1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@736e0bf8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a249c93]
23:22:00.659 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@35f045d, testMethod = findsByDateTimeAfterWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.659 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.659 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.661 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.662 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime>:param0
23:22:00.663 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.663 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@43969c2c}

23:22:00.663 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime>:param0
23:22:00.663 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time>?
23:22:00.667 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@35f045d, testMethod = findsByDateTimeAfterWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.668 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@4da18e2c, testMethod = findsByDateTimeAfterWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.668 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.668 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.670 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.674 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@4da18e2c, testMethod = findsByDateTimeAfterWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.675 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@318d441f, testMethod = findsByDateTimeBeforeWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.676 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.676 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.677 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime<:param0
23:22:00.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@43969c2c}

23:22:00.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime<:param0
23:22:00.679 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time<?
23:22:00.683 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@318d441f, testMethod = findsByDateTimeBeforeWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.683 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@49d61ca8, testMethod = findsByDateTimeBeforeWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.684 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.684 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.685 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.689 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@49d61ca8, testMethod = findsByDateTimeBeforeWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.690 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@5b4a84c0, testMethod = findsByDateTimeBetweenWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.691 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.691 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.692 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.693 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime between :param0 and :param1
23:22:00.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastOrderTime'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:00.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.last_order_time' {propertyName=lastOrderTime,dereferenceType=PRIMITIVE,getPropertyPath=lastOrderTime,path=generatedAlias0.lastOrderTime,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'lastOrderTime' {originalText=lastOrderTime}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@43969c2c}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.LocalDateTimeType@43969c2c}

23:22:00.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.lastOrderTime between :param0 and :param1
23:22:00.694 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.last_order_time between ? and ?
23:22:00.698 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@5b4a84c0, testMethod = findsByDateTimeBetweenWithCustomDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.698 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@4a38e868, testMethod = findsByDateTimeBetweenWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.699 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.699 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.700 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.710 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@49ee30ca testClass = LocalDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateTimeE2eTest@4a38e868, testMethod = findsByDateTimeBetweenWithDefaultDateFormat@LocalDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b4b2bfa testClass = LocalDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
Running net.kaczmarzyk.e2e.converter.UUIDE2eTest
23:22:00.711 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.711 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7b17b5ba, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1d8cbdf, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@638f22cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@19ceff86, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5fb23360, org.springframework.test.context.transaction.TransactionalTestExecutionListener@18f38d7a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@27045ea, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6caca8ed, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@224bbf2b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@26d76e45, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@26883060, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2f6a0f9c]
23:22:00.713 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@5437eaca, testMethod = findsByUUIDEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.713 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.713 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.715 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.716 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode=:param0
23:22:00.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}

23:22:00.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode=:param0
23:22:00.717 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code=?
23:22:00.721 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@5437eaca, testMethod = findsByUUIDEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.722 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@65df014, testMethod = findByUUIDNotIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.723 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.723 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.724 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode not in (:param0, :param1)
23:22:00.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NOT_IN] Node: 'not in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:00.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT_IN] InLogicOperatorNode: 'not in'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}

23:22:00.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode not in (:param0, :param1)
23:22:00.726 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code not in  (? , ?)
23:22:00.730 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@65df014, testMethod = findByUUIDNotIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.730 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@799ace5b, testMethod = findsByUUIDNotEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.731 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.731 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.732 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.734 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode<>:param0
23:22:00.734 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.734 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}

23:22:00.734 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode<>:param0
23:22:00.734 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code<>?
23:22:00.738 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@799ace5b, testMethod = findsByUUIDNotEqual@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.739 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@a50da66, testMethod = findByUUIDIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.739 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.739 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.741 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode in (:param0, :param1)
23:22:00.742 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'refCode'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'param0'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:00.743 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'customer0_.ref_code' {propertyName=refCode,dereferenceType=PRIMITIVE,getPropertyPath=refCode,path=generatedAlias0.refCode,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'refCode' {originalText=refCode}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.UUIDBinaryType@582d0b6b}

23:22:00.743 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.refCode in (:param0, :param1)
23:22:00.743 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.ref_code in (? , ?)
23:22:00.747 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@3f88de11 testClass = UUIDE2eTest, testInstance = net.kaczmarzyk.e2e.converter.UUIDE2eTest@a50da66, testMethod = findByUUIDIn@UUIDE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@592d034c testClass = UUIDE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running net.kaczmarzyk.e2e.converter.LocalDateE2eTest
23:22:00.748 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.749 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@876a3b3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@74be2d81, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4dab7ec2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@23e9f343, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1ebfb7b6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1be853c5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@da36314, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@613cfa08, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@25de39e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5b72fe6b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4ddf9dd2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4b35d2db]
23:22:00.750 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@529d2e69, testMethod = findsByDateAfterWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.750 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.750 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.752 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.754 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>:param0
23:22:00.754 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.754 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@1ac32da1}

23:22:00.754 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate>:param0
23:22:00.754 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date>?
23:22:00.758 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@529d2e69, testMethod = findsByDateAfterWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.758 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@a6c816a, testMethod = findsByDateBeforeWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.759 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.759 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.760 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.762 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate<:param0
23:22:00.762 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.762 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@1ac32da1}

23:22:00.762 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate<:param0
23:22:00.762 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date<?
23:22:00.766 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@a6c816a, testMethod = findsByDateBeforeWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.766 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@4ffb96e3, testMethod = findsByDateBeforeWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.767 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.767 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.768 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.773 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@4ffb96e3, testMethod = findsByDateBeforeWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.773 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@6adaccf5, testMethod = findsByDateAfterWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.774 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.774 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.775 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.780 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@6adaccf5, testMethod = findsByDateAfterWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.781 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@e7a966e, testMethod = findsByDateBetweenWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.781 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.781 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.783 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.784 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate between :param0 and :param1
23:22:00.784 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'birthDate'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:00.785 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=generatedAlias0.birthDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateType@1ac32da1}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.LocalDateType@1ac32da1}

23:22:00.785 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.birthDate between :param0 and :param1
23:22:00.785 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.birth_date between ? and ?
23:22:00.788 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@e7a966e, testMethod = findsByDateBetweenWithDefaultDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.789 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@1bd61926, testMethod = findsByDateBetweenWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.789 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.789 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.791 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.796 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5865251d testClass = LocalDateE2eTest, testInstance = net.kaczmarzyk.e2e.converter.LocalDateE2eTest@1bd61926, testMethod = findsByDateBetweenWithCustomDateFormat@LocalDateE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1116672f testClass = LocalDateE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec
Running net.kaczmarzyk.e2e.converter.InstantE2eTest
23:22:00.797 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.797 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@40d67206, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7547fcc5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5d010de3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2e9afb2a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5d2ffabd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@17449409, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@42ffed17, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b451dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@191df20e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2acad9f8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@17600ee3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4d8e293]
23:22:00.798 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@727782da, testMethod = findsByInstantAfterWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.799 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.799 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.800 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.803 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant>:param0
23:22:00.803 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.804 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@2cc30d13}

23:22:00.804 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant>:param0
23:22:00.804 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant>?
23:22:00.807 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@727782da, testMethod = findsByInstantAfterWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.808 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@fc544d4, testMethod = findsByInstantBetweenWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.808 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.808 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.809 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.811 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant between :param0 and :param1
23:22:00.812 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:00.812 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@2cc30d13}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.InstantType@2cc30d13}

23:22:00.812 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant between :param0 and :param1
23:22:00.812 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant between ? and ?
23:22:00.817 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@fc544d4, testMethod = findsByInstantBetweenWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.817 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@c841ea3, testMethod = findsByInstantBetweenWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.818 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.818 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.819 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.824 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@c841ea3, testMethod = findsByInstantBetweenWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.825 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@7e4d743c, testMethod = findsByInstantBeforeWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.825 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.825 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.827 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.828 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant<:param0
23:22:00.828 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOfferInstant'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer_instant' {propertyName=dateOfNextSpecialOfferInstant,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOfferInstant,path=generatedAlias0.dateOfNextSpecialOfferInstant,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOfferInstant' {originalText=dateOfNextSpecialOfferInstant}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.InstantType@2cc30d13}

23:22:00.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOfferInstant<:param0
23:22:00.829 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer_instant<?
23:22:00.832 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@7e4d743c, testMethod = findsByInstantBeforeWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.833 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@493626bc, testMethod = findsByInstantBeforeWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.833 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.833 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.835 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.839 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@493626bc, testMethod = findsByInstantBeforeWithCustomInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.840 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@42b8bc3a, testMethod = findsByInstantAfterWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.841 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.841 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.842 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.847 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@5ff6744a testClass = InstantE2eTest, testInstance = net.kaczmarzyk.e2e.converter.InstantE2eTest@42b8bc3a, testMethod = findsByInstantAfterWithDefaultInstantFormat@InstantE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36430024 testClass = InstantE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.05 sec
Running net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest
23:22:00.848 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.849 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@39215bc9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6034ef16, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2fc13bf6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@52f7e639, org.springframework.test.context.support.DirtiesContextTestExecutionListener@613b10bd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@26b01fd3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@88e78, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6da3766e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@54242d9f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@72ccfe4f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3673c520, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4095c586]
23:22:00.850 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@511c856b, testMethod = findsByOffsetDateTimeAfterWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.850 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.850 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.852 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.854 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer>:param0
23:22:00.854 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.854 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@73bac21e}

23:22:00.854 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer>:param0
23:22:00.854 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer>?
23:22:00.858 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@511c856b, testMethod = findsByOffsetDateTimeAfterWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.858 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@4b0ed578, testMethod = findsByOffsetDateTimeBeforeWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.859 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.859 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.860 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.862 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer<:param0
23:22:00.862 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:00.862 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@73bac21e}

23:22:00.862 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer<:param0
23:22:00.862 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer<?
23:22:00.866 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@4b0ed578, testMethod = findsByOffsetDateTimeBeforeWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.866 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@ed870c0, testMethod = findsByOffsetDateTimeBetweenWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.867 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.867 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.868 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer between :param0 and :param1
23:22:00.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'dateOfNextSpecialOffer'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param1'

23:22:00.870 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'customer0_.date_of_next_special_offer' {propertyName=dateOfNextSpecialOffer,dereferenceType=PRIMITIVE,getPropertyPath=dateOfNextSpecialOffer,path=generatedAlias0.dateOfNextSpecialOffer,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'dateOfNextSpecialOffer' {originalText=dateOfNextSpecialOffer}
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.OffsetDateTimeType@73bac21e}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.OffsetDateTimeType@73bac21e}

23:22:00.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.dateOfNextSpecialOffer between :param0 and :param1
23:22:00.871 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.date_of_next_special_offer between ? and ?
23:22:00.874 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@ed870c0, testMethod = findsByOffsetDateTimeBetweenWithCustomOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.875 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@46db5b93, testMethod = findsByOffsetDateTimeBetweenWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.875 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.875 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.877 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:00.882 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@46db5b93, testMethod = findsByOffsetDateTimeBetweenWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.883 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@46f358a9, testMethod = findsByOffsetDateTimeBeforeWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.884 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.884 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.885 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.890 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@46f358a9, testMethod = findsByOffsetDateTimeBeforeWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:00.890 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@1db9b7e0, testMethod = findsByOffsetDateTimeAfterWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:00.891 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:00.891 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:00.892 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:00.897 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@933a839 testClass = OffsetDateTimeE2eTest, testInstance = net.kaczmarzyk.e2e.converter.OffsetDateTimeE2eTest@1db9b7e0, testMethod = findsByOffsetDateTimeAfterWithDefaultOffsetDateTimeFormat@OffsetDateTimeE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5e0326b1 testClass = OffsetDateTimeE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest
23:22:00.898 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:00.898 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@46c03fe4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@37babe0e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1886b84c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@363a1a03, org.springframework.test.context.support.DirtiesContextTestExecutionListener@71422c3f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13eab6d7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3e03283e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@588fd7ff, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@384c3b05, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7e566ed5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@59b3fbf9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7f25ff1f]
23:22:01.023 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
23:22:01.037 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14ms. Found 3 repository interfaces.
23:22:01.071 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4576a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
23:22:01.095 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
23:22:01.096 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
23:22:01.107 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
23:22:01.121 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:22:01.171 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5fd31df7'
23:22:01.171 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
23:22:01.281 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
23:22:01.285 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
23:22:01.345 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7a238e5f testClass = ConverterWithConversionServiceE2eTest, testInstance = net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest@7606579, testMethod = findsByAddressUsing@ConverterWithConversionServiceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@135c307f testClass = ConverterWithConversionServiceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithConfiguredConversionService}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5b7437a8]; rollback [true]
23:22:01.346 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.346 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.348 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:01.349 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
23:22:01.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address=:param0
23:22:01.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'address'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

23:22:01.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.street' {propertyName=address,dereferenceType=COMPONENT,getPropertyPath=address,path=generatedAlias0.address,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'address' {originalText=address}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ComponentType@53884783}

23:22:01.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where generatedAlias0.address=:param0
23:22:01.350 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.street=?
23:22:01.357 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@7a238e5f testClass = ConverterWithConversionServiceE2eTest, testInstance = net.kaczmarzyk.e2e.converter.ConverterWithConversionServiceE2eTest@7606579, testMethod = findsByAddressUsing@ConverterWithConversionServiceE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@135c307f testClass = ConverterWithConversionServiceE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.ApplicationWithConfiguredConversionService}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.46 sec
Running net.kaczmarzyk.AndE2eTest
23:22:01.358 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:01.358 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3b28cc2b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@502d9495, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@36010af3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@79688d97, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4dc4f05, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3869fa37, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@681395b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b381829, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5d7adc2c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2ab53df6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2571821a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5e732fcd]
23:22:01.360 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@758a41b0 testClass = AndE2eTest, testInstance = net.kaczmarzyk.AndE2eTest@75c2692b, testMethod = findsByGoldenCusomersByLastName@AndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1de614f7 testClass = AndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.360 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.360 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.362 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:01.363 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 )
23:22:01.363 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'gold'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:01.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}

23:22:01.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 )
23:22:01.364 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (upper(customer0_.last_name) like ?)
23:22:01.368 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@758a41b0 testClass = AndE2eTest, testInstance = net.kaczmarzyk.AndE2eTest@75c2692b, testMethod = findsByGoldenCusomersByLastName@AndE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1de614f7 testClass = AndE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.utils.LoggedQueryTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running net.kaczmarzyk.MultiLevelFetchJoinE2eTest
23:22:01.370 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:01.370 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5f832a1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@77ebd2ca, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6b90ad8c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5bb9ce5b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1f1092b7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@36447e1d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@58565994, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4d088fd3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@569639ef, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@43b701b6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@29c76aad, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@20381e51]
23:22:01.372 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@19b4dbb0, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.372 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.373 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.374 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:01.379 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 left join fetch generatedAlias1.note as generatedAlias3 where 1=1 order by generatedAlias0.id asc
23:22:01.379 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
    |  |  |  |  \-[IDENT] Node: 'tags'
    |  |  |  \-[ALIAS] Node: 'generatedAlias2'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'note'
    |  |     \-[ALIAS] Node: 'generatedAlias3'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:01.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (order_note,item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ordernote4_.id as id1_6_3_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote4_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    |  \-[SQL_TOKEN] SqlFragment: 'ordernote4_.customer_id as customer3_6_3_, ordernote4_.title as title2_6_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=4, fromElements=4, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1, generatedAlias3], fromElementByTableAlias=[orders1_, ordernote4_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags, generatedAlias1.note], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        +-[JOIN_FRAGMENT] FromElement: 'left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join order_note ordernote4_ on orders1_.note_id=ordernote4_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias3,role=net.kaczmarzyk.spring.data.jpa.Order.note,tableName=order_note,tableAlias=ordernote4_,origin=left outer join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.note_id ,className=net.kaczmarzyk.spring.data.jpa.OrderNote}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:01.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 left join fetch generatedAlias0.orders as generatedAlias1 left join fetch generatedAlias1.tags as generatedAlias2 left join fetch generatedAlias1.note as generatedAlias3 where 1=1 order by generatedAlias0.id asc
23:22:01.380 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, ordernote4_.id as id1_6_3_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__, ordernote4_.customer_id as customer3_6_3_, ordernote4_.title as title2_6_3_ from customer customer0_ left outer join orders orders1_ on customer0_.id=orders1_.customer_id left outer join orders_tags tags2_ on orders1_.id=tags2_.order_id left outer join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id left outer join order_note ordernote4_ on orders1_.note_id=ordernote4_.id where 1=1 order by customer0_.id asc
23:22:01.407 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.ItemTag as generatedAlias0
23:22:01.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'net'
       |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'ItemTag'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

23:22:01.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'itemtag0_.id as id1_2_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.ItemTag, tableAlias=itemtag0_}
    |  \-[SQL_TOKEN] SqlFragment: 'itemtag0_.name as name2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[itemtag0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'item_tags itemtag0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=item_tags,tableAlias=itemtag0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}

23:22:01.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.ItemTag as generatedAlias0
23:22:01.408 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select itemtag0_.id as id1_2_, itemtag0_.name as name2_2_ from item_tags itemtag0_
23:22:01.419 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@19b4dbb0, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:01.421 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@6254b3ce, testMethod = shouldFindCustomersUsingInnerFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.421 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.421 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.423 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:01.426 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:01.426 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  |  \-[IDENT] Node: 'data'
    |  |  |  |  |  \-[IDENT] Node: 'jpa'
    |  |  |  |  \-[IDENT] Node: 'Customer'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'orders'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias1'
    |  |     |  \-[IDENT] Node: 'tags'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[NUM_INT] Node: '1'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'asc'

23:22:01.426 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (item_tags,orders_tags,orders,customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_0_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orders1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'itemtag3_.id as id1_2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__'
    |  +-[SQL_TOKEN] SqlFragment: 'itemtag3_.name as name2_2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[orders1_, customer0_, itemtag3_], fromElementsByPath=[generatedAlias0.orders, generatedAlias1.tags], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join orders orders1_ on customer0_.id=orders1_.customer_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=net.kaczmarzyk.spring.data.jpa.Customer.orders,tableName=orders,tableAlias=orders1_,origin=customer customer0_,columns={customer0_.id ,className=net.kaczmarzyk.spring.data.jpa.Order}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=net.kaczmarzyk.spring.data.jpa.Order.tags,tableName=item_tags,tableAlias=itemtag3_,origin=inner join orders orders1_ on customer0_.id=orders1_.customer_id,columns={orders1_.id ,className=net.kaczmarzyk.spring.data.jpa.ItemTag}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[NUM_INT] LiteralNode: '1'
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'customer0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'asc'

23:22:01.427 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 inner join fetch generatedAlias0.orders as generatedAlias1 inner join fetch generatedAlias1.tags as generatedAlias2 where 1=1 order by generatedAlias0.id asc
23:22:01.427 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct customer0_.id as id1_1_0_, orders1_.id as id1_7_1_, itemtag3_.id as id1_2_2_, customer0_.street as street2_1_0_, customer0_.birth_date as birth_da3_1_0_, customer0_.date_of_next_special_offer as date_of_4_1_0_, customer0_.date_of_next_special_offer_instant as date_of_5_1_0_, customer0_.first_name as first_na6_1_0_, customer0_.gender as gender7_1_0_, customer0_.gender_as_string as gender_a8_1_0_, customer0_.gold as gold9_1_0_, customer0_.gold_obj as gold_ob10_1_0_, customer0_.last_name as last_na11_1_0_, customer0_.last_order_time as last_or12_1_0_, customer0_.nick_name as nick_na13_1_0_, customer0_.occupation as occupat14_1_0_, customer0_.ref_code as ref_cod15_1_0_, customer0_.registration_date as registr16_1_0_, customer0_.weight as weight17_1_0_, customer0_.weight_big_decimal as weight_18_1_0_, customer0_.weight_double as weight_19_1_0_, customer0_.weight_float as weight_20_1_0_, customer0_.weight_int as weight_21_1_0_, customer0_.weight_long as weight_22_1_0_, orders1_.customer_id as customer3_7_1_, orders1_.customer2_id as customer4_7_1_, orders1_.item_name as item_nam2_7_1_, orders1_.note_id as note_id5_7_1_, orders1_.customer_id as customer3_7_0__, orders1_.id as id1_7_0__, itemtag3_.name as name2_2_2_, tags2_.order_id as order_id1_8_1__, tags2_.tags_id as tags_id2_8_1__ from customer customer0_ inner join orders orders1_ on customer0_.id=orders1_.customer_id inner join orders_tags tags2_ on orders1_.id=tags2_.order_id inner join item_tags itemtag3_ on tags2_.tags_id=itemtag3_.id where 1=1 order by customer0_.id asc
23:22:01.441 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@6254b3ce, testMethod = shouldFindCustomersUsingInnerFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:01.441 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@13d664e7, testMethod = shouldFindCustomersUsingLeftFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.442 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.442 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.443 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:01.486 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@13d664e7, testMethod = shouldFindCustomersUsingLeftFetchJoins@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:01.487 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@5f1b6fbf, testMethod = shouldFindAllCustomersWithoutUsingJoinFetches@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.487 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.487 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.489 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:01.502 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@5f1b6fbf, testMethod = shouldFindAllCustomersWithoutUsingJoinFetches@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:01.503 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@12d6aad5, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes_withPagination@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.503 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.503 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.505 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:01.508 [main] WARN  o.h.h.i.ast.QueryTranslatorImpl - HHH000104: firstResult/maxResults specified with collection fetch; applying in memory!
23:22:01.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 1=1
23:22:01.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[COUNT] Node: 'count'
    |        +-[DISTINCT] Node: 'distinct'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[NUM_INT] Node: '1'
          \-[NUM_INT] Node: '1'

23:22:01.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[COUNT] CountNode: 'count'
    |  |  +-[DISTINCT] SqlNode: 'distinct'
    |  |  \-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[NUM_INT] LiteralNode: '1'
          \-[NUM_INT] LiteralNode: '1'

23:22:01.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select distinct count(distinct generatedAlias0) from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where 1=1
23:22:01.510 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select distinct count(distinct customer0_.id) as col_0_0_ from customer customer0_ where 1=1
23:22:01.522 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@510a6317 testClass = MultiLevelFetchJoinE2eTest, testInstance = net.kaczmarzyk.MultiLevelFetchJoinE2eTest@12d6aad5, testMethod = shouldFindCustomersWithFetchedOrderWithTagsAndNotes_withPagination@MultiLevelFetchJoinE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2ea74138 testClass = MultiLevelFetchJoinE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.153 sec
Running net.kaczmarzyk.DisjunctionE2eTest
23:22:01.523 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:01.523 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@29cd9ce5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@601e9c19, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4762c011, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@62ef35b3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2700b7bf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33ea1912, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@62593536, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7980c663, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5b1f3ba3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@385e9b5b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1385e9e3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6c49862e]
23:22:01.524 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1b322f02 testClass = DisjunctionE2eTest, testInstance = net.kaczmarzyk.DisjunctionE2eTest@14fb9efa, testMethod = findsByLastNameOrGoldenByFirstName@DisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1693c96e testClass = DisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.525 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.525 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.526 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:01.528 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 ) ) or ( upper(generatedAlias0.firstName) like :param2 )
23:22:01.528 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'gold'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[LIKE] Node: 'like'
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'upper'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[DOT] Node: '.'
          |     |        +-[IDENT] Node: 'generatedAlias0'
          |     |        \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'upper'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'generatedAlias0'
             |        \-[IDENT] Node: 'firstName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

23:22:01.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customer0_.gold' {propertyName=gold,dereferenceType=PRIMITIVE,getPropertyPath=gold,path=generatedAlias0.gold,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  |  \-[IDENT] IdentNode: 'gold' {originalText=gold}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BooleanType@670132b9}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |     |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |     |        \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52539624}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'upper' {originalText=upper}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |        +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@52539624}

23:22:01.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( ( generatedAlias0.gold=:param0 ) and ( upper(generatedAlias0.lastName) like :param1 ) ) or ( upper(generatedAlias0.firstName) like :param2 )
23:22:01.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.gold=? and (upper(customer0_.last_name) like ?) or upper(customer0_.first_name) like ?
23:22:01.533 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@1b322f02 testClass = DisjunctionE2eTest, testInstance = net.kaczmarzyk.DisjunctionE2eTest@14fb9efa, testMethod = findsByLastNameOrGoldenByFirstName@DisjunctionE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1693c96e testClass = DisjunctionE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running net.kaczmarzyk.DateInclusiveE2eTest
23:22:01.534 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:01.534 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4b1eaf1e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e5db430, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7bb87304, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@734f0ba5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4d972c8d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1e38ed3b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@26209dab, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2db9a8e9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@59be0a97, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3665ae, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@22d97dc6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@42477794]
23:22:01.536 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48706fc1 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@28132c9, testMethod = findsByDateBeforeWithCustomDateFormat@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3b358b9f testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.536 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.536 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.538 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:01.545 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48706fc1 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@28132c9, testMethod = findsByDateBeforeWithCustomDateFormat@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3b358b9f testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:01.546 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48706fc1 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@5c794cf, testMethod = findsByDateBetween@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3b358b9f testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.546 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.546 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.547 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:01.549 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate<=:param0 ) and ( generatedAlias0.registrationDate>=:param1 )
23:22:01.549 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'kaczmarzyk'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LE] Node: '<='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'registrationDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'registrationDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

23:22:01.550 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id as id1_1_' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=net.kaczmarzyk.spring.data.jpa.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LE] BinaryLogicOperatorNode: '<='
          |  +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
          |  |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.TimestampType@6af10aa7}
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'customer0_.registration_date' {propertyName=registrationDate,dereferenceType=PRIMITIVE,getPropertyPath=registrationDate,path=generatedAlias0.registrationDate,tableAlias=customer0_,className=net.kaczmarzyk.spring.data.jpa.Customer,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.id' {alias=generatedAlias0, className=net.kaczmarzyk.spring.data.jpa.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'registrationDate' {originalText=registrationDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.TimestampType@6af10aa7}

23:22:01.550 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from net.kaczmarzyk.spring.data.jpa.Customer as generatedAlias0 where ( generatedAlias0.registrationDate<=:param0 ) and ( generatedAlias0.registrationDate>=:param1 )
23:22:01.550 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select customer0_.id as id1_1_, customer0_.street as street2_1_, customer0_.birth_date as birth_da3_1_, customer0_.date_of_next_special_offer as date_of_4_1_, customer0_.date_of_next_special_offer_instant as date_of_5_1_, customer0_.first_name as first_na6_1_, customer0_.gender as gender7_1_, customer0_.gender_as_string as gender_a8_1_, customer0_.gold as gold9_1_, customer0_.gold_obj as gold_ob10_1_, customer0_.last_name as last_na11_1_, customer0_.last_order_time as last_or12_1_, customer0_.nick_name as nick_na13_1_, customer0_.occupation as occupat14_1_, customer0_.ref_code as ref_cod15_1_, customer0_.registration_date as registr16_1_, customer0_.weight as weight17_1_, customer0_.weight_big_decimal as weight_18_1_, customer0_.weight_double as weight_19_1_, customer0_.weight_float as weight_20_1_, customer0_.weight_int as weight_21_1_, customer0_.weight_long as weight_22_1_ from customer customer0_ where customer0_.registration_date<=? and customer0_.registration_date>=?
23:22:01.553 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48706fc1 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@5c794cf, testMethod = findsByDateBetween@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3b358b9f testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
23:22:01.554 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48706fc1 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@76a4bb03, testMethod = findsByDateAfter@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3b358b9f testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.554 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.554 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.556 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
23:22:01.561 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@48706fc1 testClass = DateInclusiveE2eTest, testInstance = net.kaczmarzyk.DateInclusiveE2eTest@76a4bb03, testMethod = findsByDateAfter@DateInclusiveE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3b358b9f testClass = DateInclusiveE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running net.kaczmarzyk.IsNullE2eTest
23:22:01.562 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
23:22:01.563 [main] INFO  o.s.t.c.w.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@361986c2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2ac90548, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@679a6ab2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3e231755, org.springframework.test.context.support.DirtiesContextTestExecutionListener@44f6b9c5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@26f71756, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@128c36c0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@34b3127b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@457aadb9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5b294fe7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@28604874, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@46ca7c9]
23:22:01.564 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4e96956e testClass = IsNullE2eTest, testInstance = net.kaczmarzyk.IsNullE2eTest@41bde31, testMethod = findsEntitiesWithNullAttributeValue@IsNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66610869 testClass = IsNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6dcdc378]; rollback [true]
23:22:01.565 [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
23:22:01.565 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
23:22:01.566 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
23:22:01.571 [main] INFO  o.s.t.c.t.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4e96956e testClass = IsNullE2eTest, testInstance = net.kaczmarzyk.IsNullE2eTest@41bde31, testMethod = findsEntitiesWithNullAttributeValue@IsNullE2eTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@66610869 testClass = IsNullE2eTest, locations = '{}', classes = '{class net.kaczmarzyk.spring.data.jpa.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@491b9b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@aba625, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e0e1046, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@508dec2b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
23:22:01.580 [Thread-5] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:22:01.581 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:22:01.582 [Thread-5] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:22:01.591 [Thread-1] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:22:01.592 [Thread-1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] as said MBean is not registered (perhaps already unregistered by an external process)
23:22:01.593 [Thread-1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:22:01.593 [Thread-1] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:22:01.597 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
23:22:01.606 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
23:22:01.615 [Thread-3] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
23:22:01.616 [Thread-3] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] as said MBean is not registered (perhaps already unregistered by an external process)
23:22:01.617 [Thread-3] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
23:22:01.617 [Thread-3] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
23:22:01.618 [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
23:22:01.625 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
23:22:01.626 [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
23:22:01.627 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.

Results :

Tests run: 627, Failures: 0, Errors: 0, Skipped: 2

[INFO] 
[INFO] --- maven-license-plugin:1.10.b1:check (default) @ specification-arg-resolver ---
[INFO] Checking licenses...
[WARNING] Property 'strictCheck' is not enabled. Please consider adding <strictCheck>true</strictCheck> in your pom.xml file.
[WARNING] See http://code.google.com/p/maven-license-plugin/wiki/Configuration for more information.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  11.846 s
[INFO] Finished at: 2021-02-14T23:22:01Z
[INFO] ------------------------------------------------------------------------
